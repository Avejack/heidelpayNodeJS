{"version":3,"file":"index.umd.js","sources":["../src/configs/Version.ts","../src/payments/Customer.ts","../src/configs/Environment.ts","../src/adapters/FetchAdapter.ts","../src/services/mappers/ResponseErrorsMapper.ts","../src/services/CreatePaymentType.ts","../src/configs/ApiUrls.ts","../src/payments/business/AbstractPayment.ts","../src/payments/business/Resources.ts","../src/payments/business/Payment.ts","../src/payments/types/AbstractPaymentType.ts","../src/payments/types/Alipay.ts","../src/payments/types/Bancontact.ts","../src/payments/types/Card.ts","../src/payments/types/Eps.ts","../src/payments/types/Giropay.ts","../src/payments/types/HirePurchase.ts","../src/payments/types/Ideal.ts","../src/payments/types/Invoice.ts","../src/payments/types/InvoiceFactoring.ts","../src/payments/types/InvoiceGuaranteed.ts","../src/payments/types/InvoiceSecured.ts","../src/payments/types/Paypal.ts","../src/payments/types/Pis.ts","../src/payments/types/Prepayment.ts","../src/payments/types/Przelewy24.ts","../src/payments/types/SepaDirectDebit.ts","../src/payments/types/SepaDirectDebitGuaranteed.ts","../src/payments/types/SepaDirectDebitSecured.ts","../src/payments/types/Sofort.ts","../src/payments/types/WechatPay.ts","../src/utils/Utils.ts","../src/payments/business/Processing.ts","../src/payments/business/Cancel.ts","../src/services/FetchCancel.ts","../src/payments/business/Charge.ts","../src/services/FetchCharge.ts","../src/payments/business/Authorization.ts","../src/services/FetchAuthorization.ts","../src/services/FetchPayment.ts","../src/services/FetchPaymentType.ts","../src/services/mappers/ResponseCustomerMapper.ts","../src/services/CreateCustomer.ts","../src/services/UpdateCustomer.ts","../src/services/DeleteCustomer.ts","../src/services/FetchCustomer.ts","../src/payments/Metadata.ts","../src/services/CreateMetadata.ts","../src/services/FetchMetadata.ts","../src/payments/Basket.ts","../src/services/CreateBasket.ts","../src/services/FetchBasket.ts","../src/services/UpdateBasket.ts","../src/payments/business/Recurring.ts","../src/services/CreateRecurring.ts","../src/services/Authorization.ts","../src/services/Charge.ts","../src/services/ChargeAuthorization.ts","../src/services/CancelAuthorization.ts","../src/services/CancelCharge.ts","../src/payments/business/Shipment.ts","../src/services/Shipment.ts","../src/services/InitPaypage.ts","../src/services/mappers/ResponseLinkpayMapper.ts","../src/services/InitLinkpay.ts","../src/services/UpdateLinkpay.ts","../src/services/DeleteLinkpay.ts","../src/payments/business/Payout.ts","../src/services/Payout.ts","../src/services/FetchPayout.ts","../src/payments/types/HirePurchasePlan.ts","../src/services/FetchHirePurchasePlan.ts","../src/services/UpdateHirePurchase.ts","../src/payments/business/Webhook.ts","../src/services/RegisterWebhook.ts","../src/services/FetchWebhook.ts","../src/services/UpdateWebhook.ts","../src/services/DeleteWebhook.ts","../src/services/PaymentService.ts","../src/configs/ErrorMessage.ts","../src/Heidelpay.ts","../src/payments/paypage/Paypage.ts"],"sourcesContent":["export const SDK_TYPE = 'HeidelpayNodeJS'\r\nexport const SDK_VERSION = '1.3.1'","class Customer {\r\n  private _firstName: string\r\n  private _lastName: string\r\n  private _salutation: Salutation\r\n  private _customerId: string\r\n  private _company: string\r\n  private _birthDate: string\r\n  private _email: string\r\n  private _phone: string\r\n  private _mobile: string\r\n  private _billingAddress: Address\r\n  private _shippingAddress: Address\r\n  private _companyInfo: CompanyInfo\r\n\r\n  constructor(firstName: string = '', lastName: string = '') {\r\n    this._firstName = firstName\r\n    this._lastName = lastName\r\n  }\r\n\r\n  /**\r\n   * Get Request Payload\r\n   */\r\n  public getRequestPayload() {\r\n    return {\r\n      lastname: this.getLastName(),\r\n      firstname: this.getFirstName(),\r\n      salutation: this.getSalutation(),\r\n      birthDate: this.getBirthDate(),\r\n      company: this.getCompany(),\r\n      email: this.getEmail(),\r\n      phone: this.getPhone(),\r\n      mobile: this.getMobile(),\r\n      billingAddress: this.getBillingAddress(),\r\n      shippingAddress: this.getShippingAddress(),\r\n      companyInfo: this.getCompanyInfo(),\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set FirstName\r\n   *\r\n   * @param {string} value\r\n   * @returns {Customer}\r\n   */\r\n  public setFirstName(value: string): Customer {\r\n    this._firstName = value\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get first name property\r\n   *\r\n   * @type {string}\r\n   */\r\n  public getFirstName(): string {\r\n    return this._firstName\r\n  }\r\n\r\n  /**\r\n   * Set LastName\r\n   *\r\n   * @param {string} value\r\n   * @returns {Customer}\r\n   */\r\n  public setLastName(value: string): Customer {\r\n    this._lastName = value\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get last name property\r\n   *\r\n   * @type {string}\r\n   */\r\n  public getLastName(): string {\r\n    return this._lastName\r\n  }\r\n\r\n  /**\r\n   * Set Salutation\r\n   *\r\n   * @param {string} value\r\n   * @returns {Customer}\r\n   */\r\n  public setSalutation(value: Salutation): Customer {\r\n    this._salutation = value\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get salutation\r\n   *\r\n   * @type {Salutation}\r\n   */\r\n  public getSalutation(): Salutation {\r\n    return this._salutation\r\n  }\r\n\r\n  /**\r\n   * Set CustomerId\r\n   *\r\n   * @param {string} value\r\n   * @returns {Customer}\r\n   */\r\n  public setCustomerId(value: string): Customer {\r\n    this._customerId = value\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get customer Id\r\n   *\r\n   * @type {string}\r\n   */\r\n  public getCustomerId(): string {\r\n    return this._customerId\r\n  }\r\n\r\n  /**\r\n   * Set Company\r\n   *\r\n   * @param {string} value\r\n   * @returns {Customer}\r\n   */\r\n  public setCompany(value: string): Customer {\r\n    this._company = value\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get Company\r\n   *\r\n   * @type {string}\r\n   */\r\n  public getCompany(): string {\r\n    return this._company\r\n  }\r\n\r\n  /**\r\n   * Set Birthday\r\n   *\r\n   * @param {string} value\r\n   * @returns {Customer}\r\n   */\r\n  public setBirthDate(value: string): Customer {\r\n    this._birthDate = value\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get birthdate\r\n   *\r\n   * @type {Date}\r\n   */\r\n  public getBirthDate(): string {\r\n    return this._birthDate\r\n  }\r\n\r\n  /**\r\n   * Set Emaile\r\n   *\r\n   * @param {string} value\r\n   * @returns {Customer}\r\n   */\r\n  public setEmail(value: string): Customer {\r\n    this._email = value\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get email\r\n   *\r\n   * @type {string}\r\n   */\r\n  public getEmail(): string {\r\n    return this._email\r\n  }\r\n\r\n  /**\r\n   * Set Phone\r\n   *\r\n   * @param {string} value\r\n   * @returns {Customer}\r\n   */\r\n  public setPhone(value: string): Customer {\r\n    this._phone = value\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get phone\r\n   *\r\n   * @type {string}\r\n   */\r\n  public getPhone(): string {\r\n    return this._phone\r\n  }\r\n\r\n  /**\r\n   * Set Mobile\r\n   *\r\n   * @param {string} value\r\n   * @returns {Customer}\r\n   */\r\n  public setMobile(value: string): Customer {\r\n    this._mobile = value\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get mobile\r\n   *\r\n   * @type {string}\r\n   */\r\n  public getMobile(): string {\r\n    return this._mobile\r\n  }\r\n\r\n  /**\r\n   * Set Address\r\n   *\r\n   * @param {Address} value\r\n   * @returns {Customer}\r\n   */\r\n  public setBillingAddress(value: Address): Customer {\r\n    this._billingAddress = value\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get address\r\n   *\r\n   * @type {Address}\r\n   */\r\n  public getBillingAddress(): Address {\r\n    return this._billingAddress\r\n  }\r\n\r\n  /**\r\n   * Set Shipping Address\r\n   * @param value \r\n   */\r\n  public setShippingAddress(value: Address): Customer {\r\n    this._shippingAddress = value\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Set Shipping Address\r\n   * @param value \r\n   */\r\n  public getShippingAddress(): Address {\r\n    return this._shippingAddress\r\n  }\r\n\r\n  /**\r\n   * Set Company Information\r\n   *\r\n   * @param {CompanyInfo} companyInfo\r\n   * @returns {Customer}\r\n   */\r\n  public setCompanyInfo(companyInfo: CompanyInfo): Customer {\r\n    this._companyInfo = companyInfo\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get Company Information\r\n   *\r\n   * @type {CompanyInfo}\r\n   */\r\n  public getCompanyInfo(): CompanyInfo {\r\n    return this._companyInfo\r\n  }\r\n}\r\n\r\nexport enum Salutation {\r\n  mr = 'mr',\r\n  mrs = 'mrs',\r\n  unknown = 'unknown'\r\n}\r\n\r\nexport type Address = {\r\n  name: string\r\n  street: string\r\n  state: string\r\n  zip: string\r\n  city: string\r\n  country: string\r\n}\r\n\r\nexport type CompanyInfo = {\r\n  registrationType: string\r\n  commercialRegisterNumber?: string\r\n  function?: string\r\n  commercialSector?: string\r\n}\r\n\r\nexport { Customer }\r\n","export default {\r\n  development: {\r\n    apiProtocol: 'https',\r\n    apiHost: 'dev-api.heidelpay.com',\r\n    apiVersion: 'v1',\r\n  },\r\n  staging: {\r\n    apiProtocol: 'https',\r\n    apiHost: 'stg-api.heidelpay.com',\r\n    apiVersion: 'v1',\r\n  },\r\n  production: {\r\n    apiProtocol: 'https',\r\n    apiHost: 'api.heidelpay.com',\r\n    apiVersion: 'v1',\r\n  },\r\n}\r\n  ","const Base64 = require('js-base64').Base64\r\nrequire('es6-promise').polyfill()\r\nrequire('isomorphic-fetch')\r\nimport Environment from '../configs/Environment';\r\nimport { SDK_TYPE, SDK_VERSION } from '../configs/Version';\r\n\r\n/**\r\n * Fetch Adapter\r\n *\r\n * @export\r\n * @class FetchAdapter\r\n */\r\nexport class FetchAdapter {\r\n  private api: string\r\n  private locale?: string\r\n\r\n  constructor(locale?: string, env?: string) {\r\n    let argsConfig\r\n\r\n    switch (env) {\r\n      case 'development':\r\n        argsConfig = Environment['development']\r\n        break\r\n      case 'staging':\r\n        argsConfig = Environment['staging']\r\n        break\r\n      default:\r\n        argsConfig = Environment['production']\r\n    }\r\n\r\n    const config = {\r\n      apiProtocol: argsConfig.apiProtocol,\r\n      apiHost: argsConfig.apiHost,\r\n      apiVersion: argsConfig.apiVersion,\r\n    }\r\n\r\n    this.locale = locale\r\n    this.api = `${config.apiProtocol}://${config.apiHost}/${config.apiVersion}`\r\n  }\r\n\r\n  /**\r\n   * @param  {string} url\r\n   */\r\n  public get(url: string, privateKey: string, isRawUrl: Boolean = false): Promise<Response> {\r\n    return this._fetch(\r\n      url,\r\n      {\r\n        method: 'GET'\r\n      },\r\n      privateKey,\r\n      isRawUrl\r\n    )\r\n  }\r\n\r\n  /**\r\n   * @param  {string} url\r\n   * @param  {object} body\r\n   */\r\n  public post(url: string, body: object, privateKey: string, isRawUrl: Boolean = false): Promise<Response> {\r\n    return this._fetch(\r\n      url,\r\n      {\r\n        method: 'POST',\r\n        body: JSON.stringify(body)\r\n      },\r\n      privateKey,\r\n      isRawUrl\r\n    )\r\n  }\r\n\r\n  /**\r\n   * @param  {string} url\r\n   * @param  {object} body\r\n   */\r\n  public put(url: string, body: object, privateKey: string) {\r\n    return this._fetch(\r\n      url,\r\n      {\r\n        method: 'PUT',\r\n        body: JSON.stringify(body)\r\n      },\r\n      privateKey\r\n    )\r\n  }\r\n\r\n  /**\r\n   * @param  {string} url\r\n   * @param  {object} body\r\n   */\r\n  public delete(url: string, body: object, privateKey: string) {\r\n    return this._fetch(\r\n      url,\r\n      {\r\n        method: 'DELETE',\r\n        body: JSON.stringify(body)\r\n      },\r\n      privateKey\r\n    )\r\n  }\r\n\r\n  private async _fetch(url: string, options: any = {}, privateKey: string, isRawUrl: Boolean = false): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n\r\n      const password = ''\r\n      const basicAuthValue = Base64.encode(`${privateKey}:${password}`)\r\n      const requestUrl = isRawUrl === true ? url : `${this.api}${url}`\r\n\r\n      fetch(requestUrl, {\r\n        headers: {\r\n          'SDK-TYPE': SDK_TYPE,\r\n          'SDK-VERSION': SDK_VERSION,\r\n          'Authorization': `Basic ${basicAuthValue}`,\r\n          'Accept-Language': this.locale || 'en_US',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        ...options\r\n      })\r\n        .then(response => {\r\n          if (options.method === 'DELETE') {\r\n            resolve(this._parseJSON(response))\r\n          } else {\r\n            resolve(response.json())\r\n          }\r\n        })\r\n        .catch(error => {\r\n          reject(error)\r\n        })\r\n    })\r\n  }\r\n\r\n  private _parseJSON(response: any): any {\r\n    return response.text().then(function (text: any) {\r\n      return text ? JSON.parse(text) : ''\r\n    })\r\n  }\r\n}\r\n","export default (response: any) => {\r\n  throw new Error(JSON.stringify(response.errors))\r\n}\r\n","import PaymentType from '../payments/types/PaymentType'\r\nimport PaymentService from './PaymentService'\r\nimport AbstractPaymentType from '../payments/types/AbstractPaymentType'\r\nimport ResponseErrorsMapper from './mappers/ResponseErrorsMapper'\r\n\r\nexport default (paymentType: AbstractPaymentType, paymentService: PaymentService): Promise<PaymentType> => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      // Call api end point to get response\r\n      const response: any = await paymentService\r\n      .getRequestAdapter()\r\n      .post(\r\n        paymentType.getTypeUrl(),\r\n        paymentType.getPayload(),\r\n        paymentService.getHeidelpay().getPrivateKey()\r\n      )\r\n\r\n      // Handle errors response    \r\n      if (response.errors) {\r\n        return reject(ResponseErrorsMapper(response))\r\n      }\r\n\r\n      // Set Heidelpay instance\r\n      paymentType.setHeidelpay(paymentService.getHeidelpay())\r\n\r\n      // Set Payment Id\r\n      paymentType.setId(response.id)\r\n\r\n      if (response.geoLocation) {\r\n        paymentType.setGeoLocation(response.geoLocation)\r\n      }\r\n\r\n      // Resolve final result\r\n      resolve(paymentType)      \r\n    } catch (error) {\r\n      // Reject with error object\r\n      return reject(error) \r\n    }\r\n  })\r\n}\r\n","export const URL_PAYMENT = '/payments'\r\nexport const URL_PAYMENT_AUTHORIZE = `${URL_PAYMENT}/authorize`\r\nexport const URL_PAYMENT_AUTHORIZE_CANCEL = `${URL_PAYMENT}/{paymentId}/authorize/{authorizationId}/cancels`\r\nexport const URL_PAYMENT_CHARGE = `${URL_PAYMENT}/charges`\r\nexport const URL_PAYMENT_CHARGE_AUTHORIZE = `${URL_PAYMENT}/{paymentId}/charges`\r\nexport const URL_PAYMENT_CHARGE_CANCEL = `${URL_PAYMENT}/{paymentId}/charges/{chargeId}/cancels`\r\nexport const URL_PAYMENT_SHIPMENT = `${URL_PAYMENT}/{paymentId}/shipments`\r\nexport const URL_PAYMENT_PAYOUT = `${URL_PAYMENT}/payouts`\r\n\r\nexport const URL_CUSTOMER = '/customers'\r\nexport const URL_METADATA = '/metadata'\r\nexport const URL_BASKET = '/baskets'\r\nexport const URL_RECURRING = `/types/{typeId}/recurring`\r\nexport const URL_TYPE_BANCONTACT = '/types/bancontact'\r\nexport const URL_TYPE_CARD = '/types/card'\r\nexport const URL_TYPE_EPS = '/types/eps'\r\nexport const URL_TYPE_GIROPAY = '/types/giropay'\r\nexport const URL_TYPE_IDEAL = '/types/ideal'\r\nexport const URL_TYPE_INVOICE = '/types/invoice'\r\nexport const URL_TYPE_INVOICE_GUARANTEED = '/types/invoice-guaranteed'\r\nexport const URL_TYPE_INVOICE_SECURED = '/types/invoice-secured'\r\nexport const URL_TYPE_INVOICE_FACTORING = '/types//invoice-factoring'\r\nexport const URL_TYPE_PAYPAL = '/types/paypal'\r\nexport const URL_TYPE_PREPAYMENT = '/types/prepayment'\r\nexport const URL_TYPE_PRZELEWY24 = '/types/przelewy24'\r\nexport const URL_TYPE_SEPA_DIRECT_DEBIT = '/types/sepa-direct-debit'\r\nexport const URL_TYPE_SEPA_DIRECT_DEBIT_GUARANTEED = '/types/sepa-direct-debit-guaranteed'\r\nexport const URL_TYPE_SEPA_DIRECT_DEBIT_SECURED = '/types/sepa-direct-debit-secured'\r\nexport const URL_TYPE_SOFORT = '/types/sofort'\r\nexport const URL_TYPE_PIS = '/types/pis'\r\nexport const URL_TYPE_ALIPAY = '/types/alipay'\r\nexport const URL_TYPE_WECHATPAY = '/types/wechatpay'\r\nexport const URL_TYPE_HIRE_PURCHASE = '/types/hire-purchase-direct-debit'\r\nexport const URL_TYPE_HIRE_PURCHASE_PLANS = '/types/hire-purchase-direct-debit/plans'\r\n\r\nexport const URL_PAYPAGE_CHARGE = '/paypage/charge'\r\nexport const URL_PAYPAGE_AUTHORIZE = '/paypage/authorize'\r\n\r\nexport const URL_WEBHOOK = '/webhooks'\r\nexport const URL_LINKPAY = '/linkpay'\r\nexport const URL_LINKPAY_CHARGE = '/linkpay/charge'\r\nexport const URL_LINKPAY_AUTHORIZE = '/linkpay/authorize'\r\n","/*\r\n * @Author: Minh Tri Nguyen \r\n * @Date: 2018-11-20 12:07:38 \r\n * @Last Modified by: Minh Tri Nguyen\r\n * @Last Modified time: 2018-11-20 12:08:41\r\n */\r\nimport Heidelpay from '../../Heidelpay'\r\nimport Resources from './Resources'\r\nimport Payment from './Payment';\r\n\r\nexport default abstract class AbstractPayment {\r\n  private _id: string\r\n  private _heidelpay: Heidelpay\r\n  private _payment: Payment\r\n  private _payload: object\r\n\r\n  constructor(heidelpay: Heidelpay) {\r\n    this._heidelpay = heidelpay\r\n    this._id = ''\r\n  }\r\n\r\n  /**\r\n   * Set a payment object\r\n   *\r\n   * @param {Payment} payment\r\n   */\r\n  public setPayment(payment: Payment) {\r\n    this._payment = payment\r\n  }\r\n\r\n  /**\r\n   * Get payment object\r\n   *\r\n   * @returns {Payment}\r\n   */\r\n  public getPayment(): Payment {\r\n    return this._payment\r\n  }\r\n\r\n  /**\r\n   * Get instance Heidelpay\r\n   *\r\n   * @returns {Heidelpay}\r\n   */\r\n  public getHeidelpay(): Heidelpay {\r\n    return this._heidelpay\r\n  }\r\n\r\n  /**\r\n   * Set Payment Id\r\n   *\r\n   * @param {string} paymentId\r\n   */\r\n  public setId(paymentId: string): void {\r\n    this._id = paymentId\r\n  }\r\n\r\n  /**\r\n   * Get Payment Id\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getId(): string {\r\n    return this._id\r\n  }\r\n\r\n  /**\r\n   * Get payload object\r\n   *\r\n   * @returns {*}\r\n   */\r\n  public getPayload(): any {\r\n    return this._payload\r\n  }\r\n\r\n  /**\r\n   * Set payload object\r\n   *\r\n   * @param {*} payload\r\n   * @returns\r\n   */\r\n  public setPayload(payload: any) {\r\n    return this._payload = payload\r\n  }\r\n\r\n  abstract getResources(): Resources\r\n}\r\n","export default class Resources {\r\n  private typeId: string\r\n  private customerId: string\r\n  private metadataId: string\r\n  private paymentId: string\r\n  private basketId: string\r\n  private traceId: string\r\n\r\n  /**\r\n   * Get type Id\r\n   *\r\n   * @returns\r\n   */\r\n  public getTypeId() {\r\n    return this.typeId\r\n  }\r\n\r\n  /**\r\n   * Set type Id\r\n   *\r\n   * @param {string} typeId\r\n   * @returns\r\n   */\r\n  public setTypeId(typeId: string) {\r\n    this.typeId = typeId\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get customer Id\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getCustomerId(): string {\r\n    return this.customerId\r\n  }\r\n\r\n  /**\r\n   * Set customer Id\r\n   *\r\n   * @param {string} customerId\r\n   * @returns {Resources}\r\n   */\r\n  public setCustomerId(customerId: string): Resources {\r\n    this.customerId = customerId\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get meta data Id\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getMetadataId(): string {\r\n    return this.metadataId\r\n  }\r\n\r\n  /**\r\n   * Set meta data Id\r\n   *\r\n   * @param {string} metadataId\r\n   * @returns {Resources}\r\n   */\r\n  public setMetadataId(metadataId: string): Resources {\r\n    this.metadataId = metadataId\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get payment Id\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getPaymentId(): string {\r\n    return this.paymentId\r\n  }\r\n\r\n  /**\r\n   * Set Payment Id\r\n   *\r\n   * @param {string} paymentId\r\n   * @returns {Resources}\r\n   */\r\n  public setPaymentId(paymentId: string): Resources {\r\n    this.paymentId = paymentId\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get Basket Id\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getBasketId(): string {\r\n    return this.basketId\r\n  }\r\n\r\n  /**\r\n   * Set Trace Id\r\n   *\r\n   * @param {string} traceId\r\n   * @returns {Resources}\r\n   */\r\n  public setTraceId(traceId: string): Resources {\r\n    this.traceId = traceId\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get Trace Id\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getTraceId(): string {\r\n    return this.traceId\r\n  }\r\n\r\n  /**\r\n   * Set Basket Id\r\n   *\r\n   * @param {string} paymentId\r\n   * @returns {Resources}\r\n   */\r\n  public setBasketId(basketId: string): Resources {\r\n    this.basketId = basketId\r\n    return this\r\n  }\r\n}\r\n","import AbstractPayment from './AbstractPayment'\r\nimport Heidelpay from '../../Heidelpay'\r\nimport Resources from './Resources'\r\nimport Authorization from './Authorization'\r\nimport Charge from './Charge'\r\nimport Cancel from './Cancel'\r\n\r\nexport default class Payment extends AbstractPayment {\r\n  private resources: Resources\r\n  private authorization: Authorization\r\n  private chargeList: Array<Charge>\r\n  private cancelList: Array<Cancel>\r\n\r\n  constructor(heidelpay: Heidelpay) {\r\n    super(heidelpay)\r\n    this.resources = new Resources()\r\n  }\r\n\r\n  /**\r\n   * Get resources\r\n   *\r\n   * @returns {Resources}\r\n   */\r\n  public getResources(): Resources {\r\n    return this.resources\r\n  }\r\n\r\n  /**\r\n   * Set resources\r\n   *\r\n   * @param {*} resources\r\n   */\r\n  public setResources(resources: any) {\r\n    this.resources\r\n      .setCustomerId(resources.customerId)\r\n      .setMetadataId(resources.metadataId)\r\n      .setPaymentId(resources.paymentId)\r\n      .setTypeId(resources.typeId)\r\n      .setTraceId(resources.traceId)\r\n  }\r\n\r\n  /**\r\n   * Set authorize transaction\r\n   *\r\n   * @param {Authorization} authorization\r\n   */\r\n  public setAuthorization(authorization: Authorization) {\r\n    this.authorization = authorization\r\n  }\r\n\r\n  /**\r\n   * Get authorize transaction\r\n   *\r\n   * @returns {Authorization}\r\n   */\r\n  public getAuthorization(): Authorization {\r\n    return this.authorization\r\n  }\r\n\r\n  /**\r\n   * Set list charge transactions\r\n   *\r\n   * @param {Array<Charge>} chargeList\r\n   */\r\n  public setChargeList(chargeList: Array<Charge>) {\r\n    this.chargeList = chargeList\r\n  }\r\n\r\n  /**\r\n   * Get list charge transactions\r\n   *\r\n   * @returns {Array<Charge>}\r\n   */\r\n  public getChargeList(): Array<Charge> {\r\n    return this.chargeList\r\n  }\r\n\r\n  /**\r\n   * Get charge transaction\r\n   *\r\n   * @param {string} chargeId\r\n   * @returns {Charge}\r\n   */\r\n  public getCharge(chargeId: string): Charge {\r\n    const chargeItem = this.getChargeList().find(\r\n      (item: Charge) => item.getId() === chargeId\r\n    ) as Charge\r\n\r\n    if (chargeItem && chargeItem.getId()) {\r\n      return chargeItem\r\n    }\r\n\r\n    throw new Error(`Charge Id is not found in list of transaction`)\r\n  }\r\n\r\n  /**\r\n   * Set list cancel transactions\r\n   *\r\n   * @param {Array<Cancel>} chargeList\r\n   */\r\n  public setCancelList(cancelList: Array<Cancel>) {\r\n    this.cancelList = cancelList\r\n  }\r\n\r\n  /**\r\n   * Get list cancel transactions\r\n   *\r\n   * @returns {Array<Cancel>}\r\n   */\r\n  public getCancelList(): Array<Cancel> {\r\n    return this.cancelList\r\n  }\r\n\r\n  /**\r\n   * Get cancel transaction\r\n   *\r\n   * @param {string} cancelId\r\n   * @returns {Cancel}\r\n   */\r\n  public getCancel(cancelId: string, refundId?: string): Cancel {\r\n    let cancelItem\r\n\r\n    if (refundId) {\r\n      // Find item in list of cancel with cancel Id and refund Id\r\n      cancelItem = this.getCancelList().find((item: Cancel) => item.getId() === cancelId && item.getRefundId() === refundId)\r\n    } else {\r\n      // Find item in list of cancel with only cancel Id\r\n      cancelItem = this.getCancelList().find((item: Cancel) => item.getId() === cancelId)\r\n    }\r\n\r\n    if (cancelItem && cancelItem.getId()) {\r\n      return cancelItem\r\n    }\r\n\r\n    throw new Error(`Cancel Id is not found in list of transaction`)\r\n  }\r\n}\r\n","import Heidelpay from '../../Heidelpay';\r\nimport Authorization, { authorizeObject } from '../business/Authorization';\r\nimport Charge, { chargeObject } from '../business/Charge';\r\n\r\nexport default abstract class AbstractPaymentType {\r\n  private _id: string\r\n  private _heidelpay: Heidelpay\r\n  private _geoLocation: any\r\n  private _email: string\r\n\r\n  public abstract getTypeUrl(): string\r\n  public abstract getPayload(): any\r\n\r\n  /**\r\n   * Set Heidelpay instance\r\n   *\r\n   * @param {Heidelpay} heidelpay\r\n   */\r\n  public setHeidelpay(heidelpay: Heidelpay) {\r\n    this._heidelpay = heidelpay\r\n  }\r\n\r\n  /**\r\n   * Get instance Heidelpay\r\n   *\r\n   * @returns {Heidelpay}\r\n   */\r\n  public getHeidelpay(): Heidelpay {\r\n    return this._heidelpay\r\n  }\r\n\r\n  /**\r\n   * Set Payment Id\r\n   *\r\n   * @param {string} paymentId\r\n   */\r\n  public setId(paymentId: string): void {\r\n    this._id = paymentId\r\n  }\r\n\r\n  /**\r\n   * Get Payment Id\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getId(): string {\r\n    return this._id\r\n  }\r\n\r\n\r\n  /**\r\n   * Authorize with payment card\r\n   *\r\n   * @param {authorizeObject} args\r\n   * @returns {Promise<Authorization>}\r\n   */\r\n  public authorize(args: authorizeObject): Promise<Authorization> {\r\n    return this.getHeidelpay().authorize(args)\r\n  }\r\n\r\n  /**\r\n   * Charge on authorize\r\n   *\r\n   * @param {chargeAuthorizeObject} args\r\n   * @returns {Promise<Charge>}\r\n   */\r\n  public charge(args: chargeObject): Promise<Charge> {\r\n    return this.getHeidelpay().charge(args)\r\n  }\r\n\r\n  /**\r\n   * Get geoLocation\r\n   *\r\n   * @returns {any}\r\n   */\r\n  public getGeoLocation(): any {\r\n    return this._geoLocation\r\n  }\r\n\r\n  /**\r\n   * Set geoLocation\r\n   *\r\n   * @param {any} geoLocation\r\n   * @returns {any}\r\n   */\r\n  public setGeoLocation(geoLocation: any): any {\r\n    this._geoLocation = geoLocation\r\n  }\r\n\r\n  /**\r\n   * Set PayPal email\r\n   *\r\n   * @param {string} email\r\n   */\r\n  public setEmail(email: string): void {\r\n    this._email = email\r\n  }\r\n\r\n  /**\r\n   * Get PayPal email\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getEmail(): string {\r\n    return this._email\r\n  }\r\n\r\n}\r\n","import * as apiURL from '../../configs/ApiUrls'\r\nimport AbstractPaymentType from './AbstractPaymentType'\r\nimport PaymentType from './PaymentType'\r\n\r\nexport default class Alipay extends AbstractPaymentType implements PaymentType {\r\n  /**\r\n   * Get url end point\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getTypeUrl(): string {\r\n    return apiURL.URL_TYPE_ALIPAY\r\n  }\r\n\r\n  /**\r\n   * Get Payload\r\n   *\r\n   * @returns\r\n   */\r\n  public getPayload() {\r\n    return {}\r\n  }\r\n}\r\n","import * as apiURL from '../../configs/ApiUrls'\r\nimport AbstractPaymentType from './AbstractPaymentType'\r\nimport PaymentType from './PaymentType'\r\n\r\nexport default class Bancontact extends AbstractPaymentType implements PaymentType {\r\n  private _holder: string\r\n  /**\r\n   * Get url end point\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getTypeUrl(): string {\r\n    return apiURL.URL_TYPE_BANCONTACT\r\n  }\r\n\r\n  /**\r\n * Set holder\r\n *\r\n * @param {string} cardHolder\r\n * @returns {Card}\r\n */\r\n  public setHolder(holder: string): Bancontact {\r\n    this._holder = holder\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get holder\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getHolder(): string {\r\n    return this._holder\r\n  }\r\n\r\n  /**\r\n   * Get Payload\r\n   *\r\n   * @returns\r\n   */\r\n  public getPayload() {\r\n    if (typeof this.getHolder() === 'undefined') {\r\n      return {}\r\n    }\r\n\r\n    return {\r\n      holder: this._holder\r\n    }\r\n  }\r\n}\r\n","import * as apiURL from '../../configs/ApiUrls'\r\nimport AbstractPaymentType from './AbstractPaymentType'\r\nimport PaymentType from './PaymentType'\r\n\r\nexport default class Card extends AbstractPaymentType implements PaymentType {\r\n  private _recurring: boolean\r\n  private _brand: string\r\n  private _number: string\r\n  private _cvc: string\r\n  private _expiryDate: string\r\n  private _cardHolder: string\r\n  private _3ds: boolean\r\n  private _cardDetails: any\r\n\r\n  constructor(number: string = '', expiryDate: string = '') {\r\n    super()\r\n    this._number = number\r\n    this._expiryDate = expiryDate\r\n    this._cardHolder = ''\r\n    this._cardDetails = {}\r\n  }\r\n\r\n  /**\r\n   * Get url end point\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getTypeUrl(): string {\r\n    return apiURL.URL_TYPE_CARD\r\n  }\r\n\r\n  /**\r\n   * Get Payload\r\n   *\r\n   * @returns\r\n   */\r\n  public getPayload() {\r\n    const payload: any = {\r\n      number: this.getNumber(),\r\n      cvc: this.getCVC(),\r\n      expiryDate: this.getExpiryDate()\r\n    }\r\n\r\n    if(this.get3ds() !== undefined) {\r\n      payload['3ds'] = this.get3ds()\r\n    }\r\n\r\n    return payload\r\n  }\r\n\r\n  /**\r\n   * Set pan number\r\n   *\r\n   * @param {string} number\r\n   * @returns {Card}\r\n   */\r\n  public setNumber(number: string): Card {\r\n    this._number = number\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get pan number\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getNumber(): string {\r\n    return this._number\r\n  }\r\n\r\n  /**\r\n   * Set CVC number\r\n   *\r\n   * @param {string} cvc\r\n   * @returns {Card}\r\n   */\r\n  public setCVC(cvc: string): Card {\r\n    this._cvc = cvc\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get CVC\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getCVC(): string {\r\n    return this._cvc\r\n  }\r\n\r\n  /**\r\n   * Set expiry date\r\n   *\r\n   * @param {string} expiryDate\r\n   * @returns {Card}\r\n   */\r\n  public setExpiryDate(expiryDate: string): Card {\r\n    this._expiryDate = expiryDate\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get expirty Date\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getExpiryDate(): string {\r\n    return this._expiryDate\r\n  }\r\n\r\n  /**\r\n   * Set card holder\r\n   *\r\n   * @param {string} cardHolder\r\n   * @returns {Card}\r\n   */\r\n  public setCardHolder(cardHolder: string): Card {\r\n    this._cardHolder = cardHolder\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get card holder\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getCardHolder(): string {\r\n    return this._cardHolder\r\n  }\r\n\r\n  /**\r\n   * Set brand name\r\n   *\r\n   * @param {string} brand\r\n   * @returns {Card}\r\n   */\r\n  public setBrand(brand: string): Card {\r\n    this._brand = brand\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get brand name\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getBrand(): string {\r\n    return this._brand\r\n  }\r\n\r\n  /**\r\n   * Set recurring option\r\n   *\r\n   * @param {string} recurring\r\n   * @returns {Card}\r\n   */\r\n  public setRecurring(recurring: boolean): Card {\r\n    this._recurring = recurring\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get recurring option\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getRecurring(): boolean {\r\n    return this._recurring\r\n  }\r\n\r\n  /**\r\n   * Set card detail\r\n   *\r\n   * @param {object} cardDetail\r\n   * @returns {Card}\r\n   */\r\n  public setCardDetails(cardDetails: any): Card {\r\n    this._cardDetails = cardDetails\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get card detail\r\n   *\r\n   * @returns {object}\r\n   */\r\n  public getCardDetails(): any {\r\n    return this._cardDetails\r\n  }\r\n\r\n  /**\r\n   * Set 3ds option\r\n   *\r\n   * @param {string} expiryDate\r\n   * @returns {Card}\r\n   */\r\n  public set3ds(secure: boolean): Card {\r\n    this._3ds = secure\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get 3ds option\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public get3ds(): boolean {\r\n    return this._3ds\r\n  }\r\n}\r\n","import * as apiURL from '../../configs/ApiUrls'\r\nimport AbstractPaymentType from './AbstractPaymentType'\r\nimport PaymentType from './PaymentType'\r\n\r\nexport default class Eps extends AbstractPaymentType implements PaymentType {\r\n  private _bic: string\r\n\r\n  /**\r\n   * Set BIC\r\n   *\r\n   * @param {string} bic\r\n   * @returns {Eps}\r\n   */\r\n  public setBic(bic: string): Eps {\r\n    this._bic = bic\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get BIC\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getBic(): string {\r\n    return this._bic\r\n  }\r\n\r\n  /**\r\n   * Get url end point\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getTypeUrl(): string {\r\n    return apiURL.URL_TYPE_EPS\r\n  }\r\n\r\n  /**\r\n   * Get Payload\r\n   *\r\n   * @returns\r\n   */\r\n  public getPayload() {\r\n    if(typeof this.getBic() === 'undefined') {\r\n        return {}\r\n    }\r\n\r\n    return {\r\n      bic: this.getBic()\r\n    }\r\n  }\r\n}\r\n","import * as apiURL from '../../configs/ApiUrls'\r\nimport AbstractPaymentType from './AbstractPaymentType'\r\nimport PaymentType from './PaymentType'\r\n\r\nexport default class Giropay extends AbstractPaymentType implements PaymentType {\r\n  /**\r\n   * Get url end point\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getTypeUrl(): string {\r\n    return apiURL.URL_TYPE_GIROPAY\r\n  }\r\n\r\n  /**\r\n   * Get Payload\r\n   *\r\n   * @returns\r\n   */\r\n  public getPayload() {\r\n    return {}\r\n  }\r\n}\r\n","import * as apiURL from '../../configs/ApiUrls'\r\nimport AbstractPaymentType from './AbstractPaymentType'\r\nimport PaymentType from './PaymentType'\r\n\r\nexport default class HirePurchase extends AbstractPaymentType implements PaymentType {\r\n  private _iban: string\r\n  private _bic: string\r\n  private _accountHolder: string\r\n  private _invoiceDate: string\r\n  private _invoiceDueDate: string\r\n\r\n  private _numberOfRates: number\r\n  private _dayOfPurchase: string\r\n  private _orderDate: string\r\n  private _totalPurchaseAmount: number\r\n  private _totalInterestAmount: number\r\n  private _totalAmount: number\r\n  private _effectiveInterestRate: number\r\n  private _nominalInterestRate: number\r\n  private _feeFirstRate: number\r\n  private _feePerRate: number\r\n  private _monthlyRate: number\r\n  private _lastRate: number\r\n\r\n  constructor() {\r\n    super()\r\n  }\r\n\r\n  /**\r\n   * Set Iban\r\n   *\r\n   * @param {string} iban\r\n   * @returns {HirePurchase}\r\n   */\r\n  public setIban(iban: string): HirePurchase {\r\n    this._iban = iban\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get Iban\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getIban(): string {\r\n    return this._iban\r\n  }\r\n\r\n  /**\r\n   * Set BIC\r\n   *\r\n   * @param {string} bic\r\n   * @returns {HirePurchase}\r\n   */\r\n  public setBic(bic: string): HirePurchase {\r\n    this._bic = bic\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get Bic\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getBic(): string {\r\n    return this._bic\r\n  }\r\n\r\n  /**\r\n   * Set Account Holader\r\n   *\r\n   * @param {string} accountHolder\r\n   * @returns {HirePurchase}\r\n   */\r\n  public setAccountHolder(accountHolder: string): HirePurchase {\r\n    this._accountHolder = accountHolder\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get Account Holder\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getAccountHolder(): string {\r\n    return this._accountHolder\r\n  }\r\n\r\n  /**\r\n   * Set Invoice Date\r\n   *\r\n   * @param {string} invoiceDate\r\n   * @returns {HirePurchase}\r\n   */\r\n  public setInvoiceDate(invoiceDate: string): HirePurchase {\r\n    this._invoiceDate = invoiceDate\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get Invoice Date\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getInvoiceDate(): string {\r\n    return this._invoiceDate\r\n  }\r\n\r\n  /**\r\n   * Set Invoice Due Date\r\n   *\r\n   * @param {string} invoiceDueDate\r\n   * @returns {HirePurchase}\r\n   */\r\n  public setInvoiceDueDate(invoiceDueDate: string): HirePurchase {\r\n    this._invoiceDueDate = invoiceDueDate\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get Invoice Due Date\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getInvoiceDueDate(): string {\r\n    return this._invoiceDueDate\r\n  }\r\n\r\n  /**\r\n   * Set Number of Rate\r\n   *\r\n   * @param {string} numberOfRates\r\n   * @returns {HirePurchase}\r\n   */\r\n  public setNumberOfRates(numberOfRates: number): HirePurchase {\r\n    this._numberOfRates = numberOfRates\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get Number of Rate\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getNumberOfRates(): number {\r\n    return this._numberOfRates\r\n  }\r\n\r\n  /**\r\n   * Set Day of purchase\r\n   *\r\n   * @param {string} dayOfPurchase\r\n   * @returns {HirePurchase}\r\n   */\r\n  public setDayOfPurchase(dayOfPurchase: string): HirePurchase {\r\n    this._dayOfPurchase = dayOfPurchase\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get Day of Purchase\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getDayOfPurchase(): string {\r\n    return this._dayOfPurchase\r\n  }\r\n\r\n  /**\r\n   * Set Order Date\r\n   *\r\n   * @param {string} orderDate\r\n   * @returns {HirePurchase}\r\n   */\r\n  public setOrderDate(orderDate: string): HirePurchase {\r\n    this._orderDate = orderDate\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get Order Date\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getOrderDate(): string {\r\n    return this._orderDate\r\n  }\r\n\r\n  /**\r\n   * Set Total Amount\r\n   *\r\n   * @param {number} totalPurchaseAmount\r\n   * @returns {HirePurchase}\r\n   */\r\n  public setTotalPurchaseAmount(totalPurchaseAmount: number): HirePurchase {\r\n    this._totalPurchaseAmount = totalPurchaseAmount\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get Total Amount\r\n   *\r\n   * @returns {number}\r\n   */\r\n  public getTotalPurchaseAmount(): number {\r\n    return this._totalPurchaseAmount\r\n  }\r\n\r\n  /**\r\n   * Set Interest Amount\r\n   *\r\n   * @param {number} totalInterestAmount\r\n   * @returns {HirePurchase}\r\n   */\r\n  public setTotalInterestAmount(totalInterestAmount: number): HirePurchase {\r\n    this._totalInterestAmount = totalInterestAmount\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get Interest Amount\r\n   *\r\n   * @returns {number}\r\n   */\r\n  public getTotalInterestAmount(): number {\r\n    return this._totalInterestAmount\r\n  }\r\n\r\n  /**\r\n   * Set Total Amount\r\n   *\r\n   * @param {number} totalAmount\r\n   * @returns {HirePurchase}\r\n   */\r\n  public setTotalAmount(totalAmount: number): HirePurchase {\r\n    this._totalAmount = totalAmount\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get Total Amount\r\n   *\r\n   * @returns {number}\r\n   */\r\n  public getTotalAmount(): number {\r\n    return this._totalAmount\r\n  }\r\n\r\n  /**\r\n   * Set Total Amount\r\n   *\r\n   * @param {number} totalAmount\r\n   * @returns {HirePurchase}\r\n   */\r\n  public setEffectiveInterestRate(effectiveInterestRate: number): HirePurchase {\r\n    this._effectiveInterestRate = effectiveInterestRate\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get Total Amount\r\n   *\r\n   * @returns {number}\r\n   */\r\n  public getEffectiveInterestRate(): number {\r\n    return this._effectiveInterestRate\r\n  }\r\n\r\n  /**\r\n   * Set Nominal Interest Rate\r\n   *\r\n   * @param {number} nominalInterestRate\r\n   * @returns {HirePurchase}\r\n   */\r\n  public setNominalInterestRate(nominalInterestRate: number): HirePurchase {\r\n    this._nominalInterestRate = nominalInterestRate\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get Nominal Interest Rate\r\n   *\r\n   * @returns {number}\r\n   */\r\n  public getNominalInterestRate(): number {\r\n    return this._nominalInterestRate\r\n  }\r\n\r\n  /**\r\n   * Set Fee First Rate\r\n   *\r\n   * @param {number} feeFirstRate\r\n   * @returns {HirePurchase}\r\n   */\r\n  public setFeeFirstRate(feeFirstRate: number): HirePurchase {\r\n    this._feeFirstRate = feeFirstRate\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get Nominal Interest Rate\r\n   *\r\n   * @returns {number}\r\n   */\r\n  public getFeeFirstRate(): number {\r\n    return this._feeFirstRate\r\n  }\r\n\r\n  /**\r\n   * Set Fee Per Rate\r\n   *\r\n   * @param {number} feePerRate\r\n   * @returns {HirePurchase}\r\n   */\r\n  public setFeePerRate(feePerRate: number): HirePurchase {\r\n    this._feePerRate = feePerRate\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get Nominal Interest Rate\r\n   *\r\n   * @returns {number}\r\n   */\r\n  public getFeePerRate(): number {\r\n    return this._feePerRate\r\n  }\r\n\r\n  /**\r\n   * Set Monthly Rate\r\n   *\r\n   * @param {number} monthlyRate\r\n   * @returns {HirePurchase}\r\n   */\r\n  public setMonthlyRate(monthlyRate: number): HirePurchase {\r\n    this._monthlyRate = monthlyRate\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get Monthly Rate\r\n   *\r\n   * @returns {number}\r\n   */\r\n  public getMonthlyRate(): number {\r\n    return this._monthlyRate\r\n  }\r\n\r\n  /**\r\n   * Set Last Rate\r\n   *\r\n   * @param {number} lastRate\r\n   * @returns {HirePurchase}\r\n   */\r\n  public setLastRate(lastRate: number): HirePurchase {\r\n    this._lastRate = lastRate\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get Monthly Rate\r\n   *\r\n   * @returns {number}\r\n   */\r\n  public getLastRate(): number {\r\n    return this._lastRate\r\n  }\r\n\r\n  /**\r\n   * Get url end point\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getTypeUrl(): string {\r\n    return apiURL.URL_TYPE_HIRE_PURCHASE\r\n  }\r\n\r\n  /**\r\n   * Get Payload\r\n   *\r\n   * @returns\r\n   */\r\n  public getPayload() {\r\n    return {\r\n      iban: this.getIban(),\r\n      bic: this.getBic(),\r\n      accountHolder: this.getAccountHolder(),\r\n      invoiceDate: this.getInvoiceDate(),\r\n      invoiceDueDate: this.getInvoiceDueDate(),\r\n      numberOfRates: this.getNumberOfRates(),\r\n      dayOfPurchase: this.getDayOfPurchase(),\r\n      totalPurchaseAmount: this.getTotalPurchaseAmount(),\r\n      totalInterestAmount: this.getTotalInterestAmount(),\r\n      totalAmount: this.getTotalAmount(),\r\n      effectiveInterestRate: this.getEffectiveInterestRate(),\r\n      nominalInterestRate: this.getNominalInterestRate(),\r\n      feeFirstRate: this.getFeeFirstRate(),\r\n      feePerRate: this.getFeePerRate(),\r\n      monthlyRate: this.getMonthlyRate(),\r\n      lastRate: this.getLastRate(),\r\n    }\r\n  }\r\n}\r\n\r\nexport type updateHirePurchaseObject = {\r\n  iban?: string,\r\n  bic?: string,\r\n  accountHolder?: string,\r\n  invoiceDate?: string,\r\n  invoiceDueDate?: string,\r\n}","import * as apiURL from '../../configs/ApiUrls'\r\nimport AbstractPaymentType from './AbstractPaymentType'\r\nimport PaymentType from './PaymentType'\r\n\r\nexport default class Ideal extends AbstractPaymentType implements PaymentType {\r\n  private _bic: string\r\n\r\n  /**\r\n   * Set BIC\r\n   *\r\n   * @param {string} bic\r\n   * @returns {Ideal}\r\n   */\r\n  public setBic(bic: string): Ideal {\r\n    this._bic = bic\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get BIC\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getBic(): string {\r\n    return this._bic\r\n  }\r\n\r\n  /**\r\n   * Get url end point\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getTypeUrl(): string {\r\n    return apiURL.URL_TYPE_IDEAL\r\n  }\r\n\r\n  /**\r\n   * Get Payload\r\n   *\r\n   * @returns\r\n   */\r\n  public getPayload() {\r\n    return {\r\n      bic: this.getBic()\r\n    }\r\n  }\r\n}\r\n","import * as apiURL from '../../configs/ApiUrls'\r\nimport AbstractPaymentType from './AbstractPaymentType'\r\nimport PaymentType from './PaymentType'\r\n\r\nexport default class Invoice extends AbstractPaymentType implements PaymentType {\r\n  /**\r\n   * Get url end point\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getTypeUrl(): string {\r\n    return apiURL.URL_TYPE_INVOICE\r\n  }\r\n\r\n  /**\r\n   * Get Payload\r\n   *\r\n   * @returns\r\n   */\r\n  public getPayload() {\r\n    return {}\r\n  }\r\n}\r\n","import * as apiURL from '../../configs/ApiUrls'\r\nimport AbstractPaymentType from './AbstractPaymentType'\r\nimport PaymentType from './PaymentType'\r\n\r\nexport default class InvoiceFactoring extends AbstractPaymentType implements PaymentType {\r\n  private _invoiceId: string\r\n  /**\r\n   * Get url end point\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getTypeUrl(): string {\r\n    return apiURL.URL_TYPE_INVOICE_FACTORING\r\n  }\r\n\r\n  /**\r\n   * Set Invoice Id\r\n   *\r\n   * @param {string} invoiceId\r\n   */\r\n  public setInvoiceId(invoiceId: string): void {\r\n    this._invoiceId = invoiceId\r\n  }\r\n\r\n  /**\r\n   * Get Invoice Id\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getInvoiceId(): string {\r\n    return this._invoiceId\r\n  }\r\n\r\n  /**\r\n   * Get Payload\r\n   *\r\n   * @returns\r\n   */\r\n  public getPayload() {\r\n    if (typeof this.getInvoiceId() === 'undefined') {\r\n      return {}\r\n    }\r\n    \r\n    return {\r\n      invoiceId: this._invoiceId\r\n    }\r\n  }\r\n}\r\n","import * as apiURL from '../../configs/ApiUrls'\r\nimport AbstractPaymentType from './AbstractPaymentType'\r\nimport PaymentType from './PaymentType'\r\n\r\nexport default class InvoiceGuaranteed extends AbstractPaymentType implements PaymentType {\r\n  private _invoiceId: string\r\n  /**\r\n   * Get url end point\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getTypeUrl(): string {\r\n    return apiURL.URL_TYPE_INVOICE_GUARANTEED\r\n  }\r\n\r\n  \r\n  /**\r\n   * Set Invoice Id\r\n   *\r\n   * @param {string} invoiceId\r\n   */\r\n  public setInvoiceId(invoiceId: string): void {\r\n    this._invoiceId = invoiceId\r\n  }\r\n\r\n  /**\r\n   * Get Invoice Id\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getInvoiceId(): string {\r\n    return this._invoiceId\r\n  }\r\n\r\n  /**\r\n   * Get Payload\r\n   *\r\n   * @returns\r\n   */\r\n  public getPayload() {\r\n    if (typeof this.getInvoiceId() === 'undefined') {\r\n      return {}\r\n    }\r\n    \r\n    return {\r\n      invoiceId: this._invoiceId\r\n    }\r\n  }\r\n}\r\n","import * as apiURL from '../../configs/ApiUrls'\r\nimport AbstractPaymentType from './AbstractPaymentType'\r\nimport PaymentType from './PaymentType'\r\n\r\nexport default class InvoiceSecured extends AbstractPaymentType implements PaymentType {\r\n  private _invoiceId: string\r\n  /**\r\n   * Get url end point\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getTypeUrl(): string {\r\n    return apiURL.URL_TYPE_INVOICE_SECURED\r\n  }\r\n\r\n  \r\n  /**\r\n   * Set Invoice Id\r\n   *\r\n   * @param {string} invoiceId\r\n   */\r\n  public setInvoiceId(invoiceId: string): void {\r\n    this._invoiceId = invoiceId\r\n  }\r\n\r\n  /**\r\n   * Get Invoice Id\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getInvoiceId(): string {\r\n    return this._invoiceId\r\n  }\r\n\r\n  /**\r\n   * Get Payload\r\n   *\r\n   * @returns\r\n   */\r\n  public getPayload() {\r\n    if (typeof this.getInvoiceId() === 'undefined') {\r\n      return {}\r\n    }\r\n    \r\n    return {\r\n      invoiceId: this._invoiceId\r\n    }\r\n  }\r\n}\r\n","import * as apiURL from '../../configs/ApiUrls'\r\nimport PaymentType from './PaymentType'\r\nimport AbstractPaymentType from './AbstractPaymentType'\r\n\r\nexport default class Paypal extends AbstractPaymentType implements PaymentType {\r\n  /**\r\n   * Get url end point\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getTypeUrl(): string {\r\n    return apiURL.URL_TYPE_PAYPAL\r\n  }\r\n\r\n  /**\r\n   * Get Payload\r\n   *\r\n   * @returns\r\n   */\r\n  public getPayload() {\r\n    return {}\r\n  }\r\n}","import * as apiURL from '../../configs/ApiUrls'\r\nimport AbstractPaymentType from './AbstractPaymentType'\r\nimport PaymentType from './PaymentType'\r\n\r\nexport default class Pis extends AbstractPaymentType implements PaymentType {\r\n  /**\r\n   * Get url end point\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getTypeUrl(): string {\r\n    return apiURL.URL_TYPE_PIS\r\n  }\r\n\r\n  /**\r\n   * Get Payload\r\n   *\r\n   * @returns\r\n   */\r\n  public getPayload() {\r\n    return {}\r\n  }\r\n}\r\n","import * as apiURL from '../../configs/ApiUrls'\r\nimport AbstractPaymentType from './AbstractPaymentType'\r\nimport PaymentType from './PaymentType'\r\n\r\nexport default class Prepayment extends AbstractPaymentType implements PaymentType {\r\n  /**\r\n   * Get url end point\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getTypeUrl(): string {\r\n    return apiURL.URL_TYPE_PREPAYMENT\r\n  }\r\n\r\n  /**\r\n   * Get Payload\r\n   *\r\n   * @returns\r\n   */\r\n  public getPayload() {\r\n    return {}\r\n  }\r\n}\r\n","import * as apiURL from '../../configs/ApiUrls'\r\nimport AbstractPaymentType from './AbstractPaymentType'\r\nimport PaymentType from './PaymentType'\r\n\r\nexport default class Przelewy24 extends AbstractPaymentType implements PaymentType {\r\n  /**\r\n   * Get url end point\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getTypeUrl(): string {\r\n    return apiURL.URL_TYPE_PRZELEWY24\r\n  }\r\n\r\n  /**\r\n   * Get Payload\r\n   *\r\n   * @returns\r\n   */\r\n  public getPayload() {\r\n    return {}\r\n  }\r\n}\r\n","import * as apiURL from '../../configs/ApiUrls'\r\nimport PaymentType from './PaymentType'\r\nimport AbstractPaymentType from './AbstractPaymentType'\r\n\r\nexport default class SepaDirectDebit extends AbstractPaymentType implements PaymentType {\r\n  private _iban: string\r\n  private _bic: string\r\n  private _holder: string\r\n\r\n  constructor(iban?: string) {\r\n    super()\r\n    this._iban = iban || ''\r\n  }\r\n\r\n  /**\r\n   * Set iban number\r\n   *\r\n   * @param {string} iban\r\n   * @returns {SepaDirectDebit}\r\n   */\r\n  public setIban(iban: string): SepaDirectDebit {\r\n    this._iban = iban\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get iban number\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getIban(): string {\r\n    return this._iban\r\n  }\r\n\r\n  /**\r\n   * Set bic number\r\n   *\r\n   * @param {string} bic\r\n   * @returns {Card}\r\n   */\r\n  public setBic(bic: string): SepaDirectDebit {\r\n    this._bic = bic\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get bic number\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getBic(): string {\r\n    return this._bic\r\n  }\r\n\r\n  /**\r\n   * Set holder\r\n   *\r\n   * @param {string} holder\r\n   * @returns {Card}\r\n   */\r\n  public setHolder(holder: string): SepaDirectDebit {\r\n    this._holder = holder\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get holder\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getHolder(): string {\r\n    return this._holder\r\n  }\r\n\r\n  /**\r\n   * Get url end point\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getTypeUrl(): string {\r\n    return apiURL.URL_TYPE_SEPA_DIRECT_DEBIT\r\n  }\r\n\r\n  /**\r\n   * Get Payload\r\n   *\r\n   * @returns\r\n   */\r\n  public getPayload() {\r\n    return {\r\n      iban: this.getIban(),\r\n      bic: this.getBic(),\r\n      holder: this.getHolder(),\r\n    }\r\n  }\r\n}\r\n","import * as apiURL from '../../configs/ApiUrls'\r\nimport AbstractPaymentType from './AbstractPaymentType'\r\nimport PaymentType from './PaymentType'\r\n\r\nexport default class SepaDirectDebitGuaranteed extends AbstractPaymentType implements PaymentType {\r\n  private _iban: string\r\n  private _bic: string\r\n  private _holder: string\r\n\r\n  constructor(iban?: string) {\r\n    super()\r\n    this._iban = iban || ''\r\n  }\r\n\r\n  /**\r\n   * Set iban number\r\n   *\r\n   * @param {string} iban\r\n   * @returns {SepaDirectDebitGuaranteed}\r\n   */\r\n  public setIban(iban: string): SepaDirectDebitGuaranteed {\r\n    this._iban = iban\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get iban number\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getIban(): string {\r\n    return this._iban\r\n  }\r\n\r\n  /**\r\n   * Set bic number\r\n   *\r\n   * @param {string} bic\r\n   * @returns {Card}\r\n   */\r\n  public setBic(bic: string): SepaDirectDebitGuaranteed {\r\n    this._bic = bic\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get bic number\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getBic(): string {\r\n    return this._bic\r\n  }\r\n\r\n  /**\r\n   * Set holder\r\n   *\r\n   * @param {string} holder\r\n   * @returns {Card}\r\n   */\r\n  public setHolder(holder: string): SepaDirectDebitGuaranteed {\r\n    this._holder = holder\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get holder\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getHolder(): string {\r\n    return this._holder\r\n  }\r\n\r\n  /**\r\n   * Get url end point\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getTypeUrl(): string {\r\n    return apiURL.URL_TYPE_SEPA_DIRECT_DEBIT_GUARANTEED\r\n  }\r\n\r\n  /**\r\n   * Get Payload\r\n   *\r\n   * @returns\r\n   */\r\n  public getPayload() {\r\n    return {\r\n      iban: this.getIban(),\r\n      bic: this.getBic(),\r\n      holder: this.getHolder(),\r\n    }\r\n  }\r\n}\r\n","import * as apiURL from '../../configs/ApiUrls'\r\nimport AbstractPaymentType from './AbstractPaymentType'\r\nimport PaymentType from './PaymentType'\r\n\r\nexport default class SepaDirectDebitSecured extends AbstractPaymentType implements PaymentType {\r\n  private _iban: string\r\n  private _bic: string\r\n  private _holder: string\r\n\r\n  constructor(iban?: string) {\r\n    super()\r\n    this._iban = iban || ''\r\n  }\r\n\r\n  /**\r\n   * Set iban number\r\n   *\r\n   * @param {string} iban\r\n   * @returns {SepaDirectDebitSecured}\r\n   */\r\n  public setIban(iban: string): SepaDirectDebitSecured {\r\n    this._iban = iban\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get iban number\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getIban(): string {\r\n    return this._iban\r\n  }\r\n\r\n  /**\r\n   * Set bic number\r\n   *\r\n   * @param {string} bic\r\n   * @returns {Card}\r\n   */\r\n  public setBic(bic: string): SepaDirectDebitSecured {\r\n    this._bic = bic\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get bic number\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getBic(): string {\r\n    return this._bic\r\n  }\r\n\r\n  /**\r\n   * Set holder\r\n   *\r\n   * @param {string} holder\r\n   * @returns {Card}\r\n   */\r\n  public setHolder(holder: string): SepaDirectDebitSecured {\r\n    this._holder = holder\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get holder\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getHolder(): string {\r\n    return this._holder\r\n  }\r\n\r\n  /**\r\n   * Get url end point\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getTypeUrl(): string {\r\n    return apiURL.URL_TYPE_SEPA_DIRECT_DEBIT_SECURED\r\n  }\r\n\r\n  /**\r\n   * Get Payload\r\n   *\r\n   * @returns\r\n   */\r\n  public getPayload() {\r\n    return {\r\n      iban: this.getIban(),\r\n      bic: this.getBic(),\r\n      holder: this.getHolder(),\r\n    }\r\n  }\r\n}\r\n","import * as apiURL from '../../configs/ApiUrls'\r\nimport AbstractPaymentType from './AbstractPaymentType'\r\nimport PaymentType from './PaymentType'\r\n\r\nexport default class Sofort extends AbstractPaymentType implements PaymentType {\r\n  /**\r\n   * Get url end point\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getTypeUrl(): string {\r\n    return apiURL.URL_TYPE_SOFORT\r\n  }\r\n\r\n  /**\r\n   * Get Payload\r\n   *\r\n   * @returns\r\n   */\r\n  public getPayload() {\r\n    return {}\r\n  }\r\n}\r\n","import * as apiURL from '../../configs/ApiUrls'\r\nimport AbstractPaymentType from './AbstractPaymentType'\r\nimport PaymentType from './PaymentType'\r\n\r\nexport default class WechatPay extends AbstractPaymentType implements PaymentType {\r\n  /**\r\n   * Get url end point\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getTypeUrl(): string {\r\n    return apiURL.URL_TYPE_WECHATPAY\r\n  }\r\n\r\n  /**\r\n   * Get Payload\r\n   *\r\n   * @returns\r\n   */\r\n  public getPayload() {\r\n    return {}\r\n  }\r\n}\r\n","import AbstractPaymentType from '../payments/types/AbstractPaymentType';\r\nimport Alipay from '../payments/types/Alipay';\r\nimport Bancontact from '../payments/types/Bancontact';\r\nimport Card from '../payments/types/Card';\r\nimport EPS from '../payments/types/Eps';\r\nimport Giropay from '../payments/types/Giropay';\r\nimport HirePurchase from '../payments/types/HirePurchase';\r\nimport Ideal from '../payments/types/Ideal';\r\nimport Invoice from '../payments/types/Invoice';\r\nimport InvoiceFactoring from '../payments/types/InvoiceFactoring';\r\nimport InvoiceGuaranteed from '../payments/types/InvoiceGuaranteed';\r\nimport InvoiceSecured from '../payments/types/InvoiceSecured';\r\nimport Paypal from '../payments/types/Paypal';\r\nimport PIS from '../payments/types/Pis';\r\nimport Prepayment from '../payments/types/Prepayment';\r\nimport Przelewy24 from '../payments/types/Przelewy24';\r\nimport SepaDirectDebit from '../payments/types/SepaDirectDebit';\r\nimport SepaDirectDebitGuaranteed from '../payments/types/SepaDirectDebitGuaranteed';\r\nimport SepaDirectDebitSecured from '../payments/types/SepaDirectDebitSecured';\r\nimport Sofort from '../payments/types/Sofort';\r\nimport WechatPay from '../payments/types/WechatPay';\r\n\r\n/**\r\n * Replace URL with parameters: {paymentId} => s-pay-1781\r\n *\r\n * @param {string} url\r\n * @param {*} args\r\n * @returns\r\n */\r\nexport const replaceUrl = (url: string, args: any) => {\r\n  const regex = /{([a-zA-Z]+)}/gm\r\n\r\n  const urlReplaced = url.replace(regex, (matches, item) => {\r\n    return args[item] || ''\r\n  })\r\n\r\n  return urlReplaced\r\n}\r\n\r\n/**\r\n * Get refund id from url\r\n *\r\n * Ex:\r\n * <domain>payments/s-pay-3883/charges/s-chg-1/cancels/s-cnl-1\r\n * It should return s-chg-1 as refund Id of this cancel\r\n *\r\n * @param {string} url\r\n * @returns\r\n */\r\nexport const getRefundIdOfCancel = (url: string) => {\r\n  const regex = /\\/([a-zA-Z-0-9]+)\\/cancels/gm\r\n  const matches = regex.exec(url)\r\n\r\n  return matches ? matches[1] : ''\r\n}\r\n\r\n/**\r\n * Get payment type from typeId\r\n * Ex:\r\n * crd => Card()\r\n * gro => GrioPay()\r\n * @param {string} typeId\r\n * @returns {AbstractPaymentType}\r\n */\r\nexport const getPaymentTypeFromTypeId = (typeId: string): AbstractPaymentType => {\r\n  if (typeId.length < 5) {\r\n    throw new Error(`Type ${typeId} is currently not supported by the SDK`)\r\n  }\r\n\r\n  const paymentType = typeId.substring(2, 5)\r\n  switch (paymentType) {\r\n    case 'crd':\r\n      return new Card()\r\n    case 'eps':\r\n      return new EPS()\r\n    case 'gro':\r\n      return new Giropay()\r\n    case 'ppl':\r\n      return new Paypal()\r\n    case 'idl':\r\n      return new Ideal()\r\n    case 'ivc':\r\n      return new Invoice()\r\n    case 'ivg':\r\n      return new InvoiceGuaranteed()\r\n    case 'ivs':\r\n      return new InvoiceSecured()\r\n    case 'ivf':\r\n      return new InvoiceFactoring()\r\n    case 'ppy':\r\n      return new Prepayment()\r\n    case 'p24':\r\n      return new Przelewy24()\r\n    case 'sdd':\r\n      return new SepaDirectDebit(\"\")\r\n    case 'ddg':\r\n      return new SepaDirectDebitGuaranteed(\"\")\r\n    case 'dds':\r\n      return new SepaDirectDebitSecured(\"\")\r\n    case 'sft':\r\n      return new Sofort()\r\n    case 'pis':\r\n      return new PIS()\r\n    case 'ali':\r\n      return new Alipay()\r\n    case 'wcp':\r\n      return new WechatPay()\r\n    case 'bct':\r\n      return new Bancontact()\r\n    case 'hdd':\r\n      return new HirePurchase()\r\n    default:\r\n      throw new Error(`Type ${typeId} is currently not supported by the SDK`)\r\n  }\r\n}\r\n\r\n/**\r\n * Map response with propery payment Type\r\n *\r\n * @param {*} response\r\n * @returns {AbstractPaymentType}\r\n */\r\nexport const mapResponsePaymentType = (response: any): AbstractPaymentType => {\r\n  switch (response.method) {\r\n    case 'card':\r\n      const card: Card = new Card()\r\n        .setNumber(response.number)\r\n        .setExpiryDate(response.expiryDate)\r\n        .setCVC(response.cvc)\r\n        .setBrand(response.brand)\r\n        .setRecurring(response.recurring)\r\n\r\n      if (response.cardHolder) {\r\n        card.setCardHolder(response.cardHolder)\r\n      }\r\n\r\n      if (response.cardDetails) {\r\n        card.setCardDetails(response.cardDetails)\r\n      }\r\n\r\n      card.setId(response.id)\r\n      card.setGeoLocation(response.geoLocation)\r\n      return card\r\n\r\n    case 'EPS':\r\n      const eps: EPS = new EPS().setBic(response.bic)\r\n\r\n      eps.setId(response.id)\r\n      eps.setGeoLocation(response.geoLocation)\r\n      return eps\r\n\r\n    case 'giropay':\r\n      const giropay: Giropay = new Giropay()\r\n\r\n      giropay.setId(response.id)\r\n      giropay.setGeoLocation(response.geoLocation)\r\n      return giropay\r\n\r\n    case 'paypal':\r\n      const paypal: Paypal = new Paypal()\r\n\r\n      paypal.setId(response.id)\r\n      paypal.setGeoLocation(response.geoLocation)\r\n      paypal.setEmail(response.email)\r\n      return paypal\r\n\r\n    case 'ideal':\r\n      const ideal: Ideal = new Ideal().setBic(response.bic)\r\n\r\n      ideal.setId(response.id)\r\n      ideal.setGeoLocation(response.geoLocation)\r\n      return ideal\r\n\r\n    case 'invoice':\r\n      const invoice: Invoice = new Invoice()\r\n\r\n      invoice.setId(response.id)\r\n      invoice.setGeoLocation(response.geoLocation)\r\n      return invoice\r\n\r\n    case 'invoice-guaranteed':\r\n      const invoiceGuaranteed: InvoiceGuaranteed = new InvoiceGuaranteed()\r\n\r\n      invoiceGuaranteed.setId(response.id)\r\n      invoiceGuaranteed.setGeoLocation(response.geoLocation)\r\n      return invoiceGuaranteed\r\n\r\n    case 'invoice-secured':\r\n      const invoiceSecured: InvoiceSecured = new InvoiceSecured()\r\n\r\n      invoiceSecured.setId(response.id)\r\n      invoiceSecured.setGeoLocation(response.geoLocation)\r\n      return invoiceSecured\r\n\r\n    case 'invoice-factoring':\r\n      const invoiceFactoring: InvoiceFactoring = new InvoiceFactoring()\r\n\r\n      invoiceFactoring.setId(response.id)\r\n      invoiceFactoring.setGeoLocation(response.geoLocation)\r\n      return invoiceFactoring\r\n\r\n    case 'przelewy24':\r\n      const przelewy24: Przelewy24 = new Przelewy24()\r\n\r\n      przelewy24.setId(response.id)\r\n      przelewy24.setGeoLocation(response.geoLocation)\r\n      return przelewy24\r\n\r\n    case 'prepayment':\r\n      const prepayment: Prepayment = new Prepayment()\r\n\r\n      prepayment.setId(response.id)\r\n      prepayment.setGeoLocation(response.geoLocation)\r\n      return prepayment\r\n\r\n    case 'sepa-direct-debit':\r\n      const sepaDirectDebit: SepaDirectDebit = new SepaDirectDebit(response.iban)\r\n        .setBic(response.bic)\r\n        .setHolder(response.holder)\r\n\r\n      sepaDirectDebit.setId(response.id)\r\n      sepaDirectDebit.setGeoLocation(response.geoLocation)\r\n      return sepaDirectDebit\r\n\r\n    case 'sepa-direct-debit-guaranteed':\r\n      const ddg: SepaDirectDebitGuaranteed = new SepaDirectDebitGuaranteed(response.iban)\r\n        .setBic(response.bic)\r\n        .setHolder(response.holder)\r\n\r\n      ddg.setId(response.id)\r\n      ddg.setGeoLocation(response.geoLocation)\r\n      return ddg\r\n\r\n    case 'sepa-direct-debit-secured':\r\n      const dds: SepaDirectDebitSecured = new SepaDirectDebitSecured(response.iban)\r\n        .setBic(response.bic)\r\n        .setHolder(response.holder)\r\n\r\n      dds.setId(response.id)\r\n      dds.setGeoLocation(response.geoLocation)\r\n      return dds\r\n\r\n    case 'sofort':\r\n      const sofort: Sofort = new Sofort()\r\n\r\n      sofort.setId(response.id)\r\n      sofort.setGeoLocation(response.geoLocation)\r\n      return sofort\r\n\r\n    case 'PIS':\r\n      const pis: PIS = new PIS()\r\n\r\n      pis.setId(response.id)\r\n      pis.setGeoLocation(response.geoLocation)\r\n      return pis\r\n\r\n    case 'alipay':\r\n      const alipay: Alipay = new Alipay()\r\n\r\n      alipay.setId(response.id)\r\n      alipay.setGeoLocation(response.geoLocation)\r\n      return alipay\r\n\r\n    case 'wechatpay':\r\n      const wechatpay: WechatPay = new WechatPay()\r\n\r\n      wechatpay.setId(response.id)\r\n      wechatpay.setGeoLocation(response.geoLocation)\r\n      return wechatpay\r\n\r\n    case 'bancontact':\r\n      const bancontact: Bancontact = new Bancontact()\r\n\r\n      if (response.holder) {\r\n        bancontact.setHolder(response.holder)\r\n      }\r\n\r\n      bancontact.setId(response.id)\r\n      bancontact.setGeoLocation(response.geoLocation)\r\n      return bancontact\r\n\r\n    case 'hire-purchase-direct-debit':\r\n      const hirePurchase: HirePurchase = new HirePurchase()\r\n\r\n      hirePurchase\r\n        .setIban(response.iban)\r\n        .setBic(response.bic)\r\n        .setAccountHolder(response.accountHolder)\r\n        .setOrderDate(response.orderDate)\r\n        .setNumberOfRates(response.numberOfRates)\r\n        .setDayOfPurchase(response.dayOfPurchase)\r\n        .setTotalPurchaseAmount(response.totalPurchaseAmount)\r\n        .setTotalInterestAmount(response.totalInterestAmount)\r\n        .setEffectiveInterestRate(response.effectiveInterestRate)\r\n        .setNominalInterestRate(response.nominalInterestRate)\r\n        .setFeeFirstRate(response.feeFirstRate)\r\n        .setFeePerRate(response.feePerRate)\r\n        .setMonthlyRate(response.monthlyRate)\r\n        .setLastRate(response.lastRate)\r\n        .setInvoiceDate(response.invoiceDate)\r\n        .setInvoiceDueDate(response.invoiceDueDate)\r\n\r\n      hirePurchase.setId(response.id)\r\n      hirePurchase.setGeoLocation(response.geoLocation)\r\n      return hirePurchase\r\n\r\n    default:\r\n      throw new Error(`Type ${response.method} is currently not supported by the SDK`)\r\n  }\r\n}\r\n","export default class Processing {\r\n  private _uniqueId: string\r\n  private _shortId: string\r\n  \r\n  /**\r\n   * Get UniqueId\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getUniqueId(): string {\r\n    return this._uniqueId\r\n  }\r\n\r\n  /**\r\n   * Set Unique Id\r\n   *\r\n   * @param {string} uniqueId\r\n   * @returns {Processing}\r\n   */\r\n  public setUniqueId(uniqueId: string): Processing {\r\n    this._uniqueId = uniqueId\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get Short Id\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getShortId(): string {\r\n    return this._shortId\r\n  }\r\n\r\n  /**\r\n   * Set Short Id\r\n   *\r\n   * @param {string} shortId\r\n   * @returns {Processing}\r\n   */\r\n  public setShortId(shortId: string): Processing {\r\n    this._shortId = shortId\r\n    return this\r\n  }\r\n}\r\n","import AbstractPayment from './AbstractPayment'\r\nimport Heidelpay from '../../Heidelpay'\r\nimport Resources from './Resources'\r\nimport Processing from './Processing';\r\n\r\nexport default class Cancel extends AbstractPayment {\r\n  private amount: string\r\n  private orderId: string\r\n  private refundId: string\r\n  private paymentReference: string\r\n  private resources: Resources\r\n  private processing: Processing\r\n\r\n  constructor(heidelpay: Heidelpay) {\r\n    super(heidelpay)\r\n    this.resources = new Resources()\r\n    this.processing = new Processing()\r\n  }\r\n\r\n  /**\r\n   * Get Amount\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getAmount(): string {\r\n    return this.amount\r\n  }\r\n\r\n  /**\r\n   * Set Amount\r\n   *\r\n   * @param {string} amount\r\n   */\r\n  public setAmount(amount: string) {\r\n    this.amount = amount\r\n  }\r\n\r\n  /**\r\n   * Get Order OId\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getOrderId(): string {\r\n    return this.orderId\r\n  }\r\n\r\n  /**\r\n   * Set Amount\r\n   *\r\n   * @param {string} amount\r\n   */\r\n  public setOrderId(orderId: string) {\r\n    this.orderId = orderId\r\n  }\r\n\r\n  /**\r\n   * Get refund Id\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getRefundId(): string {\r\n    return this.refundId\r\n  }\r\n\r\n  /**\r\n   * Set refund Id\r\n   *\r\n   * @param {string} refund Id\r\n   */\r\n  public setRefundId(refundId: string) {\r\n    this.refundId = refundId\r\n  }\r\n\r\n  /**\r\n   * Set Payment Reference\r\n   *\r\n   * @param {string} paymentReference\r\n   */\r\n  public setPaymentReference(paymentReference: string) {\r\n    this.paymentReference = paymentReference\r\n  }\r\n\r\n  /**\r\n   * Get Payment Reference\r\n   *\r\n   * @returns\r\n   */\r\n  public getPaymentReference() {\r\n    return this.paymentReference\r\n  }\r\n\r\n  /**\r\n   * Get resources\r\n   *\r\n   * @returns {Resources}\r\n   */\r\n  public getResources(): Resources {\r\n    return this.resources\r\n  }\r\n\r\n  /**\r\n   * Set resources\r\n   *\r\n   * @param {*} resources\r\n   */\r\n  public setResources(resources: any) {\r\n    this.resources\r\n      .setCustomerId(resources.customerId)\r\n      .setMetadataId(resources.metadataId)\r\n      .setPaymentId(resources.paymentId)\r\n      .setTypeId(resources.typeId)\r\n      .setTraceId(resources.traceId)\r\n  }\r\n\r\n  /**\r\n   * Get Processing\r\n   *\r\n   * @returns {Processing}\r\n   */\r\n  public getProcessing(): Processing {\r\n    return this.processing\r\n  }\r\n\r\n  /**\r\n   * Set Processing\r\n   *\r\n   * @param {*} processing\r\n   */\r\n  public setProcessing(processing: any) {\r\n    this.processing\r\n      .setUniqueId(processing.uniqueId)\r\n      .setShortId(processing.shortId)\r\n  }\r\n}\r\n\r\nexport type cancelAuthorizeObject = {\r\n  paymentId: string\r\n  paymentReference?: string\r\n  authorizationId: string\r\n  amount?: number\r\n}\r\n\r\nexport type cancelChargeObject = {\r\n  paymentId: string\r\n  paymentReference?: string\r\n  chargeId: string\r\n  amount?: number,\r\n  amountGross?: string,\r\n  amountNet?: string,\r\n  amountVat?: string\r\n}\r\n","import PaymentService from './PaymentService'\r\nimport Cancel from '../payments/business/Cancel'\r\nimport ResponseErrorsMapper from './mappers/ResponseErrorsMapper'\r\n\r\nexport default (args: string, paymentService: PaymentService): Promise<Cancel> => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      // Call api end point to get response\r\n      const response: any = await paymentService\r\n        .getRequestAdapter()\r\n        .get(args, paymentService.getHeidelpay().getPrivateKey(), true)\r\n\r\n      // Handle errors response\r\n      if (response.errors) {\r\n        return reject(ResponseErrorsMapper(response))\r\n      }\r\n\r\n      // New Cancel with Hedeipay instance\r\n      let cancel = new Cancel(paymentService.getHeidelpay())\r\n\r\n      // Set cancel Id\r\n      cancel.setId(response.id)\r\n\r\n      // Set amount of cancel\r\n      cancel.setAmount(response.amount)\r\n\r\n      // Set order Id\r\n      if(response.orderId) {\r\n        cancel.setOrderId(response.orderId)\r\n      }\r\n\r\n      // Set payment reference\r\n      if(response.paymentReference) {\r\n        cancel.setPaymentReference(response.paymentReference)\r\n      }\r\n\r\n      // Set resources\r\n      cancel.setResources(response.resources)\r\n\r\n      // Set Processing\r\n      cancel.setProcessing(response.processing)\r\n\r\n      // Set Payload\r\n      cancel.setPayload(response)\r\n\r\n      // Resolve final result\r\n      resolve(cancel)\r\n    } catch (error) {\r\n      // Reject with error object\r\n      reject(error)\r\n    }\r\n  })\r\n}\r\n","import Heidelpay from '../../Heidelpay'\r\nimport AbstractPayment from './AbstractPayment'\r\nimport { Customer } from '../Customer'\r\nimport Resources from './Resources'\r\nimport PaymentType from '../types/PaymentType'\r\nimport Cancel, { cancelChargeObject } from './Cancel'\r\nimport Processing from './Processing'\r\n\r\nexport default class Charge extends AbstractPayment {\r\n  private amount: string\r\n  private orderId: string\r\n  private currency: string\r\n  private returnUrl: string\r\n  private paymentReference: string\r\n  private card3ds: boolean\r\n  private resources: Resources\r\n  private cancelList: Array<Cancel>\r\n  private processing: Processing\r\n  private invoiceId: string\r\n\r\n  constructor(heidelpay: Heidelpay) {\r\n    super(heidelpay)\r\n    this.resources = new Resources()\r\n    this.processing = new Processing()\r\n  }\r\n  /**\r\n   * Set amount\r\n   *\r\n   * @param {string} amount\r\n   */\r\n  public setAmount(amount: string) {\r\n    this.amount = amount\r\n  }\r\n\r\n  /**\r\n   * Get amount\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getAmount(): string {\r\n    return this.amount\r\n  }\r\n\r\n  /**\r\n   * Get Order Id\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getOrderId(): string {\r\n    return this.orderId\r\n  }\r\n\r\n  /**\r\n   * Set Order Id\r\n   *\r\n   * @param {string} orderId\r\n   */\r\n  public setOrderId(orderId: string) {\r\n    this.orderId = orderId\r\n  }\r\n\r\n  /**\r\n   * Get Invoice Id\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getInvoiceId(): string {\r\n    return this.invoiceId\r\n  }\r\n\r\n  /**\r\n   * Set Invoice Id\r\n   *\r\n   * @param {string} invoiceId\r\n   */\r\n  public setInvoiceId(invoiceId: string) {\r\n    this.invoiceId = invoiceId\r\n  }\r\n\r\n  /**\r\n   * Set currency\r\n   *\r\n   * @param {string} currency\r\n   */\r\n  public setCurrency(currency: string) {\r\n    this.currency = currency\r\n  }\r\n\r\n  /**\r\n   * Get currency\r\n   *\r\n   * @returns\r\n   */\r\n  public getCurrency() {\r\n    return this.currency\r\n  }\r\n\r\n  /**\r\n   * Set return url\r\n   *\r\n   * @param {string} returnUrl\r\n   */\r\n  public setReturnUrl(returnUrl: string) {\r\n    this.returnUrl = returnUrl\r\n  }\r\n\r\n  /**\r\n   * Get return url\r\n   */\r\n  public getReturnUrl() {\r\n    return this.returnUrl\r\n  }\r\n\r\n  /**\r\n   * Set Payment Reference\r\n   *\r\n   * @param {string} paymentReference\r\n   */\r\n  public setPaymentReference(paymentReference: string) {\r\n    this.paymentReference = paymentReference\r\n  }\r\n\r\n  /**\r\n   * Get Payment Reference\r\n   *\r\n   * @returns\r\n   */\r\n  public getPaymentReference() {\r\n    return this.paymentReference\r\n  }\r\n\r\n  /**\r\n   * Set 3ds option\r\n   *\r\n   * @param {string} returnUrl\r\n   */\r\n  public setCard3ds(card3ds: boolean) {\r\n    this.card3ds = card3ds\r\n  }\r\n\r\n  /**\r\n   * Get 3ds option\r\n   */\r\n  public getCard3ds() {\r\n    return this.card3ds\r\n  }\r\n\r\n  /**\r\n   * Get resources\r\n   *\r\n   * @returns {Resources}\r\n   */\r\n  public getResources(): Resources {\r\n    return this.resources\r\n  }\r\n\r\n  /**\r\n   * Set resources\r\n   *\r\n   * @param {*} resources\r\n   */\r\n  public setResources(resources: any) {\r\n    this.resources\r\n      .setCustomerId(resources.customerId)\r\n      .setMetadataId(resources.metadataId)\r\n      .setPaymentId(resources.paymentId)\r\n      .setTypeId(resources.typeId)\r\n      .setBasketId(resources.basketId)\r\n      .setTraceId(resources.traceId)\r\n  }\r\n\r\n  /**\r\n   * Get Processing\r\n   *\r\n   * @returns {Processing}\r\n   */\r\n  public getProcessing(): Processing {\r\n    return this.processing\r\n  }\r\n\r\n  /**\r\n   * Set Processing\r\n   *\r\n   * @param {*} processing\r\n   */\r\n  public setProcessing(processing: any) {\r\n    this.processing\r\n      .setUniqueId(processing.uniqueId)\r\n      .setShortId(processing.shortId)\r\n  }\r\n\r\n  /**\r\n   * Get cancel transaction\r\n   *\r\n   * @param {string} cancelId\r\n   * @returns {Cancel}\r\n   */\r\n  public getCancel(cancelId: string): Cancel {\r\n    const cancelItem = this.getCancelList().find((item: Cancel) => item.getId() === cancelId) as Cancel\r\n\r\n    if (cancelItem && cancelItem.getId()) {\r\n      return cancelItem\r\n    }\r\n\r\n    throw new Error(`Cancel Id is not found in list of transaction`)\r\n  }\r\n\r\n  /**\r\n   * Get list of cancel transactions\r\n   *\r\n   * @returns {Array<Cancel>}\r\n   */\r\n  public getCancelList(): Array<Cancel> {\r\n    return this.cancelList\r\n  }\r\n\r\n  /**\r\n   * Set list of cancel transactions\r\n   *\r\n   * @param {Array<Cancel>} cancelList\r\n   */\r\n  public setCancelList(cancelList: Array<Cancel>) {\r\n    this.cancelList = cancelList\r\n  }\r\n\r\n  /**\r\n   * Refund (Cancel of charge)\r\n   *\r\n   * @param {number} [amount]\r\n   * @returns {Promise<Cancel>}\r\n   */\r\n  public cancel(amount?: number): Promise<Cancel> {\r\n    const cancelChargePayload: cancelChargeObject = {\r\n      chargeId: this.getId(),\r\n      paymentId: this.getResources().getPaymentId()\r\n    }\r\n\r\n    if (amount) {\r\n      cancelChargePayload.amount = amount\r\n    }\r\n\r\n    return this.getHeidelpay().cancelCharge(cancelChargePayload)\r\n  }\r\n}\r\n\r\nexport type chargeObject = {\r\n  amount: number\r\n  orderId?: string\r\n  invoiceId?: string\r\n  currency: string\r\n  returnUrl: string\r\n  paymentReference?: string\r\n  card3ds?: boolean\r\n  typeId: string | PaymentType\r\n  customerId?: string | Customer\r\n  metadataId?: string\r\n  basketId?: string\r\n}\r\n","import PaymentService from './PaymentService'\r\nimport Charge from '../payments/business/Charge';\r\n\r\nexport default (args: string, paymentService: PaymentService): Promise<Charge> => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      // Call api end point to get response\r\n      const response: any = await paymentService\r\n        .getRequestAdapter()\r\n        .get(args, paymentService.getHeidelpay().getPrivateKey(), true)\r\n\r\n      // New Charge with Hedeipay instance\r\n      let charge = new Charge(paymentService.getHeidelpay())\r\n\r\n      // Set charge Id\r\n      charge.setId(response.id)\r\n\r\n      // Set amount of charge\r\n      charge.setAmount(response.amount)\r\n\r\n      // Set order Id\r\n      if(response.orderId) {\r\n        charge.setOrderId(response.orderId)\r\n      }\r\n      \r\n      // Set payment reference\r\n      if(response.paymentReference) {\r\n        charge.setPaymentReference(response.paymentReference)\r\n      }\r\n\r\n      // Set currency\r\n      charge.setCurrency(response.currency)\r\n\r\n      // Set return URL\r\n      charge.setReturnUrl(response.returnUrl)\r\n\r\n      // Set resources\r\n      charge.setResources(response.resources)\r\n\r\n      // Set Processing\r\n      charge.setProcessing(response.processing)\r\n\r\n      // Set Payload\r\n      charge.setPayload(response)\r\n\r\n      // Resolve final result\r\n      resolve(charge)\r\n    } catch (error) {\r\n      // Reject with error object\r\n      reject(error)\r\n    }\r\n  })\r\n}\r\n","import Heidelpay from '../../Heidelpay'\r\nimport AbstractPayment from './AbstractPayment'\r\nimport { Customer } from '../Customer'\r\nimport Charge from './Charge'\r\nimport Resources from './Resources'\r\nimport Cancel, { cancelAuthorizeObject } from './Cancel'\r\nimport PaymentType from '../types/PaymentType'\r\nimport Processing from './Processing';\r\nimport Basket from '../Basket'\r\n\r\nexport default class Authorization extends AbstractPayment {\r\n  private amount: string\r\n  private orderId: string\r\n  private currency: string\r\n  private returnUrl: string\r\n  private paymentReference: string\r\n  private resources: Resources\r\n  private processing: Processing\r\n\r\n  constructor(heidelpay: Heidelpay) {\r\n    super(heidelpay)\r\n    this.resources = new Resources()\r\n    this.processing = new Processing()\r\n  }\r\n\r\n  /**\r\n   * Get Amount\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getAmount(): string {\r\n    return this.amount\r\n  }\r\n\r\n  /**\r\n   * Set Amount\r\n   *\r\n   * @param {string} amount\r\n   */\r\n  public setAmount(amount: string) {\r\n    this.amount = amount\r\n  }\r\n\r\n  /**\r\n   * Get Order OId\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getOrderId(): string {\r\n    return this.orderId\r\n  }\r\n\r\n  /**\r\n   * Set Amount\r\n   *\r\n   * @param {string} amount\r\n   */\r\n  public setOrderId(orderId: string) {\r\n    this.orderId = orderId\r\n  }\r\n\r\n  /**\r\n   * Set currency\r\n   *\r\n   * @param {string} currency\r\n   */\r\n  public setCurrency(currency: string) {\r\n    this.currency = currency\r\n  }\r\n\r\n  /**\r\n   * Get currency\r\n   *\r\n   * @returns\r\n   */\r\n  public getCurrency() {\r\n    return this.currency\r\n  }\r\n\r\n  /**\r\n   * Set return url\r\n   *\r\n   * @param {string} returnUrl\r\n   */\r\n  public setReturnUrl(returnUrl: string) {\r\n    this.returnUrl = returnUrl\r\n  }\r\n\r\n  /**\r\n   * Get return url\r\n   */\r\n  public getReturnUrl() {\r\n    return this.returnUrl\r\n  }\r\n\r\n  /**\r\n   * Set Payment Reference\r\n   *\r\n   * @param {string} paymentReference\r\n   */\r\n  public setPaymentReference(paymentReference: string) {\r\n    this.paymentReference = paymentReference\r\n  }\r\n\r\n  /**\r\n   * Get Payment Reference\r\n   *\r\n   * @returns\r\n   */\r\n  public getPaymentReference() {\r\n    return this.paymentReference\r\n  }\r\n\r\n  /**\r\n   * Get resources\r\n   *\r\n   * @returns {Resources}\r\n   */\r\n  public getResources(): Resources {\r\n    return this.resources\r\n  }\r\n\r\n  /**\r\n   * Set resources\r\n   *\r\n   * @param {*} resources\r\n   */\r\n  public setResources(resources: any) {\r\n    this.resources\r\n      .setCustomerId(resources.customerId)\r\n      .setMetadataId(resources.metadataId)\r\n      .setPaymentId(resources.paymentId)\r\n      .setTypeId(resources.typeId)\r\n      .setTraceId(resources.traceId)\r\n  }\r\n\r\n  /**\r\n   * Get Processing\r\n   *\r\n   * @returns {Processing}\r\n   */\r\n  public getProcessing(): Processing {\r\n    return this.processing\r\n  }\r\n\r\n  /**\r\n   * Set Processing\r\n   *\r\n   * @param {*} processing\r\n   */\r\n  public setProcessing(processing: any) {\r\n    this.processing\r\n      .setUniqueId(processing.uniqueId)\r\n      .setShortId(processing.shortId)\r\n  }\r\n\r\n  /**\r\n   * Charge after authorize\r\n   *\r\n   * @param {number} [amount]\r\n   * @returns {Promise<Charge>}\r\n   */\r\n  public charge(amount?: number): Promise<Charge> {\r\n    const chargeAuthorizePayload: chargeAuthorizeObject = {\r\n      paymentId: this.getResources().getPaymentId()\r\n    }\r\n\r\n    if (amount) {\r\n      chargeAuthorizePayload.amount = amount\r\n    }\r\n\r\n    return this.getHeidelpay().chargeAuthorization(chargeAuthorizePayload)\r\n  }\r\n\r\n  /**\r\n   * Reversal (Cancel of authorization)\r\n   *\r\n   * @param {number} [amount]\r\n   * @returns {Promise<Cancel>}\r\n   */\r\n  public cancel(amount?: number): Promise<Cancel> {\r\n    const cancelAuthorizePayload: cancelAuthorizeObject = {\r\n      authorizationId: this.getId(),\r\n      paymentId: this.getResources().getPaymentId()\r\n    }\r\n\r\n    if (amount) {\r\n      cancelAuthorizePayload.amount = amount\r\n    }\r\n\r\n    return this.getHeidelpay().cancelAuthorization(cancelAuthorizePayload)\r\n  }\r\n}\r\n\r\nexport type authorizeObject = {\r\n  amount: number\r\n  orderId?: string\r\n  currency: string\r\n  typeId: string | PaymentType\r\n  returnUrl: string\r\n  paymentReference?: string\r\n  customerId?: string | Customer\r\n  metadataId?: string\r\n  basketId?: string | Basket,\r\n  effectiveInterestRate?: number\r\n}\r\n\r\nexport type chargeAuthorizeObject = {\r\n  paymentId: string\r\n  paymentReference?: string\r\n  amount?: number\r\n}\r\n","import PaymentService from './PaymentService'\r\nimport Authorization from '../payments/business/Authorization'\r\n\r\nexport default (args: string, paymentService: PaymentService): Promise<Authorization> => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      // Call api end point to get response\r\n      const response: any = await paymentService\r\n        .getRequestAdapter()\r\n        .get(args, paymentService.getHeidelpay().getPrivateKey(), true)\r\n\r\n      // New authorization with Hedeipay instance\r\n      let authorization = new Authorization(paymentService.getHeidelpay())\r\n\r\n      // Set authorization Id\r\n      authorization.setId(response.id)\r\n\r\n      // Set order Id\r\n      if(response.orderId) {\r\n        authorization.setOrderId(response.orderId)\r\n      }\r\n\r\n      // Set amount of authorization\r\n      authorization.setAmount(response.amount)\r\n\r\n      // Set currency\r\n      authorization.setCurrency(response.currency)\r\n\r\n      // Set return URL\r\n      authorization.setReturnUrl(response.returnUrl)\r\n\r\n      // Set payment Reference\r\n      authorization.setPaymentReference(response.paymentReference)\r\n\r\n      // Set resources\r\n      authorization.setResources(response.resources)\r\n\r\n      // Set Processing\r\n      authorization.setProcessing(response.processing)\r\n\r\n      // Set payload\r\n      authorization.setPayload(response)\r\n\r\n      // Resolve final result\r\n      resolve(authorization)\r\n    } catch (error) {\r\n      // Reject with error object\r\n      reject(error)\r\n    }\r\n  })\r\n}\r\n","import * as apiURL from '../configs/ApiUrls'\r\nimport Payment from '../payments/business/Payment'\r\nimport PaymentService from './PaymentService'\r\nimport Authorization from '../payments/business/Authorization'\r\nimport { getRefundIdOfCancel } from '../utils/Utils'\r\nimport FetchCancel from './FetchCancel'\r\nimport Charge from '../payments/business/Charge'\r\nimport Cancel from '../payments/business/Cancel'\r\nimport FetchCharge from './FetchCharge'\r\nimport FetchAuthorization from './FetchAuthorization';\r\nimport ResponseErrorsMapper from './mappers/ResponseErrorsMapper';\r\n\r\nexport default (paymentId: string, paymentService: PaymentService): Promise<Payment> => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      // Call api end point to get response\r\n      const response: any = await paymentService\r\n        .getRequestAdapter()\r\n        .get(`${apiURL.URL_PAYMENT}/${paymentId}`, paymentService.getHeidelpay().getPrivateKey())\r\n\r\n      // Handle errors response\r\n      if (response.errors) {\r\n        return reject(ResponseErrorsMapper(response))\r\n      }\r\n\r\n      // New Payment with Hedeipay instance\r\n      let payment = new Payment(paymentService.getHeidelpay())\r\n\r\n      // Set payment Id\r\n      payment.setId(response.id)\r\n\r\n      // Set resources\r\n      payment.setResources(response.resources)\r\n\r\n      // Fetch authorization transaction and set to payment object\r\n      payment.setAuthorization(await _fetchAuthorization(response.transactions, paymentService))\r\n\r\n      // Fetch cancel list transaction and set to payment object\r\n      payment.setCancelList(await _fetchCancelList(payment, response.transactions, paymentService))\r\n\r\n      // Fetch charge list transaction and set to payment object\r\n      payment.setChargeList(await _fetchChargeList(payment, response.transactions, paymentService))\r\n\r\n      // Set Payload\r\n      payment.setPayload(response)\r\n\r\n      // Resolve final result\r\n      resolve(payment)\r\n    } catch (error) {\r\n      // Reject with error object\r\n      reject(error)\r\n    }\r\n  })\r\n}\r\n\r\nconst _fetchAuthorization = (\r\n  transactions: any,\r\n  paymentService: PaymentService\r\n): Promise<Authorization> => {\r\n  return new Promise(async resolve => {\r\n    // Find transaction authorize in list of transactions\r\n    const authorizeItem = transactions.find((item: any) => item.type === 'authorize')\r\n\r\n    if (typeof authorizeItem === 'undefined') {\r\n      resolve() // No authorize Item found\r\n    } else {\r\n      // Call Authorization service to fetch transaction\r\n      const authorization: Authorization = await FetchAuthorization(\r\n        authorizeItem.url,\r\n        paymentService\r\n      )\r\n\r\n      // Resolve final result\r\n      resolve(authorization)\r\n    }\r\n  })\r\n}\r\n\r\nconst _fetchChargeList = (\r\n  payment: Payment,\r\n  transactions: any,\r\n  paymentService: PaymentService,\r\n): Promise<Array<Charge>> => {\r\n  return new Promise(async resolve => {\r\n    // Find charge list in list of transactions\r\n    const chargeListItem = transactions.filter((item: any) => item.type === 'charge')\r\n    const chargeList: Array<Charge> = []\r\n    const cancelList: Array<Cancel> = payment.getCancelList()\r\n\r\n    const promiseCharge = chargeListItem.map(async (item: any) => {\r\n      // Call Charge service to fetch transaction\r\n      const charge: Charge = await FetchCharge(item.url, paymentService)\r\n\r\n      // Set payment object in cancel\r\n      charge.setPayment(payment)\r\n\r\n      // Set cancel list for charge object\r\n      charge.setCancelList(cancelList.filter((itemCancel: any) => itemCancel.getRefundId() === charge.getId()))\r\n\r\n      // Push charge instance to chargeList array\r\n      chargeList.push(charge)\r\n    })\r\n\r\n    // Await util charge service fetch done\r\n    await Promise.all(promiseCharge)\r\n\r\n    // Resolve final result\r\n    resolve(chargeList)\r\n  })\r\n}\r\n\r\nconst _fetchCancelList = (\r\n  payment: Payment,\r\n  transactions: any,\r\n  paymentService: PaymentService\r\n): Promise<Array<Cancel>> => {\r\n  return new Promise(async resolve => {\r\n    // Find charge list in list of transactions\r\n    const cancelListItem = transactions.filter(\r\n      (item: any) => item.type === 'cancel' || item.type === 'cancel-charge' || item.type === 'cancel-authorize'\r\n    )\r\n    const cancelList: Array<Cancel> = []\r\n\r\n    const promiseCancel = cancelListItem.map(async (item: any) => {\r\n      // Call Cancel service to fetch transaction\r\n      const cancel: Cancel = await FetchCancel(item.url, paymentService)\r\n\r\n      // Set payment object in cancel\r\n      cancel.setPayment(payment)\r\n\r\n      // Set refund Id of cancel\r\n      cancel.setRefundId(getRefundIdOfCancel(item.url))\r\n\r\n      // Push charge instance to cancelList array\r\n      cancelList.push(cancel)\r\n    })\r\n\r\n    // Await util charge service fetch done\r\n    await Promise.all(promiseCancel)\r\n\r\n    // Resolve final result\r\n    resolve(cancelList)\r\n  })\r\n}\r\n","import * as Utils from '../utils/Utils'\r\nimport PaymentType from '../payments/types/PaymentType'\r\nimport PaymentService from './PaymentService'\r\nimport AbstractPaymentType from '../payments/types/AbstractPaymentType'\r\n\r\nexport default (typeId: string, paymentService: PaymentService): Promise<PaymentType> => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      // Parse paymentTypeId string to typeId and create a PaymentType\r\n      const paymentType: AbstractPaymentType = Utils.getPaymentTypeFromTypeId(typeId)\r\n\r\n      // Set Heidelpay instance\r\n      paymentType.setHeidelpay(paymentService.getHeidelpay())\r\n\r\n      // Parse URL with parameters\r\n      const requestUrl = `${paymentType.getTypeUrl()}/${typeId}`\r\n\r\n      // Call api end point to get response\r\n      const response: any = await paymentService\r\n        .getRequestAdapter()\r\n        .get(requestUrl, paymentService.getHeidelpay().getPrivateKey())\r\n\r\n      // Resolve final result\r\n      resolve(Utils.mapResponsePaymentType(response))  \r\n    } catch (error) {\r\n      // Reject with error object\r\n      reject(error)  \r\n    }\r\n  })\r\n}\r\n","import { Customer } from '../../payments/Customer'\r\n\r\nexport default (response: any, customer: Customer | undefined = undefined): Customer => {\r\n  // For create new customer\r\n  if (customer) {\r\n    const newCustomer = new Customer()\r\n      .setCustomerId(response.id)\r\n      .setFirstName(customer.getFirstName())\r\n      .setLastName(customer.getLastName())\r\n      .setSalutation(customer.getSalutation())\r\n      .setBirthDate(customer.getBirthDate())\r\n      .setEmail(customer.getEmail())\r\n      .setPhone(customer.getPhone())\r\n      .setMobile(customer.getMobile())\r\n      .setBillingAddress(customer.getBillingAddress())\r\n      .setShippingAddress(customer.getShippingAddress())\r\n      .setCompanyInfo(customer.getCompanyInfo())\r\n\r\n    return newCustomer\r\n  }\r\n\r\n  // For fetch or update customer\r\n  const newCustomer = new Customer()\r\n    .setCustomerId(response.id)\r\n    .setFirstName(response.firstname)\r\n    .setLastName(response.lastname)\r\n    .setSalutation(response.salutation)\r\n    .setBirthDate(response.birthDate)\r\n    .setEmail(response.email)\r\n    .setPhone(response.phone)\r\n    .setMobile(response.mobile)\r\n    .setBillingAddress(response.billingAddress)\r\n    .setShippingAddress(response.shippingAddress)\r\n    .setCompanyInfo(response.companyInfo)\r\n\r\n  return newCustomer\r\n}\r\n","import * as apiURL from '../configs/ApiUrls'\r\nimport PaymentService from './PaymentService'\r\nimport { Customer } from '../payments/Customer'\r\nimport ResponseCustomerMapper from './mappers/ResponseCustomerMapper'\r\n\r\nexport default (customer: Customer, paymentService: PaymentService): Promise<Customer> => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      // Call api end point to get response\r\n      const response: any = await paymentService\r\n        .getRequestAdapter()\r\n        .post(\r\n          apiURL.URL_CUSTOMER,\r\n          customer.getRequestPayload(),\r\n          paymentService.getHeidelpay().getPrivateKey()\r\n        )\r\n\r\n      // Mapper customer\r\n      const newCustomer = ResponseCustomerMapper(response, customer)\r\n\r\n      // Resolve final result\r\n      resolve(newCustomer)  \r\n    } catch (error) {\r\n      // Reject with error object\r\n      reject(error)\r\n    }\r\n  })\r\n}\r\n","import * as apiURL from '../configs/ApiUrls'\r\nimport PaymentService from './PaymentService'\r\nimport { Customer } from '../payments/Customer'\r\nimport ResponseCustomerMapper from './mappers/ResponseCustomerMapper'\r\n\r\nexport default (customerId: string, customer: Customer, paymentService: PaymentService): Promise<Customer> => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      // Call api end point to get response\r\n      const response: any = await paymentService\r\n        .getRequestAdapter()\r\n        .put(\r\n          `${apiURL.URL_CUSTOMER}/${customerId}`,\r\n          customer.getRequestPayload(),\r\n          paymentService.getHeidelpay().getPrivateKey()\r\n        )\r\n\r\n      // Mapper customer\r\n      const newCustomer = ResponseCustomerMapper(response, customer)\r\n\r\n      // Resolve final result\r\n      resolve(newCustomer)\r\n    } catch (error) {\r\n      // Reject with error object\r\n      reject(error)\r\n    }\r\n  })\r\n}\r\n","import * as apiURL from '../configs/ApiUrls'\r\nimport PaymentService from './PaymentService'\r\n\r\nexport default (customerId: string, paymentService: PaymentService): Promise<boolean> => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      // Call api end point to get response\r\n      const response: any = await paymentService\r\n      .getRequestAdapter()\r\n      .delete(\r\n        `${apiURL.URL_CUSTOMER}/${customerId}`, \r\n        {}, // send empty body when call delete customer\r\n        paymentService.getHeidelpay().getPrivateKey()\r\n      )\r\n      // Resolve final result\r\n      resolve(response)\r\n    } catch (error) {\r\n      // Reject with error object\r\n      reject(error)\r\n    }\r\n  })\r\n}\r\n","import * as apiURL from '../configs/ApiUrls'\r\nimport PaymentService from './PaymentService'\r\nimport { Customer } from '../payments/Customer'\r\nimport ResponseCustomerMapper from './mappers/ResponseCustomerMapper'\r\n\r\nexport default (customerId: string, paymentService: PaymentService): Promise<Customer> => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      // Call api end point to get response\r\n      const response: any = await paymentService\r\n        .getRequestAdapter()\r\n        .get(\r\n          `${apiURL.URL_CUSTOMER}/${customerId}`, \r\n          paymentService.getHeidelpay().\r\n          getPrivateKey()\r\n        )\r\n\r\n      // Mapper customer\r\n      const newCustomer = ResponseCustomerMapper(response)\r\n\r\n      // Resolve final result\r\n      resolve(newCustomer)  \r\n    } catch (error) {\r\n      // Reject with error object\r\n      reject(error)  \r\n    }\r\n  })\r\n}\r\n","export default class Metadata{\r\n  private _id: string\r\n  private _metadata: Object\r\n\r\n  constructor() {}\r\n\r\n  /**\r\n   * Set Id\r\n   * @param {string} id\r\n   */\r\n  public setId(id: string): Metadata{\r\n    this._id = id\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get Id\r\n   *\r\n   * @type {string}\r\n   */\r\n  public getId(): string {\r\n    return this._id\r\n  }\r\n\r\n  /**\r\n   * Set metadata value\r\n   *\r\n   * @param {object} value\r\n   * @returns {Metadata}\r\n   */\r\n  public setValue(value: object): Metadata {\r\n    this._metadata = value\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get metadata value\r\n   *\r\n   * @type {object}\r\n   */\r\n  public getValue(): object {\r\n    return this._metadata\r\n  }\r\n\r\n  /**\r\n   * Get Request Payload\r\n   */\r\n  public getRequestPayload() {\r\n    return this._metadata\r\n  }\r\n}","import * as apiURL from '../configs/ApiUrls'\r\nimport PaymentService from './PaymentService'\r\nimport Metadata from '../payments/Metadata'\r\n\r\nexport default (metadata: Metadata, paymentService: PaymentService): Promise<Metadata> => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      // Call api end point to get response\r\n      const response: any = await paymentService\r\n        .getRequestAdapter()\r\n        .post(\r\n          apiURL.URL_METADATA,\r\n          metadata.getRequestPayload(),\r\n          paymentService.getHeidelpay().getPrivateKey()\r\n        )\r\n\r\n      // Mapper metadata value\r\n      const newMetadata = new Metadata()\r\n      newMetadata.setId(response.id)\r\n\r\n      // Resolve final result\r\n      resolve(newMetadata)  \r\n    } catch (error) {\r\n      // Reject with error object\r\n      reject(error)\r\n    }\r\n  })\r\n}\r\n","import * as apiURL from '../configs/ApiUrls'\r\nimport PaymentService from './PaymentService'\r\nimport Metadata from '../payments/Metadata'\r\n\r\nexport default (metadataId: string, paymentService: PaymentService): Promise<Metadata> => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      // Call api end point to get response\r\n      const response: any = await paymentService\r\n        .getRequestAdapter()\r\n        .get(\r\n          `${apiURL.URL_METADATA}/${metadataId}`, \r\n          paymentService.getHeidelpay().getPrivateKey()\r\n        )\r\n\r\n      // Mapper metadata value\r\n      const newMetadata = new Metadata()\r\n      newMetadata.setValue(response)\r\n\r\n      // Resolve final result\r\n      resolve(newMetadata)  \r\n    } catch (error) {\r\n      // Reject with error object\r\n      reject(error)  \r\n    }\r\n  })\r\n}\r\n","class Basket {\r\n  private _id: string\r\n\tprivate _amountTotalGross: string\r\n  private _amountTotalDiscount: string  \r\n  private _amountTotalVat: string  \r\n  private _currencyCode: string\r\n  private _orderId: string\r\n  private _note: string\r\n  private _payload: object\r\n  private _basketItems: Array<basketItemObject>\r\n\r\n  constructor() {\r\n    this._basketItems = []\r\n  }\r\n\r\n  /**\r\n   * Set Id\r\n   * @param {string} id\r\n   */\r\n  public setId(id: string): Basket{\r\n    this._id = id\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get Id\r\n   *\r\n   * @type {string}\r\n   */\r\n  public getId(): string {\r\n    return this._id\r\n  }\r\n\r\n  /**\r\n   * Set payload object\r\n   *\r\n   * @param {*} payload\r\n   * @returns\r\n   */\r\n  public setPayload(payload: any) {\r\n    return this._payload = payload\r\n  }\r\n  \r\n  /**\r\n   * Get payload object\r\n   *\r\n   * @returns {*}\r\n   */\r\n  public getPayload(): any {\r\n    return this._payload\r\n  }\r\n\r\n  /**\r\n   * Get Request Payload\r\n   */\r\n  public getRequestPayload() {\r\n    return {\r\n      amountTotalGross: this.getAmountTotalGross(),\r\n      amountTotalDiscount: this.getAmountTotalDiscount(),\r\n      amountTotalVat: this.getAmountTotalVat(),\r\n      currencyCode: this.getCurrencyCode(),\r\n      orderId: this.getOrderId(),\r\n      note: this.getNote(),\r\n      basketItems: this.getItems(),\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set amount total\r\n   * @param {string} value \r\n   * @returns {Basket}\r\n   */\r\n  public setAmountTotalGross(value: string): Basket {\r\n    this._amountTotalGross = value\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get amount total\r\n   * @param {string} value \r\n   */\r\n  public getAmountTotalGross(): string{\r\n    return this._amountTotalGross\r\n  }\r\n\r\n  /**\r\n   * Set amount total discount\r\n   * @param {string} value \r\n   * @returns {Basket}\r\n   */\r\n  public setAmountTotalDiscount(value: string): Basket {\r\n    this._amountTotalDiscount = value\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get amount total discount\r\n   * @param {string} value \r\n   */\r\n  public getAmountTotalDiscount(): string{\r\n    return this._amountTotalDiscount\r\n  }\r\n\r\n  /**\r\n   * Set amount total vat\r\n   * @param {string} value \r\n   * @returns {Basket}\r\n   */\r\n  public setAmountTotalVat(value: string): Basket {\r\n    this._amountTotalVat = value\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get amount total vat\r\n   * @param {string} value \r\n   */\r\n  public getAmountTotalVat(): string {\r\n    return this._amountTotalVat\r\n  }\r\n\r\n  /**\r\n   * Set currency code\r\n   * @param {string} value \r\n   * @returns {Basket}\r\n   */\r\n  public setCurrencyCode(value: string): Basket {\r\n    this._currencyCode = value\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get currency code\r\n   * @param {string} value \r\n   */\r\n  public getCurrencyCode(): string{\r\n    return this._currencyCode\r\n  }\r\n\r\n  /**\r\n   * Set order Id\r\n   * @param {string} value \r\n   * @returns {Basket}\r\n   */\r\n  public setOrderId(value: string): Basket {\r\n    this._orderId = value\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get Order Id\r\n   * @param {string} value \r\n   */\r\n  public getOrderId(): string{\r\n    return this._orderId\r\n  }\r\n\r\n  /**\r\n   * Set basket note\r\n   * @param {string} value \r\n   * @returns {Basket}\r\n   */\r\n  public setNote(value: string): Basket {\r\n    this._note = value\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get note for basket\r\n   * @param {string} value \r\n   */\r\n  public getNote(): string{\r\n    return this._note\r\n  }\r\n\r\n  /**\r\n   * Add basket Item\r\n   * @param {basketItemObject} item\r\n   */\r\n  public addItem(item: basketItemObject) {\r\n    this._basketItems.push(item)\r\n  }\r\n\r\n  /**\r\n   * Get basket Item\r\n   * @param {basketItemObject} item\r\n   * @returns {Array<basketItemObject>}\r\n   */\r\n  public getItems(): Array<basketItemObject> {\r\n    return this._basketItems\r\n  }\r\n}\r\n\r\nexport type basketItemObject = {\r\n  title: string,\r\n  basketItemReferenceId: string,\r\n  quantity: number,\r\n  amountPerUnit: string,\r\n  amountNet: string,\r\n  subTitle?: string,\r\n  unit?: string,\r\n  amountDiscount?: string,\r\n  vat?: string,\r\n  imageUrl?: string,\r\n  amountGross?: string,\r\n  amountVat?: string,\r\n  type?: string,\r\n}\r\n\r\nexport default Basket","import * as apiURL from '../configs/ApiUrls'\r\nimport PaymentService from './PaymentService'\r\nimport Basket from '../payments/Basket'\r\n\r\nexport default (basket: Basket, paymentService: PaymentService): Promise<Basket> => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      // Call api end point to get response\r\n      const response: any = await paymentService\r\n        .getRequestAdapter()\r\n        .post(\r\n          apiURL.URL_BASKET,\r\n          basket.getRequestPayload(),\r\n          paymentService.getHeidelpay().getPrivateKey()\r\n        )\r\n\r\n      const newBasket = new Basket()\r\n      newBasket.setId(response.id)\r\n\r\n      // Resolve final result\r\n      resolve(newBasket)  \r\n    } catch (error) {\r\n      // Reject with error object\r\n      reject(error)\r\n    }\r\n  })\r\n}\r\n","import * as apiURL from '../configs/ApiUrls'\r\nimport PaymentService from './PaymentService'\r\nimport Basket, {basketItemObject} from '../payments/Basket'\r\n\r\nexport default (basketId: string, paymentService: PaymentService): Promise<Basket> => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      // Call api end point to get response\r\n      const response: any = await paymentService\r\n        .getRequestAdapter()\r\n        .get(\r\n          `${apiURL.URL_BASKET}/${basketId}`, \r\n          paymentService.getHeidelpay().getPrivateKey()\r\n        )\r\n\r\n      const newBasket = new Basket()\r\n      newBasket.setId(response.id)\r\n      \r\n      // Set amount total\r\n      newBasket.setAmountTotalGross(response.amountTotalGross)\r\n\r\n      // Set Amount total discount\r\n      newBasket.setAmountTotalDiscount(response.amountTotalDiscount)\r\n\r\n      // Set currency code\r\n      newBasket.setCurrencyCode(response.currencyCode)\r\n\r\n      // Set Order Id\r\n      newBasket.setOrderId(response.orderId)\r\n\r\n      // Set note\r\n      newBasket.setNote(response.note)\r\n\r\n      // Set baskset Items\r\n      response.basketItems.map((item:basketItemObject) => newBasket.addItem(item))\r\n\r\n      // Set payload\r\n      newBasket.setPayload(response)\r\n\r\n      // Resolve final result\r\n      resolve(newBasket)  \r\n    } catch (error) {\r\n      // Reject with error object\r\n      reject(error)\r\n    }\r\n  })\r\n}\r\n","import * as apiURL from '../configs/ApiUrls'\r\nimport PaymentService from './PaymentService'\r\nimport Basket from '../payments/Basket'\r\n\r\nexport default (basketId: string, basket: Basket, paymentService: PaymentService): Promise<Basket> => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      // Call api end point to get response\r\n      const response: any = await paymentService\r\n        .getRequestAdapter()\r\n        .put(\r\n          `${apiURL.URL_BASKET}/${basketId}`,\r\n          basket.getRequestPayload(), \r\n          paymentService.getHeidelpay().getPrivateKey()\r\n        )\r\n\r\n      const newBasket = new Basket()\r\n      newBasket.setId(response.id)\r\n\r\n      // Resolve final result\r\n      resolve(newBasket)\r\n    } catch (error) {\r\n      // Reject with error object\r\n      reject(error)\r\n    }\r\n  })\r\n}\r\n","import Resources from './Resources'\r\nimport Processing from './Processing'\r\n\r\nexport default class Recurring {\r\n  private _redirectUrl: string\r\n  private _returnUrl: string\r\n  private _date: string\r\n  private _resources: Resources\r\n  private _processing: Processing\r\n\r\n  constructor() {\r\n    this._resources = new Resources()\r\n    this._processing = new Processing()\r\n  }\r\n\r\n  /**\r\n   * Get redirectUrl\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getRedirectUrl(): string {\r\n    return this._redirectUrl\r\n  }\r\n\r\n  /**\r\n   * Set redirectUrl\r\n   *\r\n   * @param {string} redirectUrl\r\n   * @returns {Recurring}\r\n   */\r\n  public setRedirectUrl(redirectUrl: string): Recurring {\r\n    this._redirectUrl = redirectUrl\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get returnUrl\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getReturnUrl(): string {\r\n    return this._returnUrl\r\n  }\r\n\r\n  /**\r\n   * Set returnUrl\r\n   *\r\n   * @param {string} returnUrl\r\n   * @returns {Recurring}\r\n   */\r\n  public setReturnUrl(returnUrl: string): Recurring {\r\n    this._returnUrl = returnUrl\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get date\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getDate(): string {\r\n    return this._date\r\n  }\r\n\r\n  /**\r\n   * Set date\r\n   *\r\n   * @param {string} date\r\n   * @returns {Recurring}\r\n   */\r\n  public setDate(date: string): Recurring {\r\n    this._date = date\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get resources\r\n   *\r\n   * @returns {Resources}\r\n   */\r\n  public getResources(): Resources {\r\n    return this._resources\r\n  }\r\n\r\n  /**\r\n   * Set resources\r\n   *\r\n   * @param {*} resources\r\n   */\r\n  public setResources(resources: any) {\r\n    this._resources\r\n      .setCustomerId(resources.customerId)\r\n      .setMetadataId(resources.metadataId)\r\n  }\r\n\r\n  /**\r\n   * Get Processing\r\n   *\r\n   * @returns {Processing}\r\n   */\r\n  public getProcessing(): Processing {\r\n    return this._processing\r\n  }\r\n\r\n  /**\r\n   * Set Processing\r\n   *\r\n   * @param {*} processing\r\n   */\r\n  public setProcessing(processing: any) {\r\n    this._processing\r\n      .setUniqueId(processing.uniqueId)\r\n      .setShortId(processing.shortId)\r\n  }\r\n}\r\n\r\nexport type recurringObject = {\r\n  returnUrl: string\r\n  customerId?: string\r\n  metadataId?: string\r\n}\r\n","import * as apiURL from '../configs/ApiUrls'\r\nimport * as Utils from '../utils/Utils'\r\nimport PaymentService from './PaymentService'\r\nimport Recurring, { recurringObject } from '../payments/business/Recurring'\r\nimport ResponseErrorsMapper from './mappers/ResponseErrorsMapper'\r\n\r\nexport default (typeId: string, args: recurringObject, paymentService: PaymentService): Promise<Recurring> => {\r\n  return new Promise(async (resolve, reject) => {\r\n    const { returnUrl, customerId, metadataId } = args\r\n\r\n    const payload: any = {\r\n      returnUrl: returnUrl,\r\n      resources: {}\r\n    }\r\n\r\n    if (customerId) {\r\n      payload.resources.customerId = customerId\r\n    }\r\n\r\n    if (metadataId) {\r\n      payload.resources.metadataId = metadataId\r\n    }\r\n\r\n    try {\r\n      // Call api end point to get response\r\n      const response: any = await paymentService\r\n        .getRequestAdapter()\r\n        .post(\r\n          Utils.replaceUrl(apiURL.URL_RECURRING, {\r\n            typeId,\r\n          }),\r\n          payload,\r\n          paymentService.getHeidelpay().getPrivateKey()\r\n        )\r\n\r\n      if (response.errors) {\r\n        return reject(ResponseErrorsMapper(response))\r\n      }\r\n\r\n      const newRecurring = new Recurring()\r\n\r\n      newRecurring.setReturnUrl(response.returnUrl) \r\n      newRecurring.setRedirectUrl(response.redirectUrl)\r\n      newRecurring.setProcessing(response.processing)\r\n      newRecurring.setResources(response.resources)\r\n\r\n      // Resolve final result\r\n      resolve(newRecurring)\r\n    } catch (error) {\r\n      // Reject with error object\r\n      reject(error)\r\n    }\r\n  })\r\n}\r\n","import * as apiURL from '../configs/ApiUrls'\r\nimport PaymentService from './PaymentService'\r\nimport FetchPayment from './FetchPayment'\r\nimport Authorization, { authorizeObject } from '../payments/business/Authorization'\r\nimport ResponseErrorsMapper from './mappers/ResponseErrorsMapper';\r\n\r\nexport default (args: authorizeObject, paymentService: PaymentService): Promise<Authorization> => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const { \r\n        amount, orderId, currency, typeId, customerId, returnUrl,\r\n        paymentReference, metadataId, basketId, effectiveInterestRate\r\n      } = args\r\n      let payload: any = {\r\n        amount: amount,\r\n        currency: currency,\r\n        returnUrl: returnUrl,\r\n        resources: {\r\n          typeId: typeId\r\n        }\r\n      }\r\n\r\n      // Add payment reference into payload if its passed\r\n      if (paymentReference) {\r\n        payload.paymentReference = paymentReference\r\n      }\r\n\r\n      // Add order Id into payload if its passed\r\n      if (orderId) {\r\n        payload.orderId = orderId\r\n      }\r\n\r\n      if (effectiveInterestRate) {\r\n        payload.effectiveInterestRate = effectiveInterestRate\r\n      }\r\n\r\n      // Add customer Id into payload if its passed\r\n      if (customerId) {\r\n        payload.resources.customerId = customerId\r\n      }\r\n\r\n      // Add metadta Id into payload if its passed\r\n      if (metadataId) {\r\n        payload.resources.metadataId = metadataId\r\n      }\r\n\r\n      if (basketId) {\r\n        payload.resources.basketId = basketId\r\n      }\r\n\r\n      // Call api end point to get response\r\n      const response: any = await paymentService\r\n        .getRequestAdapter()\r\n        .post(\r\n          apiURL.URL_PAYMENT_AUTHORIZE,\r\n          payload,\r\n          paymentService.getHeidelpay().getPrivateKey()\r\n        )\r\n\r\n      if (response.errors) {\r\n        return reject(ResponseErrorsMapper(response))\r\n      }\r\n\r\n      // New Authorize with Hedeipay instance\r\n      let authorization = new Authorization(paymentService.getHeidelpay())\r\n\r\n      // Set authorization Id\r\n      authorization.setId(response.id)\r\n\r\n      // Set amount\r\n      authorization.setAmount(response.amount)\r\n\r\n      // Set order Id\r\n      if (response.orderId) {\r\n        authorization.setOrderId(response.orderId)\r\n      }\r\n\r\n      // Set currency\r\n      authorization.setCurrency(response.currency)\r\n\r\n      // Set return URL\r\n      authorization.setReturnUrl(response.returnUrl)\r\n\r\n      // Set payment reference\r\n      if (response.paymentReference) {\r\n        authorization.setPaymentReference(response.paymentReference)\r\n      }\r\n\r\n      // Set resources\r\n      authorization.setResources(response.resources)\r\n\r\n      // Set Processing\r\n      authorization.setProcessing(response.processing)\r\n\r\n      // Set payment object\r\n      authorization.setPayment(await FetchPayment(response.resources.paymentId, paymentService))\r\n\r\n      // Set Payload\r\n      authorization.setPayload(response)\r\n\r\n      // Resolve final result\r\n      resolve(authorization)\r\n    } catch (error) {\r\n      // Reject with error object\r\n      return reject(error)\r\n    }\r\n  })\r\n}\r\n","import * as apiURL from '../configs/ApiUrls'\r\nimport PaymentService from './PaymentService'\r\nimport Charge, { chargeObject } from '../payments/business/Charge'\r\nimport FetchPayment from './FetchPayment';\r\nimport ResponseErrorsMapper from './mappers/ResponseErrorsMapper'\r\n\r\nexport default (args: chargeObject, paymentService: PaymentService): Promise<Charge> => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const { amount, orderId, invoiceId, currency, returnUrl, paymentReference, customerId, typeId, metadataId, card3ds, basketId } = args\r\n      const payload: any = {\r\n        amount: amount,\r\n        currency: currency,\r\n        returnUrl: returnUrl,\r\n        resources: {\r\n          typeId: typeId,\r\n          basketId: basketId,\r\n        }\r\n      }\r\n\r\n      // Add payment reference into payload if its passed\r\n      if (paymentReference) {\r\n        payload.paymentReference = paymentReference\r\n      }\r\n\r\n      // Add order Id into payload if its passed\r\n      if (orderId) {\r\n        payload.orderId = orderId\r\n      }\r\n\r\n      // Add card3ds into payload it its passed\r\n      if(card3ds) {\r\n        payload.card3ds = card3ds\r\n      }\r\n\r\n      // Add customer Id into payload if its passed\r\n      if (customerId) {\r\n        payload.resources.customerId = customerId\r\n      }\r\n\r\n      // Add metadta Id into payload if its passed\r\n      if (metadataId) {\r\n        payload.resources.metadataId = metadataId\r\n      }\r\n\r\n      if (orderId) {\r\n        payload.orderId = orderId\r\n      }\r\n\r\n      if (invoiceId) {\r\n        payload.invoiceId = invoiceId\r\n      }\r\n\r\n      // Call api end point to get response\r\n      const response: any = await paymentService\r\n        .getRequestAdapter()\r\n        .post(apiURL.URL_PAYMENT_CHARGE, payload, paymentService.getHeidelpay().getPrivateKey())\r\n\r\n      // Handle errors response        \r\n      if (response.errors) {\r\n        return reject(ResponseErrorsMapper(response))\r\n      }\r\n\r\n      // New Charge with Hedeipay instance\r\n      let charge = new Charge(paymentService.getHeidelpay())\r\n\r\n      // Set chargeId\r\n      charge.setId(response.id)\r\n\r\n      // Set amount\r\n      charge.setAmount(response.amount)\r\n\r\n      // Set order Id\r\n      if (response.orderId) {\r\n        charge.setOrderId(response.orderId)\r\n      }\r\n\r\n      // Set invoice Id\r\n      if (response.invoiceId) {\r\n        charge.setInvoiceId(response.invoiceId)\r\n      }\r\n\r\n      // Set currency\r\n      charge.setCurrency(response.currency)\r\n\r\n      // Set return URL\r\n      charge.setReturnUrl(response.returnUrl)\r\n\r\n      // Set 3ds option\r\n      charge.setCard3ds(response.card3ds)\r\n\r\n      // Set resources\r\n      charge.setResources(response.resources)\r\n\r\n      // Set Processing\r\n      charge.setProcessing(response.processing)\r\n\r\n      // Set payment object\r\n      charge.setPayment(await FetchPayment(response.resources.paymentId, paymentService))\r\n\r\n      // Set Payload\r\n      charge.setPayload(response)\r\n\r\n      // Resolve final result\r\n      resolve(charge)\r\n    } catch (error) {\r\n      // Reject with error object\r\n      reject(error)\r\n    }\r\n  })\r\n}\r\n","import * as apiURL from '../configs/ApiUrls'\r\nimport * as Utils from '../utils/Utils'\r\nimport PaymentService from './PaymentService'\r\nimport Charge from '../payments/business/Charge'\r\nimport { chargeAuthorizeObject } from '../payments/business/Authorization'\r\nimport FetchPayment from './FetchPayment'\r\nimport ResponseErrorsMapper from './mappers/ResponseErrorsMapper'\r\n\r\nexport default (args: chargeAuthorizeObject, paymentService: PaymentService): Promise<Charge> => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      let payload: any = {}\r\n      const {paymentId, amount, paymentReference} = args\r\n\r\n      if (amount) {\r\n        payload.amount = amount\r\n      }\r\n\r\n      // Add payment reference into payload if its passed\r\n      if(paymentReference) {\r\n        payload.paymentReference = paymentReference\r\n      }\r\n\r\n      // Call api end point to get response\r\n      const response: any = await paymentService\r\n      .getRequestAdapter()\r\n      .post(\r\n        Utils.replaceUrl(apiURL.URL_PAYMENT_CHARGE_AUTHORIZE, {\r\n          paymentId,\r\n        }),\r\n        payload,\r\n        paymentService.getHeidelpay().getPrivateKey()\r\n      )\r\n\r\n      // Handle errors response\r\n      if (response.errors) {\r\n        return reject(ResponseErrorsMapper(response))\r\n      }\r\n\r\n      // New Charge with Hedeipay instance\r\n      let charge = new Charge(paymentService.getHeidelpay())\r\n\r\n      // Set charge Id\r\n      charge.setId(response.id)\r\n\r\n      // Set amount\r\n      charge.setAmount(response.amount)\r\n\r\n      // Set order Id\r\n      if(response.orderId) {\r\n        charge.setOrderId(response.orderId)\r\n      }\r\n\r\n      // Set payment reference\r\n      if(response.paymentReference) {\r\n        charge.setPaymentReference(response.paymentReference)\r\n      }\r\n\r\n      // Set resources\r\n      charge.setResources(response.resources)\r\n\r\n      // Set Processing\r\n      charge.setProcessing(response.processing)\r\n\r\n      // Set payment object\r\n      charge.setPayment(await FetchPayment(response.resources.paymentId, paymentService))\r\n\r\n      // Set payload\r\n      charge.setPayload(response)\r\n\r\n      // Resolve final result\r\n      resolve(charge)\r\n    } catch (error) {\r\n      // Reject with error object\r\n      reject(error)\r\n    }\r\n  })\r\n}\r\n","import * as apiURL from '../configs/ApiUrls'\r\nimport * as Utils from '../utils/Utils'\r\nimport PaymentService from './PaymentService'\r\nimport Cancel, { cancelAuthorizeObject } from '../payments/business/Cancel'\r\nimport FetchPayment from './FetchPayment'\r\nimport ResponseErrorsMapper from './mappers/ResponseErrorsMapper';\r\n\r\nexport default (args: cancelAuthorizeObject, paymentService: PaymentService): Promise<Cancel> => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      let payload: any = {}\r\n      const {paymentId, authorizationId, amount, paymentReference} = args\r\n\r\n      // Add amount into payload if its passed\r\n      if (amount) {\r\n        payload.amount = amount\r\n      }\r\n\r\n      // Add payment reference into payload if its passed\r\n      if(paymentReference) {\r\n        payload.paymentReference = paymentReference\r\n      }\r\n\r\n      // Call api end point to get response\r\n      const response: any = await paymentService.getRequestAdapter().post(\r\n        Utils.replaceUrl(apiURL.URL_PAYMENT_AUTHORIZE_CANCEL, {\r\n          paymentId,\r\n          authorizationId,\r\n        }),\r\n        payload,\r\n        paymentService.getHeidelpay().getPrivateKey()\r\n      )\r\n\r\n      // Handle errors response        \r\n      if (response.errors) {\r\n        return reject(ResponseErrorsMapper(response))\r\n      }\r\n\r\n      // New Cancel with Hedeipay instance\r\n      let cancel = new Cancel(paymentService.getHeidelpay())\r\n\r\n      // Set cancel Id\r\n      cancel.setId(response.id)\r\n\r\n      // Set amount of cancel\r\n      cancel.setAmount(response.amount)\r\n\r\n      // Set order Id\r\n      if(response.orderId) {\r\n        cancel.setOrderId(response.orderId)\r\n      }\r\n\r\n      // Set payment reference\r\n      if(response.paymentReference) {\r\n        cancel.setPaymentReference(response.paymentReference)\r\n      }\r\n\r\n      // Set resources\r\n      cancel.setResources(response.resources)\r\n\r\n      // Set Processing\r\n      cancel.setProcessing(response.processing)\r\n\r\n      // Set payment object\r\n      cancel.setPayment(await FetchPayment(response.resources.paymentId, paymentService))\r\n\r\n      // Set payload\r\n      cancel.setPayload(response)\r\n\r\n      // Resolve final result\r\n      resolve(cancel)\r\n    } catch (error) {\r\n      // Reject with error object\r\n      reject(error)\r\n    }\r\n  })\r\n}\r\n","import * as apiURL from '../configs/ApiUrls'\r\nimport * as Utils from '../utils/Utils'\r\nimport PaymentService from './PaymentService'\r\nimport Cancel, { cancelChargeObject } from '../payments/business/Cancel'\r\nimport FetchPayment from './FetchPayment'\r\nimport ResponseErrorsMapper from './mappers/ResponseErrorsMapper';\r\n\r\nexport default (args: cancelChargeObject, paymentService: PaymentService): Promise<Cancel> => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      let payload: any = {}\r\n      const {\r\n        paymentId, chargeId, amount, paymentReference,\r\n        amountGross, amountNet, amountVat,\r\n      } = args\r\n\r\n      // Add amount into payload if its passed\r\n      if (amount) {\r\n        payload.amount = amount\r\n      }\r\n\r\n      if (amountGross) {\r\n        payload.amountGross = amountGross\r\n      }\r\n\r\n      if (amountNet) {\r\n        payload.amountNet = amountNet\r\n      }\r\n\r\n      if (amountVat) {\r\n        payload.amountVat = amountVat\r\n      }\r\n\r\n      // Add payment reference into payload if its passed\r\n      if (paymentReference) {\r\n        payload.paymentReference = paymentReference\r\n      }\r\n\r\n      // Call api end point to get response\r\n      const response: any = await paymentService.getRequestAdapter().post(\r\n        Utils.replaceUrl(apiURL.URL_PAYMENT_CHARGE_CANCEL, {\r\n          paymentId,\r\n          chargeId,\r\n        }),\r\n        payload,\r\n        paymentService.getHeidelpay().getPrivateKey()\r\n      )\r\n\r\n      // Handle errors response        \r\n      if (response.errors) {\r\n        return reject(ResponseErrorsMapper(response))\r\n      }\r\n\r\n      // New Cancel with Hedeipay instance\r\n      let cancel = new Cancel(paymentService.getHeidelpay())\r\n\r\n      // Set cancel Id\r\n      cancel.setId(response.id)\r\n\r\n      // Set amount of cancel\r\n      cancel.setAmount(response.amount)\r\n\r\n      // Set order Id\r\n      if (response.orderId) {\r\n        cancel.setOrderId(response.orderId)\r\n      }\r\n\r\n      // Set payment reference\r\n      if (response.paymentReference) {\r\n        cancel.setPaymentReference(response.paymentReference)\r\n      }\r\n\r\n      // Set resources\r\n      cancel.setResources(response.resources)\r\n\r\n      // Set Processing\r\n      cancel.setProcessing(response.processing)\r\n\r\n      // Set payment object\r\n      cancel.setPayment(await FetchPayment(response.resources.paymentId, paymentService))\r\n\r\n      // Set payload\r\n      cancel.setPayload(response)\r\n\r\n      // Resolve final result\r\n      resolve(cancel)\r\n    } catch (error) {\r\n      // Reject with error object\r\n      reject(error)\r\n    }\r\n  })\r\n}\r\n","import AbstractPayment from \"./AbstractPayment\";\r\nimport Resources from \"./Resources\";\r\nimport Heidelpay from \"../../Heidelpay\";\r\nimport Processing from \"./Processing\";\r\n\r\nexport default class Shipment extends AbstractPayment {\r\n  private amount: string\r\n  private orderId: string\r\n  private invoiceId: string\r\n  private resources: Resources\r\n  private processing: Processing\r\n\r\n  constructor(heidelpay: Heidelpay) {\r\n    super(heidelpay)\r\n    this.resources = new Resources()\r\n    this.processing = new Processing()\r\n  }\r\n\r\n  /**\r\n   * Get Amount\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getAmount(): string {\r\n    return this.amount\r\n  }\r\n\r\n  /**\r\n   * Set Amount\r\n   *\r\n   * @param {string} amount\r\n   */\r\n  public setAmount(amount: string) {\r\n    this.amount = amount\r\n  }\r\n\r\n  /**\r\n   * Get Order Id\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getOrderId(): string {\r\n    return this.orderId\r\n  }\r\n\r\n  /**\r\n   * Set Order Id\r\n   *\r\n   * @param {string} orderId\r\n   */\r\n  public setOrderId(orderId: string) {\r\n    this.orderId = orderId\r\n  }\r\n\r\n  /**\r\n   * Get Invoice Id\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getInvoiceId(): string {\r\n    return this.invoiceId\r\n  }\r\n\r\n  /**\r\n   * Set Invoice Id\r\n   *\r\n   * @param {string} invoiceId\r\n   */\r\n  public setInvoiceId(invoiceId: string) {\r\n    this.invoiceId = invoiceId\r\n  }  \r\n\r\n  /**\r\n   * Get resources\r\n   *\r\n   * @returns {Resources}\r\n   */\r\n  public getResources(): Resources {\r\n    return this.resources\r\n  }\r\n\r\n  /**\r\n   * Set resources\r\n   *\r\n   * @param {*} resources\r\n   */\r\n  public setResources(resources: any) {\r\n    this.resources\r\n      .setCustomerId(resources.customerId)\r\n      .setMetadataId(resources.metadataId)\r\n      .setPaymentId(resources.paymentId)\r\n      .setTypeId(resources.typeId)\r\n      .setTraceId(resources.traceId)\r\n  }\r\n\r\n  /**\r\n   * Get Processing\r\n   *\r\n   * @returns {Processing}\r\n   */\r\n  public getProcessing(): Processing {\r\n    return this.processing\r\n  }\r\n\r\n  /**\r\n   * Set Processing\r\n   *\r\n   * @param {*} processing\r\n   */\r\n  public setProcessing(processing: any) {\r\n    this.processing\r\n      .setUniqueId(processing.uniqueId)\r\n      .setShortId(processing.shortId)\r\n  }\r\n}\r\n\r\nexport type shipmentObject = {\r\n  orderId?: string,\r\n  invoiceId?: string,\r\n}","import * as apiURL from '../configs/ApiUrls'\r\nimport PaymentService from './PaymentService'\r\nimport ResponseErrorsMapper from './mappers/ResponseErrorsMapper';\r\nimport Shipment, { shipmentObject } from '../payments/business/Shipment';\r\nimport * as Utils from '../utils/Utils'\r\n\r\nexport default (paymentId: string, args: shipmentObject, paymentService: PaymentService): Promise<Shipment> => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const { orderId, invoiceId } = args\r\n      const payload: any = {}\r\n\r\n      if (orderId) {\r\n        payload.orderId = orderId\r\n      }\r\n\r\n      if (invoiceId) {\r\n        payload.invoiceId = invoiceId\r\n      }\r\n\r\n      // Call api end point to get response\r\n      const response: any = await paymentService.getRequestAdapter().post(\r\n        Utils.replaceUrl(apiURL.URL_PAYMENT_SHIPMENT, {\r\n          paymentId: paymentId,\r\n        }),\r\n        payload,\r\n        paymentService.getHeidelpay().getPrivateKey()\r\n      )\r\n\r\n      if (response.errors) {\r\n        return reject(ResponseErrorsMapper(response))\r\n      }\r\n\r\n      // New Shipment with Hedeipay instance\r\n      let shipment = new Shipment(paymentService.getHeidelpay())\r\n\r\n      // Set shipment Id\r\n      shipment.setId(response.id)\r\n\r\n      // Set amount of charge\r\n      shipment.setAmount(response.amount)\r\n\r\n      // Set order Id\r\n      if (response.orderId) {\r\n        shipment.setOrderId(response.orderId)\r\n      }\r\n\r\n      // Set invoice Id\r\n      if (response.invoiceId) {\r\n        shipment.setInvoiceId(response.invoiceId)\r\n      }\r\n\r\n      // Set resources\r\n      shipment.setResources(response.resources)\r\n\r\n      // Set Processing\r\n      shipment.setProcessing(response.processing)\r\n\r\n      // Set Payload\r\n      shipment.setPayload(response)\r\n\r\n      // Resolve final result\r\n      resolve(shipment)\r\n    } catch (error) {\r\n      // Reject with error object\r\n      return reject(error)\r\n    }\r\n  })\r\n}\r\n","import * as apiURL from '../configs/ApiUrls'\r\nimport PaymentService from './PaymentService'\r\nimport Paypage from '../payments/paypage/Paypage'\r\nimport ResponseErrorsMapper from './mappers/ResponseErrorsMapper'\r\n\r\nexport default (paypage: Paypage, type: string, paymentService: PaymentService): Promise<Paypage> => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      // Get payload\r\n      const payload = paypage.getPayload()\r\n\r\n      // Get additional attributes\r\n      const additionalAttributes: any = paypage.getAdditionalAttributes()\r\n      if (additionalAttributes && additionalAttributes.effectiveInterestRate) {\r\n        payload['additionalAttributes.effectiveInterestRate'] = additionalAttributes.effectiveInterestRate\r\n      }\r\n\r\n      // Call api end point to get response\r\n      const response: any = await paymentService\r\n        .getRequestAdapter()\r\n        .post(\r\n          type === 'authorize' ? apiURL.URL_PAYPAGE_AUTHORIZE : apiURL.URL_PAYPAGE_CHARGE,\r\n          payload,\r\n          paymentService.getHeidelpay().getPrivateKey()\r\n        )\r\n\r\n      // Handle errors response    \r\n      if (response.errors) {\r\n        return reject(ResponseErrorsMapper(response))\r\n      }\r\n\r\n      // Set Heidelpay instance\r\n      paypage.setHeidelpay(paymentService.getHeidelpay())\r\n\r\n      // Set Payment Id\r\n      paypage.setId(response.id)\r\n\r\n      // Set Redirect URL\r\n      paypage.setRedirectUrl(response.redirectUrl)\r\n      \r\n      // Set action (AUTHORIZE|CHARGE)\r\n      paypage.setAction(response.action)\r\n\r\n      // Set resources\r\n      paypage.setResources(response.resources)\r\n\r\n      // Resolve final result\r\n      resolve(paypage)\r\n    } catch (error) {\r\n      // Reject with error object\r\n      return reject(error) \r\n    }\r\n  })\r\n}\r\n","import Linkpay from '../../payments/paypage/Linkpay'\r\n\r\nexport default (response: any, linkpay: Linkpay): Linkpay => {\r\n  \r\n  linkpay.setId(response.id)\r\n\r\n  linkpay\r\n    .setAlias(linkpay.getAlias())\r\n    .setAmount(response.amount || linkpay.getAmount())\r\n    .setAdditionalAttributes(response.additionalAttributes || linkpay.getAdditionalAttributes())\r\n    .setBillingAddressRequired(response.billingAddressRequired || linkpay.getBillingAddressRequired())\r\n    .setCurrency(response.currency || linkpay.getCurrency())\r\n    .setCard3ds(response.card3ds || linkpay.getCard3ds())\r\n    .setCss(response.css || linkpay.getCss())\r\n    .setContactUrl(response.contactUrl || linkpay.getContactUrl())\r\n    .setExcludeTypes(response.excludeTypes || linkpay.getExcludeTypes())\r\n    .setExpirationDate(response.expires || linkpay.getExpirationDate())\r\n    .setFullPageImage(response.fullPageImage || linkpay.getFullPageImage())\r\n    .setHelpUrl(response.helpUrl || linkpay.getHelpUrl())\r\n    .setInvoiceId(response.invoiceId || linkpay.getInvoiceId())\r\n    .setInvoiceIdRequired(response.invoiceIdRequired || linkpay.getInvoiceIdRequired())\r\n    .setImprintUrl(response.imprintUrl || linkpay.getImprintUrl())\r\n    .setIntention(response.intention || linkpay.getIntention())\r\n    .setLogoImage(response.logoImage || linkpay.getLogoImage())\r\n    .setPrivacyPolicyUrl(response.privacyPolicyUrl || linkpay.getPrivacyPolicyUrl())\r\n    .setOrderId(response.orderId || linkpay.getOrderId())\r\n    .setOrderIdRequired(response.orderIdRequired || linkpay.getOrderIdRequired())\r\n    .setResources(response.resources || linkpay.getResources())\r\n    .setReturnUrl(response.returnUrl || linkpay.getReturnUrl())\r\n    .setShopName(response.shopName || linkpay.getShopName())\r\n    .setShopDescription(response.shopDescription || linkpay.getShopDescription())\r\n    .setShippingAddressRequired(response.shippingAddressRequired || linkpay.getShippingAddressRequired())\r\n    .setTagline(response.tagline || linkpay.getTagline())\r\n    .setTermsAndConditionUrl(response.termsAndConditionUrl || linkpay.getTermsAndConditionUrl())\r\n    .setRedirectUrl(response.redirectUrl || linkpay.getRedirectUrl())\r\n    .setAction(response.action || linkpay.getAction())\r\n\r\n  return linkpay\r\n}\r\n","import * as apiURL from '../configs/ApiUrls'\r\nimport PaymentService from './PaymentService'\r\nimport Linkpay from '../payments/paypage/Linkpay'\r\nimport ResponseErrorsMapper from './mappers/ResponseErrorsMapper'\r\nimport ResponseLinkpayMapper from './mappers/ResponseLinkpayMapper'\r\n\r\nexport default (linkpay: Linkpay, type: string, paymentService: PaymentService): Promise<Linkpay> => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      // Call api end point to get response\r\n      const response: any = await paymentService\r\n        .getRequestAdapter()\r\n        .post(\r\n          type === 'authorize' ? apiURL.URL_LINKPAY_AUTHORIZE : apiURL.URL_LINKPAY_CHARGE,\r\n          linkpay.getPayload(),\r\n          paymentService.getHeidelpay().getPrivateKey()\r\n        )\r\n\r\n      // Handle errors response    \r\n      if (response.errors) {\r\n        return reject(ResponseErrorsMapper(response))\r\n      }\r\n\r\n      // Map returned values to new Linkpay instance\r\n      const newLinkpay: Linkpay = ResponseLinkpayMapper(response, linkpay)\r\n\r\n      // Set Heidelpay instance\r\n      newLinkpay.setHeidelpay(paymentService.getHeidelpay())\r\n\r\n      // Reset payload obj to empty obj\r\n      newLinkpay.resetPayload()\r\n\r\n      // Resolve final result\r\n      resolve(newLinkpay)\r\n    } catch (error) {\r\n      // Reject with error object\r\n      return reject(error)\r\n    }\r\n  })\r\n}\r\n","import * as apiURL from '../configs/ApiUrls'\r\nimport PaymentService from './PaymentService'\r\nimport Linkpay from '../payments/paypage/Linkpay'\r\nimport ResponseLinkpayMapper from './mappers/ResponseLinkpayMapper'\r\n\r\nexport default (linkpayIdOrAlias: string, linkpay: Linkpay, paymentService: PaymentService): Promise<Linkpay> => {\r\n  return new Promise(async (resolve, reject) => {    \r\n    try {\r\n      // Call api end point to get response\r\n      const response: any = await paymentService\r\n        .getRequestAdapter()\r\n        .put(\r\n          `${apiURL.URL_LINKPAY}/${linkpayIdOrAlias}`,\r\n          linkpay.getPayload(),\r\n          paymentService.getHeidelpay().getPrivateKey()\r\n        )\r\n\r\n      // Map returned values to new Linkpay instance\r\n      const updatedLinkpay: Linkpay = ResponseLinkpayMapper(response, linkpay)\r\n\r\n      // Set Heidelpay instance\r\n      updatedLinkpay.setHeidelpay(paymentService.getHeidelpay())\r\n\r\n      // Reset payload obj to empty obj\r\n      updatedLinkpay.resetPayload()\r\n\r\n      // Resolve final result\r\n      resolve(updatedLinkpay)\r\n    } catch (error) {\r\n      // Reject with error object\r\n      reject(error)\r\n    }\r\n  })\r\n}\r\n","import * as apiURL from '../configs/ApiUrls'\r\nimport PaymentService from './PaymentService'\r\n\r\nexport default (linkpayIdOrAlias: string, paymentService: PaymentService): Promise<boolean> => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      // Call api end point to get response\r\n      const response: any = await paymentService\r\n        .getRequestAdapter()\r\n        .delete(\r\n          `${apiURL.URL_LINKPAY}/${linkpayIdOrAlias}`,\r\n          {}, // send empty body when call delete method\r\n          paymentService.getHeidelpay().getPrivateKey()\r\n        )\r\n        \r\n      // Resolve final result\r\n      resolve(response)\r\n    } catch (error) {\r\n      // Reject with error object\r\n      reject(error)\r\n    }\r\n  })\r\n}\r\n","import Heidelpay from '../../Heidelpay'\r\nimport AbstractPayment from './AbstractPayment'\r\nimport { Customer } from '../Customer'\r\nimport Resources from './Resources'\r\nimport PaymentType from '../types/PaymentType'\r\nimport Processing from './Processing'\r\n\r\nexport default class Payout extends AbstractPayment {\r\n  private amount: string\r\n  private orderId: string\r\n  private currency: string\r\n  private returnUrl: string\r\n  private paymentReference: string\r\n  private resources: Resources\r\n  private processing: Processing\r\n\r\n  constructor(heidelpay: Heidelpay) {\r\n    super(heidelpay)\r\n    this.resources = new Resources()\r\n    this.processing = new Processing()\r\n  }\r\n  /**\r\n   * Set amount\r\n   *\r\n   * @param {string} amount\r\n   */\r\n  public setAmount(amount: string) {\r\n    this.amount = amount\r\n  }\r\n\r\n  /**\r\n   * Get amount\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getAmount(): string {\r\n    return this.amount\r\n  }\r\n\r\n  /**\r\n   * Get Order OId\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getOrderId(): string {\r\n    return this.orderId\r\n  }\r\n\r\n  /**\r\n   * Set Amount\r\n   *\r\n   * @param {string} amount\r\n   */\r\n  public setOrderId(orderId: string) {\r\n    this.orderId = orderId\r\n  }\r\n\r\n  /**\r\n   * Set currency\r\n   *\r\n   * @param {string} currency\r\n   */\r\n  public setCurrency(currency: string) {\r\n    this.currency = currency\r\n  }\r\n\r\n  /**\r\n   * Get currency\r\n   *\r\n   * @returns\r\n   */\r\n  public getCurrency() {\r\n    return this.currency\r\n  }\r\n\r\n  /**\r\n   * Set Payment Reference\r\n   *\r\n   * @param {string} paymentReference\r\n   */\r\n  public setPaymentReference(paymentReference: string) {\r\n    this.paymentReference = paymentReference\r\n  }\r\n\r\n  /**\r\n   * Get Payment Reference\r\n   *\r\n   * @returns\r\n   */\r\n  public getPaymentReference() {\r\n    return this.paymentReference\r\n  }\r\n\r\n  /**\r\n   * Set return url\r\n   *\r\n   * @param {string} returnUrl\r\n   */\r\n  public setReturnUrl(returnUrl: string) {\r\n    this.returnUrl = returnUrl\r\n  }\r\n\r\n  /**\r\n   * Get return url\r\n   */\r\n  public getReturnUrl() {\r\n    return this.returnUrl\r\n  }\r\n\r\n  /**\r\n   * Get resources\r\n   *\r\n   * @returns {Resources}\r\n   */\r\n  public getResources(): Resources {\r\n    return this.resources\r\n  }\r\n\r\n  /**\r\n   * Set resources\r\n   *\r\n   * @param {*} resources\r\n   */\r\n  public setResources(resources: any) {\r\n    this.resources\r\n      .setCustomerId(resources.customerId)\r\n      .setMetadataId(resources.metadataId)\r\n      .setPaymentId(resources.paymentId)\r\n      .setTypeId(resources.typeId)\r\n      .setTraceId(resources.traceId)\r\n  }\r\n\r\n  /**\r\n   * Get Processing\r\n   *\r\n   * @returns {Processing}\r\n   */\r\n  public getProcessing(): Processing {\r\n    return this.processing\r\n  }\r\n\r\n  /**\r\n   * Set Processing\r\n   *\r\n   * @param {*} processing\r\n   */\r\n  public setProcessing(processing: any) {\r\n    this.processing\r\n      .setUniqueId(processing.uniqueId)\r\n      .setShortId(processing.shortId)\r\n  }\r\n}\r\n\r\nexport type payoutObject = {\r\n  amount: number\r\n  orderId?: string\r\n  currency: string\r\n  returnUrl: string\r\n  typeId: string | PaymentType\r\n  paymentReference?: string\r\n  customerId?: string | Customer\r\n  metadataId?: string\r\n}\r\n","import * as apiURL from '../configs/ApiUrls'\r\nimport PaymentService from './PaymentService'\r\nimport FetchPayment from './FetchPayment'\r\nimport Payout, { payoutObject } from '../payments/business/Payout'\r\nimport ResponseErrorsMapper from './mappers/ResponseErrorsMapper'\r\n\r\nexport default (args: payoutObject, paymentService: PaymentService): Promise<Payout> => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const { amount, orderId, paymentReference, currency, typeId, customerId, returnUrl, metadataId } = args\r\n      let payload: any = {\r\n        amount: amount,\r\n        currency: currency,\r\n        returnUrl: returnUrl,\r\n        resources: {\r\n          typeId: typeId\r\n        }\r\n      }\r\n\r\n      // Add order Id into payload if its passed\r\n      if (orderId) {\r\n        payload.orderId = orderId\r\n      }\r\n\r\n      // Add payment reference into payload if its passed\r\n      if (paymentReference) {\r\n        payload.paymentReference = paymentReference\r\n      }\r\n\r\n      // Add customer Id into payload if its passed\r\n      if (customerId) {\r\n        payload.resources.customerId = customerId\r\n      }\r\n\r\n      // Add metadta Id into payload if its passed\r\n      if (metadataId) {\r\n        payload.resources.metadataId = metadataId\r\n      }\r\n\r\n      // Call api end point to get response\r\n      const response: any = await paymentService\r\n        .getRequestAdapter()\r\n        .post(\r\n          apiURL.URL_PAYMENT_PAYOUT,\r\n          payload,\r\n          paymentService.getHeidelpay().getPrivateKey()\r\n        )\r\n\r\n      if (response.errors) {\r\n        return reject(ResponseErrorsMapper(response))\r\n      }\r\n\r\n      // New Authorize with Hedeipay instance\r\n      let payout = new Payout(paymentService.getHeidelpay())\r\n\r\n      // Set payout Id\r\n      payout.setId(response.id)\r\n\r\n      // Set amount\r\n      payout.setAmount(response.amount)\r\n\r\n      // Set order Id\r\n      if(response.orderId) {\r\n        payout.setOrderId(response.orderId)\r\n      }\r\n\r\n      // Set payment reference\r\n      if(response.paymentReference) {\r\n        payout.setPaymentReference(response.paymentReference)\r\n      }\r\n\r\n      // Set currency\r\n      payout.setCurrency(response.currency)\r\n\r\n      // Set return URL\r\n      payout.setReturnUrl(response.returnUrl)\r\n\r\n      // Set resources\r\n      payout.setResources(response.resources)\r\n\r\n      // Set payment object\r\n      payout.setPayment(await FetchPayment(response.resources.paymentId, paymentService))\r\n\r\n      // Set Payload\r\n      payout.setPayload(response)\r\n\r\n      // Resolve final result\r\n      resolve(payout)\r\n    } catch (error) {\r\n      // Reject with error object\r\n      return reject(error)\r\n    }\r\n  })\r\n}\r\n","import * as apiURL from '../configs/ApiUrls'\r\nimport PaymentService from './PaymentService'\r\nimport Payout from '../payments/business/Payout'\r\nimport ResponseErrorsMapper from './mappers/ResponseErrorsMapper';\r\n\r\nexport default (paymentId: string, payoutId: string, paymentService: PaymentService): Promise<Payout> => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      // Call api end point to get response\r\n      const response: any = await paymentService\r\n        .getRequestAdapter()\r\n        .get(`${apiURL.URL_PAYMENT}/${paymentId}/payouts/${payoutId}`, paymentService.getHeidelpay().getPrivateKey())\r\n\r\n      // Handle errors response\r\n      if (response.errors) {\r\n        return reject(ResponseErrorsMapper(response))\r\n      }\r\n\r\n      // New payout with Hedeipay instance\r\n      let payout = new Payout(paymentService.getHeidelpay())\r\n\r\n      // Set payout Id\r\n      payout.setId(response.id)\r\n\r\n      // Set order Id\r\n      if(response.orderId) {\r\n        payout.setOrderId(response.orderId)\r\n      }\r\n\r\n      // Set payment reference\r\n      if(response.paymentReference) {\r\n        payout.setPaymentReference(response.paymentReference)\r\n      }\r\n\r\n      // Set amount of payout\r\n      payout.setAmount(response.amount)\r\n\r\n      // Set currency\r\n      payout.setCurrency(response.currency)\r\n\r\n      // Set return URL\r\n      payout.setReturnUrl(response.returnUrl)\r\n\r\n      // Set resources\r\n      payout.setResources(response.resources)\r\n\r\n      // Set Processing\r\n      payout.setProcessing(response.processing)\r\n\r\n      // Set payload\r\n      payout.setPayload(response)\r\n\r\n      // Resolve final result\r\n      resolve(payout)\r\n    } catch (error) {\r\n      // Reject with error object\r\n      reject(error)\r\n    }\r\n  })\r\n}\r\n","import * as apiURL from '../../configs/ApiUrls'\r\nimport AbstractPaymentType from './AbstractPaymentType'\r\nimport PaymentType from './PaymentType'\r\n\r\nexport default class HirePurchasePlan extends AbstractPaymentType implements PaymentType {\r\n  private _numberOfRates: number\r\n  private _dayOfPurchase: string\r\n  private _orderDate: string\r\n  private _totalPurchaseAmount: number\r\n  private _totalInterestAmount: number\r\n  private _totalAmount: number\r\n  private _effectiveInterestRate: number\r\n  private _nominalInterestRate: number\r\n  private _feeFirstRate: number\r\n  private _feePerRate: number\r\n  private _monthlyRate: number\r\n  private _lastRate: number\r\n\r\n  constructor() {\r\n    super()\r\n  }\r\n\r\n  /**\r\n   * Set Number of Rate\r\n   *\r\n   * @param {string} numberOfRates\r\n   * @returns {HirePurchase}\r\n   */\r\n  public setNumberOfRates(numberOfRates: number): HirePurchasePlan {\r\n    this._numberOfRates = numberOfRates\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get Number of Rate\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getNumberOfRates(): number {\r\n    return this._numberOfRates\r\n  }\r\n\r\n  /**\r\n   * Set Day of purchase\r\n   *\r\n   * @param {string} dayOfPurchase\r\n   * @returns {HirePurchase}\r\n   */\r\n  public setDayOfPurchase(dayOfPurchase: string): HirePurchasePlan {\r\n    this._dayOfPurchase = dayOfPurchase\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get Day of Purchase\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getDayOfPurchase(): string {\r\n    return this._dayOfPurchase\r\n  }\r\n\r\n  /**\r\n   * Set Order Date\r\n   *\r\n   * @param {string} orderDate\r\n   * @returns {HirePurchase}\r\n   */\r\n  public setOrderDate(orderDate: string): HirePurchasePlan {\r\n    this._orderDate = orderDate\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get Order Date\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getOrderDate(): string {\r\n    return this._orderDate\r\n  }\r\n\r\n  /**\r\n   * Set Total Amount\r\n   *\r\n   * @param {number} totalPurchaseAmount\r\n   * @returns {HirePurchase}\r\n   */\r\n  public setTotalPurchaseAmount(totalPurchaseAmount: number): HirePurchasePlan {\r\n    this._totalPurchaseAmount = totalPurchaseAmount\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get Total Amount\r\n   *\r\n   * @returns {number}\r\n   */\r\n  public getTotalPurchaseAmount(): number {\r\n    return this._totalPurchaseAmount\r\n  }\r\n\r\n  /**\r\n   * Set Interest Amount\r\n   *\r\n   * @param {number} totalInterestAmount\r\n   * @returns {HirePurchase}\r\n   */\r\n  public setTotalInterestAmount(totalInterestAmount: number): HirePurchasePlan {\r\n    this._totalInterestAmount = totalInterestAmount\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get Interest Amount\r\n   *\r\n   * @returns {number}\r\n   */\r\n  public getTotalInterestAmount(): number {\r\n    return this._totalInterestAmount\r\n  }\r\n\r\n  /**\r\n   * Set Total Amount\r\n   *\r\n   * @param {number} totalAmount\r\n   * @returns {HirePurchase}\r\n   */\r\n  public setTotalAmount(totalAmount: number): HirePurchasePlan {\r\n    this._totalAmount = totalAmount\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get Total Amount\r\n   *\r\n   * @returns {number}\r\n   */\r\n  public getTotalAmount(): number {\r\n    return this._totalAmount\r\n  }\r\n\r\n  /**\r\n   * Set Total Amount\r\n   *\r\n   * @param {number} totalAmount\r\n   * @returns {HirePurchase}\r\n   */\r\n  public setEffectiveInterestRate(effectiveInterestRate: number): HirePurchasePlan {\r\n    this._effectiveInterestRate = effectiveInterestRate\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get Total Amount\r\n   *\r\n   * @returns {number}\r\n   */\r\n  public getEffectiveInterestRate(): number {\r\n    return this._effectiveInterestRate\r\n  }\r\n\r\n  /**\r\n   * Set Nominal Interest Rate\r\n   *\r\n   * @param {number} nominalInterestRate\r\n   * @returns {HirePurchase}\r\n   */\r\n  public setNominalInterestRate(nominalInterestRate: number): HirePurchasePlan {\r\n    this._nominalInterestRate = nominalInterestRate\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get Nominal Interest Rate\r\n   *\r\n   * @returns {number}\r\n   */\r\n  public getNominalInterestRate(): number {\r\n    return this._nominalInterestRate\r\n  }\r\n\r\n  /**\r\n   * Set Fee First Rate\r\n   *\r\n   * @param {number} feeFirstRate\r\n   * @returns {HirePurchase}\r\n   */\r\n  public setFeeFirstRate(feeFirstRate: number): HirePurchasePlan {\r\n    this._feeFirstRate = feeFirstRate\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get Nominal Interest Rate\r\n   *\r\n   * @returns {number}\r\n   */\r\n  public getFeeFirstRate(): number {\r\n    return this._feeFirstRate\r\n  }\r\n\r\n  /**\r\n   * Set Fee Per Rate\r\n   *\r\n   * @param {number} feePerRate\r\n   * @returns {HirePurchase}\r\n   */\r\n  public setFeePerRate(feePerRate: number): HirePurchasePlan {\r\n    this._feePerRate = feePerRate\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get Nominal Interest Rate\r\n   *\r\n   * @returns {number}\r\n   */\r\n  public getFeePerRate(): number {\r\n    return this._feePerRate\r\n  }\r\n\r\n  /**\r\n   * Set Monthly Rate\r\n   *\r\n   * @param {number} monthlyRate\r\n   * @returns {HirePurchase}\r\n   */\r\n  public setMonthlyRate(monthlyRate: number): HirePurchasePlan {\r\n    this._monthlyRate = monthlyRate\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get Monthly Rate\r\n   *\r\n   * @returns {number}\r\n   */\r\n  public getMonthlyRate(): number {\r\n    return this._monthlyRate\r\n  }\r\n\r\n  /**\r\n   * Set Last Rate\r\n   *\r\n   * @param {number} lastRate\r\n   * @returns {HirePurchase}\r\n   */\r\n  public setLastRate(lastRate: number): HirePurchasePlan {\r\n    this._lastRate = lastRate\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get Monthly Rate\r\n   *\r\n   * @returns {number}\r\n   */\r\n  public getLastRate(): number {\r\n    return this._lastRate\r\n  }\r\n  \r\n  /**\r\n   * Get url end point\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getTypeUrl(): string {\r\n    return apiURL.URL_TYPE_HIRE_PURCHASE_PLANS\r\n  }\r\n\r\n  /**\r\n   * Get Payload\r\n   *\r\n   * @returns\r\n   */\r\n  public getPayload() {\r\n    return {}\r\n  }\r\n}\r\n","import * as apiURL from '../configs/ApiUrls'\r\nimport PaymentService from './PaymentService'\r\nimport HirePurchasePlan from '../payments/types/HirePurchasePlan'\r\nimport ResponseErrorsMapper from './mappers/ResponseErrorsMapper'\r\n\r\nexport default (amount: string, currency: string, effectiveInterestRate: string, orderDate: string, paymentService: PaymentService): Promise<Array<HirePurchasePlan>> => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      // Call api end point to get response\r\n      const response: any = await paymentService\r\n        .getRequestAdapter()\r\n        .get(\r\n          `${apiURL.URL_TYPE_HIRE_PURCHASE_PLANS}/?amount=${amount}&currency=${currency}&effectiveInterest=${effectiveInterestRate}&orderDate=${orderDate}`, \r\n          paymentService.getHeidelpay().getPrivateKey()\r\n        )\r\n        \r\n      // Handle errors response\r\n      if (response.errors) {\r\n        return reject(ResponseErrorsMapper(response))\r\n      }\r\n\r\n      const hirepurchasePlansList: Array<HirePurchasePlan> = []\r\n\r\n      response.entity.map((item:any) => {\r\n        // Create new instance heidelpay\r\n        const hirePurchasePlan = new HirePurchasePlan()  \r\n\r\n        // Set values foreach property\r\n        hirePurchasePlan.setNumberOfRates(item.numberOfRates)\r\n        hirePurchasePlan.setDayOfPurchase(item.dayOfPurchase)\r\n        hirePurchasePlan.setOrderDate(item.orderDate)\r\n        hirePurchasePlan.setTotalPurchaseAmount(item.totalPurchaseAmount)\r\n        hirePurchasePlan.setTotalInterestAmount(item.totalInterestAmount)\r\n        hirePurchasePlan.setTotalAmount(item.totalAmount)\r\n        hirePurchasePlan.setEffectiveInterestRate(item.effectiveInterestRate)\r\n        hirePurchasePlan.setNominalInterestRate(item.nominalInterestRate)\r\n        hirePurchasePlan.setFeeFirstRate(item.feeFirstRate)\r\n        hirePurchasePlan.setFeePerRate(item.feePerRate)\r\n        hirePurchasePlan.setMonthlyRate(item.monthlyRate)\r\n        hirePurchasePlan.setLastRate(item.lastRate)\r\n\r\n        // Add hirepurchase item to plan list\r\n        hirepurchasePlansList.push(hirePurchasePlan)\r\n      })\r\n\r\n      // Resolve final result\r\n      resolve(hirepurchasePlansList)\r\n    } catch (error) {\r\n      // Reject with error object\r\n      reject(error)\r\n    }\r\n  })\r\n}\r\n","import * as apiURL from '../configs/ApiUrls'\r\nimport PaymentService from './PaymentService'\r\nimport HirePurchase, { updateHirePurchaseObject} from '../payments/types/HirePurchase'\r\n\r\nexport default (hirePurchaseId: string, args: updateHirePurchaseObject, paymentService: PaymentService): Promise<HirePurchase> => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      // Call api end point to get response\r\n      let payload: any = {}\r\n      const { iban, bic, accountHolder, invoiceDate, invoiceDueDate } = args\r\n\r\n      if (iban) {\r\n        payload.iban = iban\r\n      }\r\n\r\n      if (bic) {\r\n        payload.bic = bic\r\n      }\r\n\r\n      if (accountHolder) {\r\n        payload.accountHolder = accountHolder\r\n      }\r\n\r\n      if (invoiceDate) {\r\n        payload.invoiceDate = invoiceDate\r\n      }\r\n\r\n      if (invoiceDueDate) {\r\n        payload.invoiceDueDate = invoiceDueDate\r\n      }\r\n\r\n      const response: any = await paymentService\r\n        .getRequestAdapter()\r\n        .put(\r\n          `${apiURL.URL_TYPE_HIRE_PURCHASE}/${hirePurchaseId}`,\r\n          payload,\r\n          paymentService.getHeidelpay().getPrivateKey()\r\n        )\r\n\r\n      const hirePurchase = new HirePurchase()\r\n\r\n      hirePurchase.setIban(response.iban)\r\n      hirePurchase.setBic(response.bic)\r\n      hirePurchase.setAccountHolder(response.accountHolder)\r\n      hirePurchase.setInvoiceDate(response.invoiceDate)\r\n      hirePurchase.setInvoiceDueDate(response.invoiceDueDate)\r\n      hirePurchase.setNumberOfRates(response.numberOfRates)\r\n      hirePurchase.setDayOfPurchase(response.dayOfPurchase)\r\n      hirePurchase.setOrderDate(response.orderDate)\r\n      hirePurchase.setTotalPurchaseAmount(response.totalPurchaseAmount)\r\n      hirePurchase.setTotalInterestAmount(response.totalInterestAmount)\r\n      hirePurchase.setTotalAmount(response.totalAmount)\r\n      hirePurchase.setEffectiveInterestRate(response.effectiveInterestRate)\r\n      hirePurchase.setNominalInterestRate(response.nominalInterestRate)\r\n      hirePurchase.setFeeFirstRate(response.feeFirstRate)\r\n      hirePurchase.setFeePerRate(response.feePerRate)\r\n      hirePurchase.setMonthlyRate(response.monthlyRate)\r\n      hirePurchase.setLastRate(response.lastRate)\r\n\r\n      // Resolve final result\r\n      resolve(hirePurchase)    } catch (error) {\r\n      // Reject with error object\r\n      reject(error)\r\n    }\r\n  })\r\n}","import AbstractPayment from './AbstractPayment'\r\nimport Heidelpay from '../../Heidelpay'\r\nimport Resources from './Resources'\r\n\r\nexport default class Webhook extends AbstractPayment  {\r\n  private url: string\r\n  private event: string\r\n  private eventList: Array<any>\r\n  private resources: Resources\r\n\r\n  constructor(heidelpay: Heidelpay) {\r\n    super(heidelpay)\r\n    this.resources = new Resources()\r\n  }\r\n\r\n  /**\r\n   * Get Url\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getUrl(): string {\r\n    return this.url\r\n  }\r\n\r\n  /**\r\n   * Set Url\r\n   *\r\n   * @param {string} url\r\n   */\r\n  public setUrl(url: string) {\r\n    this.url = url\r\n  }\r\n\r\n  /**\r\n   * Get Event\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getEvent(): string {\r\n    return this.event\r\n  }\r\n\r\n  /**\r\n   * Set Event\r\n   *\r\n   * @param {string} event\r\n   */\r\n  public setEvent(event: string) {\r\n    this.event = event\r\n  }\r\n\r\n  /**\r\n   * Get EventList\r\n   *\r\n   * @returns {Array<any>}\r\n   */\r\n  public getEventList(): Array<any> {\r\n    return this.eventList\r\n  }\r\n\r\n  /**\r\n   * Set Event\r\n   *\r\n   * @param {Array<string>} eventList\r\n   */\r\n  public setEventList(eventList: Array<any>) {\r\n    this.eventList = eventList\r\n  }\r\n\r\n  /**\r\n   * Get resources\r\n   *\r\n   * @returns {Resources}\r\n   */\r\n  public getResources(): Resources {\r\n    return this.resources\r\n  }\r\n\r\n  /**\r\n   * Get id by event name\r\n   *\r\n   * @param {string} event\r\n   * @returns {string}\r\n   */\r\n  public getIdByEventName(event: string): string {\r\n    if (this.eventList.length === 0) {\r\n      return 'Event list does not exist'\r\n    }\r\n    const filteredEvent = this.eventList.filter(listEvent => listEvent.event === event)\r\n     if (filteredEvent.length === 0) {\r\n      return 'Passed event has not been registered'\r\n    }\r\n    return filteredEvent[0].id\r\n  }\r\n\r\n  /**\r\n   * Get url by event name\r\n   *\r\n   * @param {string} event\r\n   * @returns {string}\r\n   */\r\n  public getUrlByEventName(event: string): string {\r\n    if (this.eventList.length === 0) {\r\n      return 'Event list does not exist'\r\n    }\r\n    const filteredEvent = this.eventList.filter(listEvent => listEvent.event === event)\r\n    if (filteredEvent.length === 0) {\r\n      return 'Passed event has not been registered'\r\n    }\r\n    return filteredEvent[0].url\r\n  }\r\n}\r\n\r\nexport type webhookObject = {\r\n  url: string\r\n  event?: string\r\n  eventList?: Array<string>\r\n}","import PaymentService from './PaymentService'\r\nimport * as apiURL from '../configs/ApiUrls'\r\nimport Webhook, { webhookObject } from '../payments/business/Webhook'\r\nimport ResponseErrorsMapper from './mappers/ResponseErrorsMapper'\r\n\r\nexport default (args: webhookObject, paymentService: PaymentService): Promise<Webhook> => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const { url, event, eventList } = args\r\n      let payload: any = {url}\r\n\r\n      if (event) {\r\n        payload.event = event\r\n      }\r\n\r\n      if (eventList) {\r\n        payload.eventList = eventList\r\n      }\r\n\r\n      const response: any = await paymentService\r\n        .getRequestAdapter()\r\n        .post(\r\n          apiURL.URL_WEBHOOK,\r\n          payload,\r\n          paymentService.getHeidelpay().getPrivateKey()\r\n        )\r\n\r\n      if (response.errors) {\r\n        return reject(ResponseErrorsMapper(response))\r\n      }\r\n\r\n      let webhook = new Webhook(paymentService.getHeidelpay())\r\n\r\n      if (response.events) {\r\n        webhook.setEventList(response.events)\r\n      } else {\r\n        webhook.setUrl(response.url)\r\n        webhook.setEvent(response.event)\r\n        webhook.setId(response.id)\r\n      }\r\n      \r\n      resolve(webhook)\r\n\r\n    } catch (error) {\r\n      return reject(error)\r\n    }\r\n  })\r\n}","import PaymentService from './PaymentService'\r\nimport * as apiURL from '../configs/ApiUrls'\r\nimport Webhook, { webhookObject } from '../payments/business/Webhook'\r\nimport ResponseErrorsMapper from './mappers/ResponseErrorsMapper'\r\n\r\nexport default (paymentService: PaymentService, webhookId?: string): Promise<Webhook> => {\r\n  return new Promise(async (resolve, reject) => {\r\n    const endpoint = webhookId ? `${apiURL.URL_WEBHOOK}/${webhookId}` : apiURL.URL_WEBHOOK\r\n    try {\r\n      const response: any = await paymentService\r\n        .getRequestAdapter()\r\n        .get(\r\n          endpoint,\r\n          paymentService.getHeidelpay().getPrivateKey()\r\n          )\r\n      \r\n      if (response.errors) {\r\n        return reject(ResponseErrorsMapper(response))\r\n      }\r\n\r\n      let webhook = new Webhook(paymentService.getHeidelpay())\r\n\r\n      if (response.events) {\r\n        webhook.setEventList(response.events)\r\n      } else {\r\n        webhook.setUrl(response.url)\r\n        webhook.setEvent(response.event)\r\n        webhook.setId(response.id)\r\n      }\r\n\r\n      resolve(webhook)\r\n    } catch (error) {\r\n      reject(error)\r\n    }\r\n  })\r\n}","import PaymentService from './PaymentService'\r\nimport * as apiURL from '../configs/ApiUrls'\r\nimport Webhook from '../payments/business/Webhook'\r\nimport ResponseErrorsMapper from './mappers/ResponseErrorsMapper'\r\n\r\nexport default (webhookId: string, args: any, paymentService: PaymentService): Promise<Webhook> => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const { url } = args\r\n      let payload: any = {}\r\n\r\n      if (url) {\r\n        payload.url = url\r\n      }\r\n\r\n      const response: any = await paymentService\r\n        .getRequestAdapter()\r\n        .put(\r\n          `${apiURL.URL_WEBHOOK}/${webhookId}`,\r\n          payload,\r\n          paymentService.getHeidelpay().getPrivateKey()\r\n        )\r\n\r\n      if (response.errors) {\r\n        return reject(ResponseErrorsMapper(response))\r\n      }\r\n\r\n      let webhook = new Webhook(paymentService.getHeidelpay())\r\n      webhook.setUrl(response.url)\r\n      webhook.setEvent(response.event)\r\n      webhook.setId(response.id)\r\n\r\n      resolve(webhook)\r\n    } catch (error) {\r\n      reject(error)\r\n    }\r\n  })\r\n}\r\n","import PaymentService from './PaymentService'\r\nimport * as apiURL from '../configs/ApiUrls'\r\nimport Webhook from '../payments/business/Webhook'\r\nimport ResponseErrorsMapper from './mappers/ResponseErrorsMapper'\r\n\r\nexport default (paymentService: PaymentService, webhookId?: string): Promise<Webhook> => {\r\n  return new Promise(async (resolve, reject) => {\r\n    const endpoint = webhookId ? `${apiURL.URL_WEBHOOK}/${webhookId}` : apiURL.URL_WEBHOOK\r\n    try {\r\n      const response: any = await paymentService\r\n        .getRequestAdapter()\r\n        .delete(\r\n          endpoint,\r\n          {},\r\n          paymentService.getHeidelpay().getPrivateKey()\r\n        )\r\n\r\n      if (response.errors) {\r\n        return reject(ResponseErrorsMapper(response))\r\n      }\r\n      \r\n      if (response.events) {\r\n        resolve(response.events)\r\n      } else {\r\n        resolve(response.id)\r\n      }\r\n    } catch (error) {\r\n      reject(error)\r\n    }\r\n  })\r\n}\r\n","import { FetchAdapter } from '../adapters/FetchAdapter'\r\nimport Heidelpay from '../Heidelpay'\r\nimport PaymentType from '../payments/types/PaymentType'\r\nimport { Customer } from '../payments/Customer'\r\nimport Metadata from '../payments/Metadata'\r\nimport Basket from '../payments/Basket'\r\nimport Authorization, { authorizeObject, chargeAuthorizeObject } from '../payments/business/Authorization'\r\nimport Cancel, { cancelAuthorizeObject, cancelChargeObject } from '../payments/business/Cancel'\r\nimport Charge, { chargeObject } from '../payments/business/Charge'\r\nimport Paypage from '../payments/paypage/Paypage'\r\nimport Linkpay from '../payments/paypage/Linkpay'\r\nimport Payment from '../payments/business/Payment'\r\nimport CreatePaymentType from './CreatePaymentType'\r\nimport FetchPayment from './FetchPayment'\r\nimport FetchPaymentType from './FetchPaymentType'\r\nimport CreateCustomer from './CreateCustomer'\r\nimport UpdateCustomer from './UpdateCustomer'\r\nimport DeleteCustomer from './DeleteCustomer'\r\nimport FetchCustomer from './FetchCustomer'\r\nimport CreateMetadata from './CreateMetadata'\r\nimport FetchMetadata from './FetchMetadata'\r\nimport CreateBasket from './CreateBasket'\r\nimport FetchBasket from './FetchBasket'\r\nimport UpdateBasket from './UpdateBasket'\r\nimport CreateRecurring from './CreateRecurring'\r\nimport AuthorizationService from './Authorization'\r\nimport ChargeService from './Charge'\r\nimport ChargeAuthorization from './ChargeAuthorization'\r\nimport CancelAuthorization from './CancelAuthorization'\r\nimport CancelCharge from './CancelCharge'\r\nimport AbstractPaymentType from '../payments/types/AbstractPaymentType'\r\nimport Shipment, { shipmentObject } from '../payments/business/Shipment'\r\nimport ShipmentService from './Shipment'\r\nimport InitPaypage from './InitPaypage'\r\nimport InitLinkpay from './InitLinkpay'\r\nimport UpdateLinkpay from './UpdateLinkpay'\r\nimport DeleteLinkpay from './DeleteLinkpay'\r\nimport PayoutService from './Payout'\r\nimport Payout, { payoutObject } from '../payments/business/Payout'\r\nimport Recurring, { recurringObject } from '../payments/business/Recurring'\r\nimport FetchPayout from './FetchPayout'\r\nimport HirePurchasePlan from '../payments/types/HirePurchasePlan'\r\nimport HirePurchase, { updateHirePurchaseObject } from '../payments/types/HirePurchase'\r\nimport FetchHirePurchasePlan from './FetchHirePurchasePlan'\r\nimport UpdateHirePurchase from './UpdateHirePurchase'\r\nimport Webhook, { webhookObject } from '../payments/business/Webhook'\r\nimport RegisterWebhook from './RegisterWebhook'\r\nimport FetchWebhook from './FetchWebhook'\r\nimport UpdateWebhook from './UpdateWebhook'\r\nimport DeleteWebhook from './DeleteWebhook'\r\n\r\nexport default class PaymentService {\r\n  private requestAdapter: FetchAdapter\r\n  private heidelpay: Heidelpay\r\n\r\n  constructor(heidelpay: Heidelpay, locale?: string, env?: string) {\r\n    this.heidelpay = heidelpay\r\n    this.requestAdapter = new FetchAdapter(locale, env)\r\n  }\r\n\r\n  /**\r\n   * Get Heidelpay instance\r\n   *\r\n   * @returns {Heidelpay}\r\n   */\r\n  public getHeidelpay(): Heidelpay {\r\n    return this.heidelpay\r\n  }\r\n\r\n  /**\r\n   * Get request adapter\r\n   *\r\n   * @returns {FetchAdapter}\r\n   */\r\n  public getRequestAdapter(): FetchAdapter {\r\n    return this.requestAdapter\r\n  }\r\n\r\n  /**\r\n   * Create payment type\r\n   *\r\n   * @param {PaymentType} paymentType\r\n   * @returns {Promise<PaymentType>}\r\n   */\r\n  public createPaymentType(paymentType: AbstractPaymentType): Promise<PaymentType> {\r\n    return CreatePaymentType(paymentType, this)\r\n  }\r\n\r\n  /**\r\n   * Fetch a payment\r\n   *\r\n   * @param {string} paymentId\r\n   * @returns {Promise<Payment>}\r\n   */\r\n  public fetchPayment(paymentId: string): Promise<Payment> {\r\n    return FetchPayment(paymentId, this)\r\n  }\r\n\r\n  /**\r\n   * Fetch a payment type\r\n   *\r\n   * @param {string} paymentTypeId\r\n   * @returns {Promise<PaymentType>}\r\n   */\r\n  public fetchPaymentType(paymentTypeId: string): Promise<PaymentType> {\r\n    return FetchPaymentType(paymentTypeId, this)\r\n  }\r\n\r\n  /**\r\n   * Create customer\r\n   *\r\n   * @param {Customer} customer\r\n   * @returns {Promise<Customer>}\r\n   */\r\n  public createCustomer(customer: Customer): Promise<Customer> {\r\n    return CreateCustomer(customer, this)\r\n  }\r\n\r\n  /**\r\n   * Fetch customer info by customer Id\r\n   *\r\n   * @param {string} customerId\r\n   * @returns {Promise<Customer>}\r\n   */\r\n  public fetchCustomer(customerId: string): Promise<Customer> {\r\n    return FetchCustomer(customerId, this)\r\n  }\r\n\r\n  /**\r\n   * Update data customer\r\n   *\r\n   * @param {string} customerId\r\n   * @param {Customer} customer\r\n   * @returns {Promise<Customer>}\r\n   */\r\n  public updateCustomer(customerId: string, customer: Customer): Promise<Customer> {\r\n    return UpdateCustomer(customerId, customer, this)\r\n  }\r\n\r\n  /**\r\n   * Delete a customer\r\n   *\r\n   * @param {string} customerId\r\n   * @returns {Promise<boolean>}\r\n   */\r\n  public deleteCustomer(customerId: string): Promise<boolean> {\r\n    return DeleteCustomer(customerId, this)\r\n  }\r\n\r\n  /**\r\n   * Create metadata\r\n   *\r\n   * @param {Metadata} metadata\r\n   * @returns {Promise<Metadata>}\r\n   */\r\n  public createMetadata(metadata: Metadata): Promise<Metadata> {\r\n    return CreateMetadata(metadata, this)\r\n  }\r\n\r\n  /**\r\n   * Fetch metadata\r\n   *\r\n   * @param {Metadata} metadata\r\n   * @returns {Promise<Metadata>}\r\n   */\r\n  public fetchMetadata(metadataId: string): Promise<Metadata> {\r\n    return FetchMetadata(metadataId, this)\r\n  }\r\n\r\n  /**\r\n   * Create basket\r\n   *\r\n   * @param {Basket} baskset\r\n   * @returns {Promise<Basket>}\r\n   */\r\n  public createBasket(basket: Basket): Promise<Basket> {\r\n    return CreateBasket(basket, this)\r\n  }\r\n\r\n  /**\r\n   * Fetch basket\r\n   *\r\n   * @param {Basket} baskset\r\n   * @returns {Promise<Basket>}\r\n   */\r\n  public fetchBasket(basketId: string): Promise<Basket> {\r\n    return FetchBasket(basketId, this)\r\n  }\r\n\r\n  /**\r\n   * Fetch basket\r\n   *\r\n   * @param {Basket} baskset\r\n   * @returns {Promise<Basket>}\r\n   */\r\n  public updateBasket(basketId: string, basket: Basket): Promise<Basket> {\r\n    return UpdateBasket(basketId, basket, this)\r\n  }\r\n\r\n  /**\r\n   * Authorize a payment\r\n   *\r\n   * @param {authorizeObject} args\r\n   * @returns {Promise<Authorization>}\r\n   */\r\n  public authorize(args: authorizeObject): Promise<Authorization> {\r\n    return AuthorizationService(args, this)\r\n  }\r\n\r\n  /**\r\n   * Charge a payment\r\n   *\r\n   * @param {chargeObject} args\r\n   * @returns {Promise<Charge>}\r\n   */\r\n  public charge(args: chargeObject): Promise<Charge> {\r\n    return ChargeService(args, this)\r\n  }\r\n\r\n  /**\r\n   * Charge after authorization\r\n   *\r\n   * @param {chargeAuthorizeObject} args\r\n   * @returns {Promise<Charge>}\r\n   */\r\n  public chargeAuthorization(args: chargeAuthorizeObject): Promise<Charge> {\r\n    return ChargeAuthorization(args, this)\r\n  }\r\n\r\n  /**\r\n   * Reversal a payment\r\n   *\r\n   * @param {cancelAuthorizeObject} args\r\n   * @returns {Promise<Cancel>}\r\n   */\r\n  public cancelAuthorization(args: cancelAuthorizeObject): Promise<Cancel> {\r\n    return CancelAuthorization(args, this)\r\n  }\r\n\r\n  /**\r\n   * Refund a payment\r\n   *\r\n   * @param {cancelChargeObject} args\r\n   * @returns {Promise<Cancel>}\r\n   */\r\n  public cancelCharge(args: cancelChargeObject): Promise<Cancel> {\r\n    return CancelCharge(args, this)\r\n  }\r\n\r\n  /**\r\n   * Shipment\r\n   *\r\n   * @param {string} paymentId\r\n   * @returns {Promise<Shipment>}\r\n   */\r\n  public shipment(paymentId: string, args: shipmentObject): Promise<Shipment> {\r\n    return ShipmentService(paymentId, args, this)\r\n  }\r\n\r\n  /**\r\n   * Init authorize paypage\r\n   * \r\n   * @param {Paypage} paypage\r\n   * @returns {Promise<Paypage>}\r\n   */\r\n  public initAuthorizePaypage(paypage: Paypage): Promise<Paypage> {\r\n    return InitPaypage(paypage, 'authorize', this)\r\n  }\r\n\r\n  /**\r\n   * Init charge paypage\r\n   *\r\n   * @param {Paypage} paypage\r\n   * @returns {Promise<Paypage>}\r\n   */\r\n  public initChargePaypage(paypage: Paypage): Promise<Paypage> {\r\n    return InitPaypage(paypage, 'charge', this)\r\n  }\r\n\r\n  /**\r\n   * Init authorize linkpay\r\n   *\r\n   * @param {Linkpay} linkpay\r\n   * @returns {Promise<Linkpay>}\r\n   */\r\n  public initAuthorizeLinkpay(linkpay: Linkpay): Promise<Linkpay> {\r\n    return InitLinkpay(linkpay, 'authorize', this)\r\n  }\r\n\r\n  /**\r\n   * Init charge linkpay\r\n   *\r\n   * @param {Linkpay} linkpay\r\n   * @returns {Promise<Linkpay>}\r\n   */\r\n  public initChargeLinkpay(linkpay: Linkpay): Promise<Linkpay> {\r\n    return InitLinkpay(linkpay, 'charge', this)\r\n  }\r\n\r\n  /**\r\n   * Update linkpay\r\n   * \r\n   * @param {string} linkpayIdOrAlias\r\n   * @param {updateLinkpayObject} linkpayObj\r\n   * @returns {Promise<Linkpay>}\r\n   */\r\n  public updateLinkpay(linkpayIdOrAlias: string, linkpay: Linkpay): Promise<Linkpay> {\r\n    return UpdateLinkpay(linkpayIdOrAlias, linkpay, this)\r\n  }\r\n\r\n  /**\r\n   * Delete linkpay\r\n   * \r\n   * @param {string} linkpayIdOrAlias\r\n   * @returns {Promise<boolean>}\r\n   */\r\n  public deleteLinkpay(linkpayIdOrAlias: string): Promise<boolean> {\r\n    return DeleteLinkpay(linkpayIdOrAlias, this)\r\n  }\r\n\r\n  /**\r\n   * Init charge paypage\r\n   *\r\n   * @param {Paypage} paypage\r\n   * @returns {Promise<Paypage>}\r\n   */\r\n  public payout(args: payoutObject): Promise<Payout> {\r\n    return PayoutService(args, this)\r\n  }\r\n\r\n  /**\r\n   * Fetch a payout object\r\n   *\r\n   * @param {string} paymentId\r\n   * @param {string} payoutId\r\n   * @returns {Promise<Payment>}\r\n   */\r\n  public fetchPayout(paymentId: string, payoutId: string): Promise<Payout> {\r\n    return FetchPayout(paymentId, payoutId, this)\r\n  }\r\n\r\n  /**\r\n   * Fetch hire purchase plans\r\n   *\r\n   * @param {string} amount\r\n   * @param {string} currency\r\n   * @param {string} effectiveInterestRate\r\n   * @param {string} orderDate\r\n   * @returns {Promise<Payment>}\r\n   */\r\n  public fetchHirePurchasePlan(amount: string, currency: string, effectiveInterestRate: string, orderDate: string): Promise<Array<HirePurchasePlan>> {\r\n    return FetchHirePurchasePlan(amount, currency, effectiveInterestRate, orderDate, this)\r\n  }\r\n\r\n  /**\r\n  * Update HirePurchase\r\n  *\r\n  * @param {string} hirePurchaseId\r\n  * @param {updateHirePurchaseObject} hirePurchase\r\n  * @returns {Promise<HirePurchase>}\r\n  */\r\n  public updateHirePurchase(hirePurchaseId: string, hirePurchase: updateHirePurchaseObject): Promise<HirePurchase> {\r\n    return UpdateHirePurchase(hirePurchaseId, hirePurchase, this) \r\n  }\r\n\r\n  /**\r\n   * Start Recurring \r\n   * \r\n   * @param {string} paymentId \r\n   * @param {recurringObj} args\r\n   */\r\n  public startRecurring(paymentId: string, args: recurringObject): Promise<Recurring> {\r\n    return CreateRecurring(paymentId, args, this)\r\n  }\r\n\r\n  /**\r\n   * Register Webhook \r\n   * \r\n   * @param {webhookObject} args\r\n   * @returns {Promise<Webhook>}\r\n   */\r\n\r\n  public registerWebhook(args: webhookObject): Promise<Webhook> {\r\n    return RegisterWebhook(args, this)\r\n  }\r\n\r\n  /**\r\n  * Fetch Webhook\r\n  *\r\n  * @param {string} id\r\n  * @returns {Promise<Webhook>}\r\n  */\r\n  public fetchWebhook(id?: string): Promise<Webhook> {\r\n    return FetchWebhook(this, id)\r\n  }\r\n\r\n  /**\r\n  * Update Webhook\r\n  *\r\n  * @param {string} id\r\n  * @returns {Promise<Webhook>}\r\n  */\r\n  public updateWebhook(id: string, args: any): Promise<Webhook> {\r\n    return UpdateWebhook(id, args, this)\r\n  }\r\n\r\n  /**\r\n  * Delete Webhook\r\n  *\r\n  * @param {string} id\r\n  * @returns {Promise<Webhook>}\r\n  */\r\n  public deleteWebhook(id?: string): Promise<any> {\r\n    return DeleteWebhook(this, id)\r\n  }\r\n}\r\n","export const ERROR_MISSING_PRIVATE_KEY = 'Missing key to init Heidelpay SDK'","import { SDK_VERSION } from './configs/Version'\r\nimport { Customer } from './payments/Customer'\r\nimport PaymentService from './services/PaymentService'\r\nimport Metadata from './payments/Metadata'\r\nimport Basket from './payments/Basket'\r\nimport PaymentType from './payments/types/PaymentType'\r\nimport * as ErrorMessage from './configs/ErrorMessage'\r\nimport Authorization, { authorizeObject, chargeAuthorizeObject } from './payments/business/Authorization'\r\nimport Payout, { payoutObject } from './payments/business/Payout'\r\nimport Charge, { chargeObject } from './payments/business/Charge'\r\nimport Cancel, { cancelAuthorizeObject, cancelChargeObject } from './payments/business/Cancel'\r\nimport Paypage from './payments/paypage/Paypage'\r\nimport Linkpay from './payments/paypage/Linkpay'\r\nimport Payment from './payments/business/Payment'\r\nimport AbstractPaymentType from './payments/types/AbstractPaymentType'\r\nimport Shipment, { shipmentObject } from './payments/business/Shipment'\r\nimport Recurring, { recurringObject } from './payments/business/Recurring'\r\nimport HirePurchasePlan from './payments/types/HirePurchasePlan'\r\nimport HirePurchase, { updateHirePurchaseObject } from './payments/types/HirePurchase'\r\nimport Webhook, { webhookObject } from './payments/business/Webhook'\r\n\r\nexport default class Heidelpay {\r\n  private paymentService: PaymentService\r\n  private privateKey: string\r\n\r\n  constructor(privateKey: string, locale?: string, env?: string) {\r\n    if (!privateKey) {\r\n      throw new Error(ErrorMessage.ERROR_MISSING_PRIVATE_KEY)\r\n    }\r\n\r\n    this.privateKey = privateKey\r\n    this.paymentService = new PaymentService(this, locale, env)\r\n  }\r\n\r\n  /**\r\n   * Get SDK Version\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getVersion(): string {\r\n      return SDK_VERSION\r\n  }\r\n\r\n  /**\r\n   * Get private key\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getPrivateKey(): string {\r\n    return this.privateKey\r\n  }\r\n\r\n  /**\r\n   * Create a payment\r\n   *\r\n   * @param {PaymentType} paymentType\r\n   * @returns {PaymentType}\r\n   */\r\n  public createPaymentType(paymentType: AbstractPaymentType): Promise<PaymentType> {\r\n    return this.paymentService.createPaymentType(paymentType)\r\n  }\r\n\r\n  /**\r\n   * Create new customer\r\n   *\r\n   * @param {Customer} customer\r\n   * @returns {Customer}\r\n   */\r\n  public createCustomer(customer: Customer): Promise<Customer> {\r\n    return this.paymentService.createCustomer(customer)\r\n  }\r\n\r\n  /**\r\n   * Fetch a customer\r\n   *\r\n   * @param {string} customerId\r\n   * @returns {Promise}\r\n   */\r\n  public fetchCustomer(customerId: string): Promise<Customer> {\r\n    return this.paymentService.fetchCustomer(customerId)\r\n  }\r\n\r\n  /**\r\n   * Update customer\r\n   *\r\n   * @param {string} customerId\r\n   * @param {Customer} customer\r\n   * @returns {Promise<Customer>}\r\n   */\r\n  public updateCustomer(customerId: string, customer: Customer): Promise<Customer> {\r\n    return this.paymentService.updateCustomer(customerId, customer)\r\n  }\r\n\r\n  /**\r\n   * Delete a customer\r\n   *\r\n   * @param {string} customerId\r\n   * @returns {Promise<boolean>}\r\n   */\r\n  public deleteCustomer(customerId: string): Promise<boolean> {\r\n    return this.paymentService.deleteCustomer(customerId)\r\n  }\r\n\r\n  /**\r\n   * Create metadata\r\n   * \r\n   * @param {Metadata} metadata \r\n   */\r\n  public createMetadata(metadata: Metadata): Promise<Metadata> {\r\n    return this.paymentService.createMetadata(metadata)\r\n  }\r\n\r\n  /**\r\n   * Fetch metadata information\r\n   * \r\n   * @param metadataId \r\n   */\r\n  public fetchMetadata(metadataId: string): Promise<Metadata> {\r\n    return this.paymentService.fetchMetadata(metadataId)\r\n  }\r\n\r\n  /**\r\n   * Create a basket\r\n   *\r\n   * @param {Basket} basket\r\n   * @returns {Basket}\r\n   */\r\n  public createBasket(basket: Basket): Promise<Basket> {\r\n    return this.paymentService.createBasket(basket)\r\n  }\r\n\r\n  /**\r\n   * Fetch a basket\r\n   *\r\n   * @param {Basket} basket\r\n   * @returns {Basket}\r\n   */\r\n  public fetchBasket(basketId: string): Promise<Basket> {\r\n    return this.paymentService.fetchBasket(basketId)\r\n  }\r\n\r\n  /**\r\n   * Update basket\r\n   *\r\n   * @param {Basket} basket\r\n   * @returns {Basket}\r\n   */\r\n  public updateBasket(basketId: string, basket: Basket): Promise<Basket> {\r\n    return this.paymentService.updateBasket(basketId, basket)\r\n  }\r\n\r\n  /**\r\n   * Fetch a payment\r\n   *\r\n   * @param {string} orderId\r\n   * @returns {Promise}\r\n   */\r\n  public fetchPaymentType(paymentTypeId: string): Promise<PaymentType> {\r\n    return this.paymentService.fetchPaymentType(paymentTypeId)\r\n  }\r\n\r\n  /**\r\n   * Fetch a payment\r\n   *\r\n   * @param {string} orderId\r\n   * @returns {Promise}\r\n   */\r\n  public fetchPayment(paymentId: string): Promise<Payment> {\r\n    return this.paymentService.fetchPayment(paymentId)\r\n  }\r\n\r\n  /**\r\n   * Fetch authorization transaction\r\n   *\r\n   * @param {string} paymentId\r\n   * @returns {Promise<Authorization>}\r\n   */\r\n  public fetchAuthorization(paymentId: string): Promise<Authorization> {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const payment = await this.paymentService.fetchPayment(paymentId)\r\n        resolve(payment.getAuthorization())\r\n      } catch (error) {\r\n        reject(error)\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Fetch charge transaction\r\n   *\r\n   * @param {string} paymentId\r\n   * @param {string} chargeId\r\n   * @returns {Promise<Charge>}\r\n   */\r\n  public fetchCharge(paymentId: string, chargeId: string): Promise<Charge> {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const payment = await this.paymentService.fetchPayment(paymentId)\r\n        resolve(payment.getCharge(chargeId))\r\n      } catch (error) {\r\n        reject(error)\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Fetch cancel transaction\r\n   *\r\n   * @param {string} paymentId\r\n   * @param {string} refundId\r\n   * @param {string} cancelId\r\n   * @returns {Promise<Cancel>}\r\n   */\r\n  public fetchCancel(paymentId: string, cancelId: string, refundId?: string): Promise<Cancel> {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        // Fetch a payment with payment Id\r\n        const payment = await this.paymentService.fetchPayment(paymentId)\r\n        \r\n        if(refundId) {\r\n          // Get cancel from payment with cancel Id and refund Id\r\n          resolve(payment.getCancel(cancelId, refundId))  \r\n        } else {\r\n          // Get cancel from payment with only cancel Id\r\n          resolve(payment.getCancel(cancelId))  \r\n        }\r\n      } catch (error) {\r\n        reject(error)\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Heidelpay Authorize\r\n   *\r\n   * @param {authorizeObject} args\r\n   * @returns {Authorization}\r\n   */\r\n  public async authorize(args: authorizeObject): Promise<Authorization> {\r\n    let { typeId, customerId } = args\r\n\r\n    // If typeId is a instance of PaymentType (not string)\r\n    // we will create a payment first then authorize with paymentTypeId\r\n    if (typeId instanceof AbstractPaymentType) {\r\n      const paymentType: PaymentType = await this.createPaymentType(typeId)\r\n      typeId = paymentType.getId()\r\n    }\r\n\r\n    // If customerId is a instance of Customer (not string)\r\n    // we will create a payment first then authorize with paymentTypeId\r\n    if (customerId instanceof Customer) {\r\n      const customer: Customer = await this.createCustomer(customerId)\r\n      customerId = customer.getCustomerId()\r\n    }\r\n\r\n    return this.paymentService.authorize({ ...args, typeId: typeId, customerId: customerId })\r\n  }\r\n\r\n  /**\r\n   * Heidelpay Charge\r\n   *\r\n   * @param {chargeObject} args\r\n   * @returns {Promise<Charge>}\r\n   */\r\n  public async charge(args: chargeObject): Promise<Charge> {\r\n    let { typeId, customerId } = args\r\n\r\n    // If typeId is a instance of PaymentType (not string)\r\n    // we will create a payment first then authorize with paymentTypeId\r\n    if (typeId instanceof AbstractPaymentType) {\r\n      const paymentType: PaymentType = await this.createPaymentType(typeId)\r\n      typeId = paymentType.getId()\r\n    }\r\n\r\n    // If customerId is a instance of Customer (not string)\r\n    // we will create a payment first then authorize with paymentTypeId\r\n    if (customerId instanceof Customer) {\r\n      const customer: Customer = await this.createCustomer(customerId)\r\n      customerId = customer.getCustomerId()\r\n    }\r\n\r\n    return this.paymentService.charge({ ...args, typeId: typeId, customerId: customerId })\r\n  }\r\n\r\n  /**\r\n   * Heidelpay Charge after authorization\r\n   *\r\n   * @param {chargeAuthorizeObject} args\r\n   * @returns {Promise<Charge>}\r\n   */\r\n  public chargeAuthorization(args: chargeAuthorizeObject): Promise<Charge> {\r\n    return this.paymentService.chargeAuthorization(args)\r\n  }\r\n\r\n  /**\r\n   * Reversal (Cancel of authorize)\r\n   *\r\n   * @param {cancelAuthorizeObject} args\r\n   * @returns {Promise<Cancel>}\r\n   */\r\n  public cancelAuthorization(args: cancelAuthorizeObject): Promise<Cancel> {\r\n    return this.paymentService.cancelAuthorization(args)\r\n  }\r\n\r\n  /**\r\n   * Cancel charge\r\n   *\r\n   * @param {cancelChargeObject} args\r\n   * @returns {Promise<Cancel>}\r\n   */\r\n  public cancelCharge(args: cancelChargeObject): Promise<Cancel> {\r\n    return this.paymentService.cancelCharge(args)\r\n  }\r\n\r\n  /**\r\n   * Shipment \r\n   * \r\n   * @param paymentId \r\n   */\r\n  public shipment(paymentId: string, args: shipmentObject): Promise<Shipment> {\r\n    return this.paymentService.shipment(paymentId, args)\r\n  }\r\n\r\n  /**\r\n   * Start recurring \r\n   * \r\n   * @param {string} paymentId \r\n   * @param {recurringObj} args\r\n   */\r\n  public startRecurring(paymentId: string, args: recurringObject): Promise<Recurring> {\r\n    return this.paymentService.startRecurring(paymentId, args)\r\n  }\r\n\r\n  /**\r\n   * Init Paypage with authorize\r\n   *\r\n   * @param {Paypage} paypage\r\n   * @returns {Promise<Paypage>}\r\n   */\r\n  public initAuthorizePaypage(paypage: Paypage): Promise<Paypage> {\r\n    return this.paymentService.initAuthorizePaypage(paypage)\r\n  }\r\n\r\n  /**\r\n   * Init Paypage with charge\r\n   *\r\n   * @param {Paypage} paypage\r\n   * @returns {Promise<Paypage>}\r\n   */\r\n  public initChargePaypage(paypage: Paypage): Promise<Paypage> {\r\n    return this.paymentService.initChargePaypage(paypage)\r\n  }\r\n\r\n  /**\r\n   * Init Linkpay with authorize\r\n   *\r\n   * @param {Linkpay} linkpay\r\n   * @returns {Promise<Linkpay>}\r\n   */\r\n  public initAuthorizeLinkpay(linkpay: Linkpay): Promise<Linkpay> {\r\n    return this.paymentService.initAuthorizeLinkpay(linkpay)\r\n  }\r\n\r\n  /**\r\n   * Init Linkpay with charge\r\n   *\r\n   * @param {Linkpay} linkpay\r\n   * @returns {Promise<Linkpay>}\r\n   */\r\n  public initChargeLinkpay(linkpay: Linkpay): Promise<Linkpay> {\r\n    return this.paymentService.initChargeLinkpay(linkpay)\r\n  }\r\n\r\n  /**\r\n   * Update Linkpay\r\n   *\r\n   * @param {string} linkpayIdOrAlias\r\n   * @param {Linkpay} linkpay\r\n   * @returns {Promise<Linkpay>}\r\n   */\r\n  public updateLinkpay(linkpayIdOrAlias: string, linkpay: Linkpay): Promise<Linkpay> {\r\n    return this.paymentService.updateLinkpay(linkpayIdOrAlias, linkpay)\r\n  }\r\n\r\n  /**\r\n   * Delete Linkpay\r\n   *\r\n   * @param {string} linkpayIdOrAlias\r\n   * @returns {Promise<boolean>}\r\n   */\r\n  public deleteLinkpay(linkpayIdOrAlias: string): Promise<boolean> {\r\n    return this.paymentService.deleteLinkpay(linkpayIdOrAlias)\r\n  }\r\n\r\n  /**\r\n   * Heidelpay Payout\r\n   *\r\n   * @param {payoutObject} args\r\n   * @returns {Payout}\r\n   */\r\n  public payout(args: payoutObject): Promise<Payout> {\r\n    return this.paymentService.payout(args)\r\n  }\r\n\r\n  /**\r\n   * Fetch payout transaction\r\n   *\r\n   * @param {string} paymentId\r\n   * @param {string} payoutId\r\n   * @returns {Promise<Payout>}\r\n   */\r\n  public fetchPayout(paymentId: string, payoutId: string): Promise<Payout> {\r\n    return this.paymentService.fetchPayout(paymentId, payoutId)\r\n  }\r\n\r\n  /**\r\n   * Fetch hire purchase plans\r\n   *\r\n   * @param {string} amount\r\n   * @param {string} currency\r\n   * @param {string} effectiveInterestRate\r\n   * @param {string} orderDate\r\n   * @returns {Promise<Payout>}\r\n   */\r\n  public fetchHirePurchasePlan(amount: string, currency: string, effectiveInterestRate: string, orderDate: string): Promise<Array<HirePurchasePlan>> {\r\n    return this.paymentService.fetchHirePurchasePlan(amount, currency, effectiveInterestRate, orderDate)\r\n  }\r\n\r\n  public updateHirePurchase(hirePurchaseId: string, hirePurchase: updateHirePurchaseObject): Promise<HirePurchase> {\r\n    return this.paymentService.updateHirePurchase(hirePurchaseId, hirePurchase)\r\n  }\r\n\r\n  /**\r\n  * Register Webhook\r\n  *\r\n  * @param {webhookObject} args\r\n  * @returns {Promise<Webhook>}\r\n  */\r\n public registerWebhook(args: webhookObject): Promise<Webhook> {\r\n   return this.paymentService.registerWebhook(args)\r\n }\r\n\r\n  /**\r\n  * Fetch Webhook\r\n  *\r\n  * @param {string} id\r\n  * @returns {Promise<Webhook>}\r\n  */\r\n  public fetchWebhook(id?: string): Promise<Webhook> {\r\n    return this.paymentService.fetchWebhook(id)\r\n  }\r\n\r\n  /**\r\n  * Update Webhook\r\n  *\r\n  * @param {any} args\r\n  * @param {string} id\r\n  * @returns {Promise<Webhook>}\r\n  */\r\n  public updateWebhook(id: string, args: any): Promise<Webhook> {\r\n    return this.paymentService.updateWebhook(id, args)\r\n  }\r\n\r\n  /**\r\n  * Delete Webhook\r\n  *\r\n  * @param {string} id\r\n  * @returns {Promise<Webhook>}\r\n  */\r\n  public deleteWebhook(id?: string): Promise<any> {\r\n    return this.paymentService.deleteWebhook(id)\r\n  }\r\n}\r\n","import Heidelpay from '../../Heidelpay'\r\nimport AbstractPaymentType from '../types/AbstractPaymentType'\r\nimport PaymentType from '../types/PaymentType'\r\nimport Resources from '../business/Resources'\r\n\r\nexport default class Paypage extends AbstractPaymentType implements PaymentType {\r\n  private amount: string | number\r\n  private currency: string\r\n  private returnUrl: string\r\n  private logoImage: string\r\n  private fullPageImage: string\r\n  private shopName: string\r\n  private shopDescription: string\r\n  private tagline: string\r\n  private card3ds: boolean\r\n  private invoiceId: string\r\n  private additionalAttributes: any\r\n  private termsAndConditionUrl: string\r\n  private privacyPolicyUrl: string\r\n  private impressumUrl: string\r\n  private helpUrl: string\r\n  private contactUrl: string\r\n  private resources: Resources\r\n  private typeUrl: string\r\n  private redirectUrl: string\r\n  private action: string\r\n  private excludeTypes: Array<string>\r\n\r\n  constructor() {\r\n    super()\r\n    this.additionalAttributes = {}\r\n    this.resources = new Resources()\r\n  }\r\n\r\n  /**\r\n   * Get url end point\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getTypeUrl(): string {\r\n    return this.typeUrl\r\n  }\r\n\r\n  /**\r\n   * Get Payload\r\n   *\r\n   * @returns\r\n   */\r\n  public getPayload() {\r\n    const payload: any = {\r\n      amount: this.getAmount(),\r\n      currency: this.getCurrency(),\r\n      returnUrl: this.getReturnUrl(),\r\n      logoImage: this.getLogoImage(),\r\n      fullPageImage: this.getFullPageImage(),\r\n      shopName: this.getShopName(),\r\n      shopDescription: this.getShopDescription(),\r\n      tagline: this.getTagline(),\r\n      card3ds: this.getCard3ds(),\r\n      invoiceId: this.getInvoiceId(),\r\n      termsAndConditionUrl: this.getTermsAndConditionUrl(),\r\n      privacyPolicyUrl: this.getPrivacyPolicyUrl(),\r\n      impressumUrl: this.getImpressumUrl(),\r\n      helpUrl: this.getHelpUrl(),\r\n      contactUrl: this.getContactUrl(),\r\n      resources: this.getResources(),\r\n      excludeTypes: this.getExcludeTypes()\r\n    }\r\n\r\n    return payload\r\n  }\r\n\r\n  /**\r\n   * Get Amount\r\n   *\r\n   * @param {string} amount\r\n   * @returns {string}\r\n   */\r\n  public getAmount(): string|number {\r\n    return this.amount\r\n  }\r\n\r\n  /**\r\n   * Set amount\r\n   *\r\n   * @param {string} amount\r\n   * @returns {Card}\r\n   */\r\n  public setAmount(amount: string|number): Paypage {\r\n    this.amount = amount\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get currency\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getCurrency(): string {\r\n    return this.currency\r\n  }\r\n\r\n  /**\r\n   * Set currency\r\n   *\r\n   * @param {string} currency\r\n   * @returns {Paypage}\r\n   */\r\n  public setCurrency(currency: string): Paypage {\r\n    this.currency = currency\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get return URL\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getReturnUrl(): string {\r\n    return this.returnUrl\r\n  }\r\n\r\n  /**\r\n   * Set return URL\r\n   *\r\n   * @param {string} returnUrl\r\n   * @returns {Paypage}\r\n   */\r\n  public setReturnUrl(returnUrl: string): Paypage {\r\n    this.returnUrl = returnUrl\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get logo image\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getLogoImage(): string {\r\n    return this.logoImage\r\n  }\r\n\r\n  /**\r\n   * Set logo image\r\n   *\r\n   * @param {string} logoImage\r\n   * @returns {Paypage}\r\n   */\r\n  public setLogoImage(logoImage: string): Paypage {\r\n    this.logoImage = logoImage\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get fullpage image\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getFullPageImage(): string {\r\n    return this.fullPageImage\r\n  }\r\n\r\n  /**\r\n   * Set fullpage image\r\n   *\r\n   * @param {string} fullPageImage\r\n   * @returns {Paypage}\r\n   */\r\n  public setFullPageImage(fullPageImage: string): Paypage {\r\n    this.fullPageImage = fullPageImage\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get shop name\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getShopName(): string {\r\n    return this.shopName\r\n  }\r\n\r\n  /**\r\n   * Set shop name\r\n   *\r\n   * @param {string} shopName\r\n   * @returns {Paypage}\r\n   */\r\n  public setShopName(shopName: string): Paypage {\r\n    this.shopName = shopName\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get shop description\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getShopDescription(): string {\r\n    return this.shopDescription\r\n  }\r\n\r\n  /**\r\n   * Set shop description\r\n   *\r\n   * @param {string} shopDescription\r\n   * @returns {Paypage}\r\n   */\r\n  public setShopDescription(shopDescription: string): Paypage {\r\n    this.shopDescription = shopDescription\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get tagline\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getTagline(): string {\r\n    return this.tagline\r\n  }\r\n\r\n  /**\r\n   * Set tagline\r\n   *\r\n   * @param {string} tagline\r\n   * @returns {Paypage}\r\n   */\r\n  public setTagline(tagline: string): Paypage {\r\n    this.tagline = tagline\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get card3ds\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getCard3ds(): boolean {\r\n    return this.card3ds\r\n  }\r\n\r\n  /**\r\n   * Set card3ds\r\n   *\r\n   * @param {string} card3ds\r\n   * @returns {Paypage}\r\n   */\r\n  public setCard3ds(card3ds: boolean): Paypage {\r\n    this.card3ds = card3ds\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get Invoice Id\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getInvoiceId(): string {\r\n    return this.invoiceId\r\n  }\r\n\r\n  /**\r\n   * Set Additional attributes\r\n   *\r\n   * @param {object} additionalAttributes\r\n   * @returns {Paypage}\r\n   */\r\n  public setAdditionalAttributes(additionalAttributes: object): Paypage {\r\n    this.additionalAttributes = additionalAttributes\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get Additional attributes\r\n   *\r\n   * @returns {object}\r\n   */\r\n  public getAdditionalAttributes(): object {\r\n    return this.additionalAttributes\r\n  }\r\n\r\n  /**\r\n   * Set Invoice Id\r\n   *\r\n   * @param {string} invoiceId\r\n   * @returns {Paypage}\r\n   */\r\n  public setInvoiceId(invoiceId: string): Paypage {\r\n    this.invoiceId = invoiceId\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get terms and condition URL\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getTermsAndConditionUrl(): string {\r\n    return this.termsAndConditionUrl\r\n  }\r\n\r\n  /**\r\n   * Set terms and condition URL\r\n   *\r\n   * @param {string} termsAndConditionUrl\r\n   * @returns {Paypage}\r\n   */\r\n  public setTermsAndConditionUrl(termsAndConditionUrl: string): Paypage {\r\n    this.termsAndConditionUrl = termsAndConditionUrl\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get privacy URL\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getPrivacyPolicyUrl(): string {\r\n    return this.privacyPolicyUrl\r\n  }\r\n\r\n  /**\r\n   * Set privacy URL\r\n   *\r\n   * @param {string} privacyPolicyUrl\r\n   * @returns {Paypage}\r\n   */\r\n  public setPrivacyPolicyUrl(privacyPolicyUrl: string): Paypage {\r\n    this.privacyPolicyUrl = privacyPolicyUrl\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get Impressum URL\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getImpressumUrl(): string {\r\n    return this.impressumUrl\r\n  }\r\n\r\n  /**\r\n   * Set Impresssum URL\r\n   *\r\n   * @param {string} impressumUrl\r\n   * @returns {Paypage}\r\n   */\r\n  public setImpressumUrl(impressumUrl: string): Paypage {\r\n    this.impressumUrl = impressumUrl\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get Help URL\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getHelpUrl(): string {\r\n    return this.helpUrl\r\n  }\r\n\r\n  /**\r\n   * Set Help URL\r\n   *\r\n   * @param {string} helpUrl\r\n   * @returns {Paypage}\r\n   */\r\n  public setHelpUrl(helpUrl: string): Paypage {\r\n    this.helpUrl = helpUrl\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Set contact URL\r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getContactUrl(): string {\r\n    return this.contactUrl\r\n  }\r\n\r\n  /**\r\n   * Set contact URL\r\n   *\r\n   * @param {string} contactUrl\r\n   * @returns {Paypage}\r\n   */\r\n  public setContactUrl(contactUrl: string): Paypage {\r\n    this.contactUrl = contactUrl\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get redirectUrl \r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getRedirectUrl(): string {\r\n    return this.redirectUrl\r\n  }\r\n\r\n\r\n  /**\r\n   * Set redirectUrl\r\n   *\r\n   * @param {string} redirectUrl\r\n   * @returns {Paypage}\r\n   */\r\n  public setRedirectUrl(redirectUrl: string): Paypage {\r\n    this.redirectUrl = redirectUrl\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get action \r\n   *\r\n   * @returns {string}\r\n   */\r\n  public getAction(): string {\r\n    return this.action\r\n  }\r\n\r\n  /**\r\n   * Set redirectUrl\r\n   *\r\n   * @param {string} redirectUrl\r\n   * @returns {Paypage}\r\n   */\r\n  public setAction(action: string): Paypage {\r\n      this.action = action\r\n      return this\r\n  }\r\n\r\n  /**\r\n   * Get resources\r\n   *\r\n   * @returns {Resources}\r\n   */\r\n  public getResources(): Resources {\r\n    return this.resources\r\n  }\r\n\r\n  /**\r\n   * Set excludeTypes\r\n   *\r\n   * @param {Array<string>} excludeTypes\r\n   * @returns {Paypage}\r\n   */\r\n  public setExcludeTypes(excludeTypes: Array<string>): Paypage {\r\n    this.excludeTypes = excludeTypes\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get excludeTypes\r\n   *\r\n   * @returns {Array<string>}\r\n   */\r\n  public getExcludeTypes(): Array<string> {\r\n    return this.excludeTypes\r\n  }\r\n\r\n  /**\r\n   * Set resources\r\n   *\r\n   * @param {*} resources\r\n   */\r\n  public setResources(resources: any) {\r\n    this.resources\r\n      .setCustomerId(resources.customerId)\r\n      .setMetadataId(resources.metadataId)\r\n      .setPaymentId(resources.paymentId)\r\n      .setBasketId(resources.basketId)\r\n  }\r\n}"],"names":["Salutation","tslib_1.__extends","apiURL.URL_TYPE_ALIPAY","apiURL.URL_TYPE_BANCONTACT","apiURL.URL_TYPE_CARD","apiURL.URL_TYPE_EPS","apiURL.URL_TYPE_GIROPAY","apiURL.URL_TYPE_HIRE_PURCHASE","apiURL.URL_TYPE_IDEAL","apiURL.URL_TYPE_INVOICE","apiURL.URL_TYPE_INVOICE_FACTORING","apiURL.URL_TYPE_INVOICE_GUARANTEED","apiURL.URL_TYPE_INVOICE_SECURED","apiURL.URL_TYPE_PAYPAL","apiURL.URL_TYPE_PIS","apiURL.URL_TYPE_PREPAYMENT","apiURL.URL_TYPE_PRZELEWY24","apiURL.URL_TYPE_SEPA_DIRECT_DEBIT","apiURL.URL_TYPE_SEPA_DIRECT_DEBIT_GUARANTEED","apiURL.URL_TYPE_SEPA_DIRECT_DEBIT_SECURED","apiURL.URL_TYPE_SOFORT","apiURL.URL_TYPE_WECHATPAY","EPS","PIS","apiURL.URL_PAYMENT","Utils.getPaymentTypeFromTypeId","Utils.mapResponsePaymentType","apiURL.URL_CUSTOMER","apiURL.URL_METADATA","apiURL.URL_BASKET","Utils.replaceUrl","apiURL.URL_RECURRING","apiURL.URL_PAYMENT_AUTHORIZE","apiURL.URL_PAYMENT_CHARGE","apiURL.URL_PAYMENT_CHARGE_AUTHORIZE","apiURL.URL_PAYMENT_AUTHORIZE_CANCEL","apiURL.URL_PAYMENT_CHARGE_CANCEL","apiURL.URL_PAYMENT_SHIPMENT","apiURL.URL_PAYPAGE_AUTHORIZE","apiURL.URL_PAYPAGE_CHARGE","apiURL.URL_LINKPAY_AUTHORIZE","apiURL.URL_LINKPAY_CHARGE","apiURL.URL_LINKPAY","apiURL.URL_PAYMENT_PAYOUT","apiURL.URL_TYPE_HIRE_PURCHASE_PLANS","apiURL.URL_WEBHOOK","ErrorMessage.ERROR_MISSING_PRIVATE_KEY"],"mappings":"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"}